"use strict";(self.webpackChunkstacks=self.webpackChunkstacks||[]).push([[5903],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var a=n.createContext({}),u=function(e){var t=n.useContext(a),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(a.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=u(r),f=o,v=d["".concat(a,".").concat(f)]||d[f]||l[f]||i;return r?n.createElement(v,s(s({ref:t},p),{},{components:r})):n.createElement(v,s({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,s=new Array(i);s[0]=d;var c={};for(var a in t)hasOwnProperty.call(t,a)&&(c[a]=t[a]);c.originalType=e,c.mdxType="string"==typeof e?e:o,s[1]=c;for(var u=2;u<i;u++)s[u]=r[u];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},361:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return a},metadata:function(){return u},toc:function(){return p},default:function(){return d}});var n=r(7462),o=r(3366),i=(r(7294),r(3905)),s=["components"],c={id:"repository_overview_netcore",title:"Repository Overview",sidebar_label:"Repository Structure",hide_title:!1,hide_table_of_contents:!0,description:".NET Core REST API application - Repositories Overview",keywords:[".net core","rest api","cqrs","example","template","repository","structure"]},a=void 0,u={unversionedId:"workloads/azure/backend/netcore/architecture/repository_overview_netcore",id:"workloads/azure/backend/netcore/architecture/repository_overview_netcore",isDocsHomePage:!1,title:"Repository Overview",description:".NET Core REST API application - Repositories Overview",source:"@site/docs/workloads/azure/backend/netcore/architecture/repository_overview_netcore.md",sourceDirName:"workloads/azure/backend/netcore/architecture",slug:"/workloads/azure/backend/netcore/architecture/repository_overview_netcore",permalink:"/docs/workloads/azure/backend/netcore/architecture/repository_overview_netcore",tags:[],version:"current",frontMatter:{id:"repository_overview_netcore",title:"Repository Overview",sidebar_label:"Repository Structure",hide_title:!1,hide_table_of_contents:!0,description:".NET Core REST API application - Repositories Overview",keywords:[".net core","rest api","cqrs","example","template","repository","structure"]},sidebar:"docs",previous:{title:"Architecture Overview",permalink:"/docs/workloads/azure/backend/netcore/architecture/architecture_overview_netcore"},next:{title:"Solution Structure",permalink:"/docs/workloads/azure/backend/netcore/architecture/project_structure_netcore"}},p=[],l={toc:p};function d(e){var t=e.components,r=(0,o.Z)(e,s);return(0,i.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"\u251c\u2500\u2500 build\n\u2502   \u251c\u2500\u2500 azDevOps: stores configuration, build steps and scripts used by azure dev ops only\n\u2502   \u251c\u2500\u2500 jenkins: stores configuration, build steps and scripts used by jenkins only\n\u2502   \u2514\u2500\u2500 scripts: stores scripts used by build steps that can be reused by multiple\n|                tools without changes. ie: Docker script for Container Image creation\n\u251c\u2500\u2500 deploy\n|  \u251c\u2500\u2500 k8s: stores yaml files for k8s deployments. i.e: deployments, services,\n|  |  |    configMap and related dependencies for each service in an application\n|  |  \u251c\u2500\u2500 ui: stores yaml for ui service\n|  |  \u2514\u2500\u2500 api: stores yaml for the api service and configuration files\n\u2502  \u2502     \u251c\u2500\u2500 base: store raw yaml used by k8s\n\u2502  \u2502     \u251c\u2500\u2500 kustomization: store kustomize files(for kubectl apply -k)\n\u2502  \u2502     \u2502   \u251c\u2500\u2500 dev: configuration files for dev environment\n\u2502  \u2502     \u2502   \u2514\u2500\u2500 test: configuration files for test environment\n\u2502  \u2502     \u2514\u2500\u2500 helm-chart: store helm chart files(if helm used)\n\u2502  \u2502         \u2514\u2500\u2500 templates\n|  \u251c\u2500\u2500 serviceFabric: scripts used to deploy applications on serviceFabric\n|  \u251c\u2500\u2500 terraform: terraform scripts used to provision dependencies\n|  |              only needed by this application\n|  \u2514\u2500\u2500 scripts: deployment scripts shared by multiple tools. ie: Variable substitution\n\u251c\u2500\u2500 contracts: stores swagger specs, ui mocks and other documents describing\n|              the overall solution\n\u2514\u2500\u2500 src\n   \u251c\u2500\u2500 services (i.e: apis, queue listener, scheduled jobs)\n   \u251c\u2500\u2500 tests: stores tests not built in other services solutions (functional tests,\n   |          performance, etc)\n   \u2514\u2500\u2500 ui: stores the front end service and components\n")),(0,i.kt)("p",null,"There are 3 repositories available:"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/amido/stacks-dotnet"},"stacks-dotnet")," for a simple web API ",(0,i.kt)("br",null),"\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/amido/stacks-dotnet-cqrs"},"stacks-dotnet-cqrs")," for a web API with CQRS ",(0,i.kt)("br",null),"\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/amido/stacks-dotnet-cqrs-events"},"stacks-dotnet-cqrs-events")," for a web API with CQRS and Event Listening (with function and worker service) ",(0,i.kt)("br",null)))}d.isMDXComponent=!0}}]);