"use strict";(self.webpackChunkstacks=self.webpackChunkstacks||[]).push([[3755],{7754:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"getting_started/logger/winston","title":"winston","description":"@ensono-stacks/logger:winston","source":"@site/docs/getting_started/logger/winston.md","sourceDirName":"getting_started/logger","slug":"/getting_started/logger/winston","permalink":"/docs/getting_started/logger/winston","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{}}');var r=t(4848),i=t(8453);const o={},l=void 0,d={},c=[{value:"@ensono-stacks/logger",id:"ensono-stackslogger",level:3},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Usage",id:"usage",level:2},{value:"Command line arguments",id:"command-line-arguments",level:3},{value:"Generator Output",id:"generator-output",level:3},{value:"Importing the logger into your app",id:"importing-the-logger-into-your-app",level:3},{value:"Log Levels",id:"log-levels",level:3},{value:"Other resources",id:"other-resources",level:3}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h3,{id:"ensono-stackslogger",children:["@ensono-stacks/logger",":winston"]}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"Add Winston to your project"}),(0,r.jsxs)(n.p,{children:["Generates a new Nx library which contains a ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"https://github.com/winstonjs/winston",children:"Winston"})})," logger instance and associated config."]}),(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),(0,r.jsx)(n.p,{children:"An existing Ensono Stacks workspace."}),(0,r.jsx)(n.h2,{id:"usage",children:"Usage"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"nx g @ensono-stacks/logger:winston\n"})}),(0,r.jsx)(n.h3,{id:"command-line-arguments",children:"Command line arguments"}),(0,r.jsx)(n.p,{children:"The following command line arguments are available:"}),(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Option"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Accepted Values"}),(0,r.jsx)(n.th,{children:"Default"}),(0,r.jsx)(n.th,{children:"Available in interactive prompt?"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"--name"}),(0,r.jsx)(n.td,{children:"Name of the generated library"}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"N/A"}),(0,r.jsx)(n.td,{children:"Yes"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"--tags"}),(0,r.jsx)(n.td,{children:"Add tags to the project (used for linting)"}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"N/A"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"--directory"}),(0,r.jsx)(n.td,{children:"Directory where the project is placed (within Nx libs directory)"}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"N/A"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"--skipFormat"}),(0,r.jsx)(n.td,{children:"Skip formatting files"}),(0,r.jsx)(n.td,{children:"boolean"}),(0,r.jsx)(n.td,{children:"true/false"}),(0,r.jsx)(n.td,{children:"false"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"--logLevelType"}),(0,r.jsx)(n.td,{children:"The type of log levels that will be used"}),(0,r.jsx)(n.td,{children:"enum"}),(0,r.jsx)(n.td,{children:"cli/syslog/npm"}),(0,r.jsx)(n.td,{children:"npm"}),(0,r.jsx)(n.td,{children:"Yes"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"--consoleLogs"}),(0,r.jsx)(n.td,{children:"Output logs to the console"}),(0,r.jsx)(n.td,{children:"boolean"}),(0,r.jsx)(n.td,{children:"true/false"}),(0,r.jsx)(n.td,{children:"false"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"--fileTransportPath"}),(0,r.jsx)(n.td,{children:"File path used for logs transport"}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"N/A"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"--httpTransport"}),(0,r.jsx)(n.td,{children:"Add a http transport"}),(0,r.jsx)(n.td,{children:"boolean"}),(0,r.jsx)(n.td,{children:"true/false"}),(0,r.jsx)(n.td,{children:"false"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"--httpTransportHost"}),(0,r.jsx)(n.td,{children:"Remote host of the HTTP logging endpoint"}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"N/A"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"--httpTransportPort"}),(0,r.jsx)(n.td,{children:"Remote port of the HTTP logging endpoint"}),(0,r.jsx)(n.td,{children:"number"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"N/A"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"--httpTransportPath"}),(0,r.jsx)(n.td,{children:"Remote URI of the HTTP logging endpoint"}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"N/A"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"--httpTransportSSL"}),(0,r.jsx)(n.td,{children:"Use SSL for the HTTP logging endpoint"}),(0,r.jsx)(n.td,{children:"boolean"}),(0,r.jsx)(n.td,{children:"true/false"}),(0,r.jsx)(n.td,{children:"false"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"--streamPath"}),(0,r.jsx)(n.td,{children:"Stream transport path"}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"N/A"}),(0,r.jsx)(n.td,{})]})]})]}),(0,r.jsx)(n.h3,{id:"generator-output",children:"Generator Output"}),(0,r.jsx)(n.p,{children:"The generator will create a new application within your libs folder with the following structure:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:".\n\u251c\u2500\u2500 libs/[libname]\n\u2502   \u251c\u2500\u2500 src\n\u2502   \u251c\u2500\u2500 \u251c\u2500\u2500 index.ts // Contains the Winston configuration and creates the logger instance\n\u2502   \u251c\u2500\u2500 \u251c\u2500\u2500 index.test.ts // Tests for the logger\n\u2502   \u251c\u2500\u2500 .eslintrc.json // ESLint config - extends from workspace config\n\u2502   \u251c\u2500\u2500 jest.config.ts // Jest config - extends from workspace config\n\u2502   \u251c\u2500\u2500 project.json // Nx config file for the library\n\u2502   \u251c\u2500\u2500 tsconfig.json // Main Typescript config for the library - extends workspace config & references the below two tsconfig files\n\u2502   \u251c\u2500\u2500 tsconfig.lib.json // Typescript config for the library's source files (excluding tests)\n\u2502   \u251c\u2500\u2500 tsconfig.spec.json // Typescript config for the library's test files\n\u2502   \u251c\u2500\u2500 README.md // Information on the library and how to run scripts\n\u251c\u2500\u2500 jest.config.ts // Workspace-level Jest config - created if this does not already exist\n\u2514\u2500\u2500 jest.preset.ts // Workspace-leve Jest preset that extends `@nx/jest/preset` - created if this does not already exist.\n\n"})}),(0,r.jsx)(n.p,{children:"Additionally, the following files will be modified"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:".\n\u251c\u2500\u2500 nx.json // Adds configuration for Jest tests if this has not already been done by another generator\n\u251c\u2500\u2500 package.json // Adds winston as a dependency\n\u2514\u2500\u2500 tsconfig.base.json // Adds new library into `paths` field\n\n"})}),(0,r.jsx)(n.h3,{id:"importing-the-logger-into-your-app",children:"Importing the logger into your app"}),(0,r.jsxs)(n.p,{children:["Having created a logger using the above ",(0,r.jsx)(n.a,{href:"#usage",children:"command"}),", import the Winston logger instance from the newly created library (the import name can be found within the ",(0,r.jsx)(n.code,{children:"tsconfig.base.json"})," files ",(0,r.jsx)(n.code,{children:"paths"})," field) into your application:"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import logger from '@workspace-name/mynewlogger'\n\nlogger.log({\n    level: 'info',\n    message: 'I love Ensono Stacks!', \n})\n"})}),(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["You would need to change the ",(0,r.jsx)(n.code,{children:"@workspace-name"})," to the name of your workspace"]})}),(0,r.jsx)(n.p,{children:"To change how Winston is configured, edit the created library:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:"title=./libs/mynewlogger/src/index.ts",children:"const logger = winston.createLogger(logConfiguration);\n\n// Custom transport for non-production\nif (process.env.NODE_ENV !== 'production') {\n    logger.add(new winston.transports.Console({\n        format: winston.format.simple(), \n    })) \n} \n \nexport default logger;\n"})}),(0,r.jsx)(n.h3,{id:"log-levels",children:"Log Levels"}),(0,r.jsxs)(n.p,{children:["Winston provides several ",(0,r.jsx)(n.a,{href:"https://github.com/winstonjs/winston#logging-levels",children:"log levels"})," that you can use to categorize and filter log messages.\nThese log levels are commonly used in many logging libraries and provide a way to prioritize and categorize log messages based on their severity."]}),(0,r.jsxs)(n.p,{children:["By default Winston uses the following npm ",(0,r.jsx)(n.a,{href:"https://github.com/winstonjs/winston#logging-levels",children:"log levels"}),":"]}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"error"}),": Used to log errors and exceptions. This log level is for critical issues that require immediate attention."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"warn"}),": Indicates a potential issue or warning that does not necessarily disrupt the application but should be noted."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"info"}),": This is the default log level and is used for general information about the application's operations. It's often used to log major events or milestones."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"http"}),": Logs HTTP related messages, such as host, path and response/request details."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"verbose"}),": A step above debug, providing more detailed information but not as noisy as silly or debug."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"debug"}),": Used for debugging and providing additional information about the application's state and behavior."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"silly"}),": The lowest log level, often used internally for debugging and tracing purposes."]}),"\n"]}),"\n"]}),(0,r.jsxs)(n.p,{children:["For more information on log level severity please refer to the ",(0,r.jsx)(n.a,{href:"https://github.com/winstonjs/winston#logging-levels",children:"log levels"})," section of the Winston documentation."]}),(0,r.jsx)(n.h3,{id:"other-resources",children:"Other resources"}),(0,r.jsxs)(n.p,{children:["Documentation for Winston can be found ",(0,r.jsx)(n.a,{href:"https://github.com/winstonjs/winston",children:"here"}),"."]})]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var s=t(6540);const r={},i=s.createContext(r);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);