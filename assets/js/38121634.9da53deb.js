"use strict";(self.webpackChunkstacks=self.webpackChunkstacks||[]).push([[1059],{5383:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>i,default:()=>d,frontMatter:()=>n,metadata:()=>c,toc:()=>p});var s=r(4848),o=r(8453);const n={id:"repository_overview_netcore",title:"Repository Overview",sidebar_label:"Repository Structure",hide_title:!1,hide_table_of_contents:!0,description:".NET Core REST API application - Repositories Overview",keywords:[".net core","rest api","cqrs","example","template","repository","structure"]},i=void 0,c={id:"workloads/azure/backend/netcore/architecture/repository_overview_netcore",title:"Repository Overview",description:".NET Core REST API application - Repositories Overview",source:"@site/docs/workloads/azure/backend/netcore/architecture/repository_overview_netcore.md",sourceDirName:"workloads/azure/backend/netcore/architecture",slug:"/workloads/azure/backend/netcore/architecture/repository_overview_netcore",permalink:"/docs/workloads/azure/backend/netcore/architecture/repository_overview_netcore",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"repository_overview_netcore",title:"Repository Overview",sidebar_label:"Repository Structure",hide_title:!1,hide_table_of_contents:!0,description:".NET Core REST API application - Repositories Overview",keywords:[".net core","rest api","cqrs","example","template","repository","structure"]},sidebar:"docs",previous:{title:"Architecture Overview",permalink:"/docs/workloads/azure/backend/netcore/architecture/architecture_overview_netcore"},next:{title:"Simple Api Solution Structure",permalink:"/docs/workloads/azure/backend/netcore/architecture/project_structure/project_structure_netcore_simple_api"}},a={},p=[];function u(e){const t={a:"a",code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-text",children:"\u251c\u2500\u2500 build: stores build configurations\n\u2502\xa0\xa0 \u251c\u2500\u2500 azDevOps: stores configuration, build steps and scripts used by Azure DevOps\n\u2502\xa0\xa0 \u251c\u2500\u2500 github: stores configuration, build steps and scripts used by GitHub Actions\n\u2502\xa0\xa0 \u251c\u2500\u2500 scripts: stores reusable scripts used by the build pipelines\n\u2502\xa0\xa0 \u2514\u2500\u2500 taskctl: stores configuration, build steps and scripts used by TaskCtl\n\u251c\u2500\u2500 deploy: stores deployment configurations\n\u2502\xa0\xa0 \u251c\u2500\u2500 aws: stores deployment steps and scripts used by AWS\n\u2502\xa0\xa0 \u251c\u2500\u2500 azure: stores deployment steps and scripts used by Azure DevOps\n\u2502\xa0\xa0 \u251c\u2500\u2500 helm: stores Helm charts\n\u2502\xa0\xa0 \u2514\u2500\u2500 scripts: stores reusable scripts used by the deployment pipelines\n\u251c\u2500\u2500 docs: stores documentation\n\u251c\u2500\u2500 scripts: stores scripts used for testing, development and other purposes\n\u251c\u2500\u2500 src: stores the source code\n\u2502\xa0\xa0 \u251c\u2500\u2500 background-worker: stores the background worker function template\n\u2502\xa0\xa0 \u251c\u2500\u2500 cqrs: stores the CQRS template\n\u2502\xa0\xa0 \u251c\u2500\u2500 func-aeh-listener: stores the Azure Event Hub listener function template\n\u2502\xa0\xa0 \u251c\u2500\u2500 func-asb-listener: stores the Azure Service Bus listener function template\n\u2502\xa0\xa0 \u251c\u2500\u2500 func-cosmosdb-worker: stores the CosmosDB worker function template\n\u2502\xa0\xa0 \u251c\u2500\u2500 shared: stores the shared code\n\u2502\xa0\xa0 \u2514\u2500\u2500 simple-api: stores the simple API template\n"})}),"\n",(0,s.jsx)(t.p,{children:"There is 1 repository available:"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https://github.com/Ensono/stacks-dotnet",children:"stacks-dotnet"})," for all available dotnet templates"]})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>c});var s=r(6540);const o={},n=s.createContext(o);function i(e){const t=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(n.Provider,{value:t},e.children)}}}]);