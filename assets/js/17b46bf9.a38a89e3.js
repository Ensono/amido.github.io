"use strict";(self.webpackChunkstacks=self.webpackChunkstacks||[]).push([[8638],{3905:function(e,a,t){t.d(a,{Zo:function(){return c},kt:function(){return k}});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function l(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=n.createContext({}),d=function(e){var a=n.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},c=function(e){var a=d(e.components);return n.createElement(s.Provider,{value:a},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},g=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=d(t),g=r,k=u["".concat(s,".").concat(g)]||u[g]||p[g]||i;return t?n.createElement(k,o(o({ref:a},c),{},{components:t})):n.createElement(k,o({ref:a},c))}));function k(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=g;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var d=2;d<i;d++)o[d]=t[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}g.displayName="MDXCreateElement"},8195:function(e,a,t){t.r(a),t.d(a,{assets:function(){return c},contentTitle:function(){return s},default:function(){return k},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return u}});var n=t(7462),r=t(3366),i=(t(7294),t(3905)),o=["components"],l={id:"data_engineering_intro_azure",title:"Data Engineering Overview",sidebar_label:"Data Engineering Overview",hide_title:!1,hide_table_of_contents:!1,description:"Data Engineering in Ensono Stacks",keywords:["ingest","silver","gold","bronze","databricks","etl","medallion"]},s=void 0,d={unversionedId:"workloads/azure/data/data_engineering/data_engineering_intro_azure",id:"workloads/azure/data/data_engineering/data_engineering_intro_azure",title:"Data Engineering Overview",description:"Data Engineering in Ensono Stacks",source:"@site/docs/workloads/azure/data/data_engineering/data_engineering_intro_azure.md",sourceDirName:"workloads/azure/data/data_engineering",slug:"/workloads/azure/data/data_engineering/data_engineering_intro_azure",permalink:"/docs/workloads/azure/data/data_engineering/data_engineering_intro_azure",draft:!1,tags:[],version:"current",frontMatter:{id:"data_engineering_intro_azure",title:"Data Engineering Overview",sidebar_label:"Data Engineering Overview",hide_title:!1,hide_table_of_contents:!1,description:"Data Engineering in Ensono Stacks",keywords:["ingest","silver","gold","bronze","databricks","etl","medallion"]},sidebar:"docs",previous:{title:"Security",permalink:"/docs/workloads/azure/data/architecture/security_data_azure"},next:{title:"Stacks Data Utilities",permalink:"/docs/workloads/azure/data/data_engineering/stacks_data_utilities"}},c={},u=[{value:"Lakehouse approach",id:"lakehouse-approach",level:2},{value:"Medallion architecture",id:"medallion-architecture",level:3},{value:"Fabric lakehouse",id:"fabric-lakehouse",level:3},{value:"Stacks Data utilities",id:"stacks-data-utilities",level:2},{value:"Quality assurance",id:"quality-assurance",level:2},{value:"Sample dataset",id:"sample-dataset",level:2}],p={toc:u},g="wrapper";function k(e){var a=e.components,t=(0,r.Z)(e,o);return(0,i.kt)(g,(0,n.Z)({},p,t,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Ensono Stacks accelerates the generation of production-ready data engineering workloads and pipelines for a data lakehouse. New data engineering workloads can be generated through the ",(0,i.kt)("a",{parentName:"p",href:"#stacks-data-utilities"},"Datastacks CLI"),", while a range of example data workloads and pipelines are also provided. These workloads cover all stages from ingesting data from source, applying data transformations across data lake layers, ultimately enabling end-user data visualisations and analytics."),(0,i.kt)("h2",{id:"lakehouse-approach"},"Lakehouse approach"),(0,i.kt)("p",null,"The Ensono Stacks Data Platform is based upon a ",(0,i.kt)("em",{parentName:"p"},"Lakehouse")," architecture. This approach combines the benefits of both data warehouses and data lakes, to provide a platform that is fully scalable, flexible and performant, along with governance and management capabilities. It can support all use cases, from complex machine learning to standard BI reporting and analysis."),(0,i.kt)("h3",{id:"medallion-architecture"},"Medallion architecture"),(0,i.kt)("p",null,"The data lake structure in Ensono Stacks is based upon the\n",(0,i.kt)("a",{parentName:"p",href:"https://www.databricks.com/glossary/medallion-architecture"},"medallion architecture")," design pattern. The default data lake deployed through Ensono Stacks contains the following data layers:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Data lake layer"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:null},"Default container name"),(0,i.kt)("th",{parentName:"tr",align:null},"Data format"),(0,i.kt)("th",{parentName:"tr",align:null},"Stacks workload type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Bronze"),(0,i.kt)("td",{parentName:"tr",align:null},"The initial landing area where data is stored as per its original source, prior to any transformations."),(0,i.kt)("td",{parentName:"tr",align:null},"raw"),(0,i.kt)("td",{parentName:"tr",align:null},"Parquet"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/workloads/azure/data/data_engineering/ingest_data_azure"},"Data ingest"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Silver"),(0,i.kt)("td",{parentName:"tr",align:null},"The data has been cleansed, validated and stored in an optimal format to support downstream analytic use-cases."),(0,i.kt)("td",{parentName:"tr",align:null},"staging"),(0,i.kt)("td",{parentName:"tr",align:null},"Delta"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/workloads/azure/data/data_engineering/data_processing"},"Data processing"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Gold"),(0,i.kt)("td",{parentName:"tr",align:null},"Reliable data entities prepared for specific use-cases. These typically combine and aggregate datasets from the silver layer."),(0,i.kt)("td",{parentName:"tr",align:null},"conformance"),(0,i.kt)("td",{parentName:"tr",align:null},"Delta"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/workloads/azure/data/data_engineering/data_processing"},"Data processing"))))),(0,i.kt)("h3",{id:"fabric-lakehouse"},"Fabric lakehouse"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/fabric/"},"Microsoft Fabric")," can be used as the lakehouse layer in an Ensono Stacks Data Platform. Fabric provides an all-in-one analytics experience, with a range of tools for data analysts, data engineers and data scientists. It also closely integrates with Power BI. Full details on getting a Fabric lakehouse up and running with your Ensono Stacks Data Platform are in the ",(0,i.kt)("a",{parentName:"p",href:"/docs/workloads/azure/data/getting_started/fabric_deployment_guide"},"getting started")," section."),(0,i.kt)("h2",{id:"stacks-data-utilities"},"Stacks Data utilities"),(0,i.kt)("p",null,"The deployed platform utilises the ",(0,i.kt)("a",{parentName:"p",href:"/docs/workloads/azure/data/data_engineering/stacks_data_utilities"},"Stacks Data Python library"),", which provides a range of utilities to enhance the process for developing and deploying production-ready data pipelines and workloads. Central to this is the ",(0,i.kt)("a",{parentName:"p",href:"/docs/workloads/azure/data/data_engineering/datastacks"},"Datastacks CLI"),", which enables automatic generation of new data workloads."),(0,i.kt)("h2",{id:"quality-assurance"},"Quality assurance"),(0,i.kt)("p",null,"Quality and reliability of data workloads are at the core of Ensono Stacks Data Platform. This is ensured through frameworks for ",(0,i.kt)("a",{parentName:"p",href:"/docs/workloads/azure/data/data_engineering/data_quality_azure"},"data quality")," and ",(0,i.kt)("a",{parentName:"p",href:"/docs/workloads/azure/data/data_engineering/testing_data_azure"},"automated testing"),"."),(0,i.kt)("h2",{id:"sample-dataset"},"Sample dataset"),(0,i.kt)("p",null,"The example workloads included in the solution are based upon an\n",(0,i.kt)("a",{parentName:"p",href:"/docs/workloads/azure/data/getting_started/example_data_source"},"example Azure SQL data source and dataset"),". This data source may optionally\nbe deployed as part of the data platform, to allow full demonstration testing of these example workloads."))}k.isMDXComponent=!0}}]);