"use strict";(self.webpackChunkstacks=self.webpackChunkstacks||[]).push([[4285],{2252:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>g});var r=t(4848),o=t(8453);const a={id:"configure_swagger_netcore",title:"Configure Swagger",sidebar_label:"Swagger",hide_title:!0,hide_table_of_contents:!0,description:"Configure Swagger for .NET Core REST API application",keywords:[".net core","rest","api","tests","stacks","swagger","registration","controller","configuration","dotnet"]},i=void 0,c={id:"workloads/azure/backend/netcore/architecture/swagger_configuration/configure_swagger_netcore",title:"Configure Swagger",description:"Configure Swagger for .NET Core REST API application",source:"@site/docs/workloads/azure/backend/netcore/architecture/swagger_configuration/configure_swagger_netcore.md",sourceDirName:"workloads/azure/backend/netcore/architecture/swagger_configuration",slug:"/workloads/azure/backend/netcore/architecture/swagger_configuration/configure_swagger_netcore",permalink:"/docs/workloads/azure/backend/netcore/architecture/swagger_configuration/configure_swagger_netcore",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"configure_swagger_netcore",title:"Configure Swagger",sidebar_label:"Swagger",hide_title:!0,hide_table_of_contents:!0,description:"Configure Swagger for .NET Core REST API application",keywords:[".net core","rest","api","tests","stacks","swagger","registration","controller","configuration","dotnet"]},sidebar:"docs",previous:{title:"Operations, Events, Exceptions and Correlation",permalink:"/docs/workloads/azure/backend/netcore/architecture/operations_events_exceptions_correlation_netcore"},next:{title:"Swagger UI",permalink:"/docs/workloads/azure/backend/netcore/architecture/swagger_configuration/configure_swagger_ui_netcore"}},s={},g=[{value:"Configure OpenAPI",id:"configure-openapi",level:2},{value:"Example",id:"example",level:3}];function l(e){const n={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"configure-openapi",children:"Configure OpenAPI"}),"\n",(0,r.jsxs)(n.p,{children:["The document generation configuration is done in the Program class of the API. A call to the extension method ",(0,r.jsx)(n.code,{children:"AddSwaggerGen(Action<SwaggerGenOptions> setupAction)"})," is made passing an action to generate the documentation options."]}),"\n",(0,r.jsxs)(n.p,{children:["Each call to ",(0,r.jsx)(n.code,{children:"AddSwaggerGen()"})," will generate a new document. The parameters passed will be used to configure the rules for document generation. The output of a document generation process is a simple JSON file. By default, the file(spec) will be available on ",(0,r.jsx)(n.code,{children:"/swagger/versionName/swagger.json"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'    services\n        .AddSwaggerGen(c =>\n        {\n            c.SwaggerDoc("all", new OpenApiInfo\n            {\n                Version = "all",\n                Title = "Menu API",\n                Description = "APIs used to interact and manage menus for a restaurant",\n                Contact = new OpenApiContact\n                {\n                    Name = "Ensono",\n                    Url = new Uri(projectUrl),\n                    Email = "stacks@ensono.com"\n                }\n            });\n\n            c.IncludeXmlComments($"{AppContext.BaseDirectory}{Path.DirectorySeparatorChar}{typeof(xxENSONOxx.xxSTACKSxx.API.Program).Assembly.GetName().Name}.xml");\n            c.IncludeXmlComments($"{AppContext.BaseDirectory}{Path.DirectorySeparatorChar}{typeof(CreateMenuRequest).Assembly.GetName().Name}.xml");\n\n            c.DocumentFilter<SwaggerDocumentTagger>(new OpenApiTag[]\n            {\n                new OpenApiTag { Name = "Menu" },\n                new OpenApiTag { Name = "Category" },\n                new OpenApiTag { Name = "Item" }\n            }, new string[] { });\n\n            c.TagActionsBy(api => new[] { api.GroupName ?? api.ActionDescriptor.RouteValues["controller"] });\n            c.DocInclusionPredicate((docName, apiDesc) => true);\n            c.CustomOperationIds(apiDesc => apiDesc.TryGetMethodInfo(out var methodInfo) ? methodInfo.Name : null);\n            c.ConfigureForJwtBearerAuthentication(jwtBearerAuthenticationConfiguration);\n        })\n        .AddSwaggerGen(c =>\n        {\n            c.SwaggerDoc("v1", new OpenApiInfo\n            {\n                Version = "v1",\n                Title = "Menu API",\n                Description = "APIs used to interact and manage menus for a restaurant",\n                Contact = new OpenApiContact\n                {\n                    Name = "Ensono",\n                    Url = new Uri(projectUrl),\n                    Email = "stacks@ensono.com"\n                }\n            });\n\n            c.IncludeXmlComments($"{AppContext.BaseDirectory}{Path.DirectorySeparatorChar}{typeof(xxENSONOxx.xxSTACKSxx.API.Program).Assembly.GetName().Name}.xml");\n            c.DocumentFilter<VersionPathFilter>("/v1");\n        })\n        .AddSwaggerGen(c =>\n        {\n            c.SwaggerDoc("v2", new OpenApiInfo\n            {\n                Version = "v2",\n                Title = "Menu API",\n                Description = "APIs used to interact and manage menus for a restaurant",\n                Contact = new OpenApiContact\n                {\n                    Name = "Ensono",\n                    Url = new Uri(projectUrl),\n                    Email = "stacks@ensono.com"\n                }\n            });\n\n            c.IncludeXmlComments($"{AppContext.BaseDirectory}{Path.DirectorySeparatorChar}{typeof(xxENSONOxx.xxSTACKSxx.API.Program).Assembly.GetName().Name}.xml");\n            c.DocumentFilter<VersionPathFilter>("/v2");\n        });\n'})}),"\n",(0,r.jsxs)(n.p,{children:["The snippet above demonstrates the usage of ",(0,r.jsx)(n.code,{children:".AddSwaggerGen()"})," to register the document generation. The output of this snipped will generate a document found on the path ",(0,r.jsx)(n.code,{children:"/swagger/v1/swagger.json"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>c});var r=t(6540);const o={},a=r.createContext(o);function i(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);