"use strict";(self.webpackChunkstacks=self.webpackChunkstacks||[]).push([[1194],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1332:function(e,t,n){var r=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,a=e.className;return r.createElement("div",{role:"tabpanel",hidden:n,className:a},t)}},8387:function(e,t,n){n.d(t,{Z:function(){return d}});var r=n(7462),a=n(7294),o=n(2389),i=n(8578);var l=function(){var e=(0,a.useContext)(i.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},s=n(7673),c=n(6010),u="tabItem_2kG2";function p(e){var t,n,r,o=e.lazy,i=e.block,p=e.defaultValue,d=e.values,m=e.groupId,f=e.className,k=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=d?d:k.map((function(e){var t=e.props;return{value:t.value,label:t.label}})),v=(0,s.lx)(b,(function(e,t){return e.value===t.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var h=null===p?p:null!=(t=null!=p?p:null==(n=k.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(r=k[0])?void 0:r.props.value;if(null!==h&&!b.some((function(e){return e.value===h})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+h+'" but none of its children has the corresponding value. Available values are: '+b.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var g=l(),x=g.tabGroupChoices,y=g.setTabGroupChoices,C=(0,a.useState)(h),w=C[0],N=C[1],_=[],S=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var O=x[m];null!=O&&O!==w&&b.some((function(e){return e.value===O}))&&N(O)}var j=function(e){var t=e.currentTarget,n=_.indexOf(t),r=b[n].value;r!==w&&(S(t),N(r),null!=m&&y(m,r))},D=function(e){var t,n=null;switch(e.key){case"ArrowRight":var r=_.indexOf(e.currentTarget)+1;n=_[r]||_[0];break;case"ArrowLeft":var a=_.indexOf(e.currentTarget)-1;n=_[a]||_[_.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,c.Z)("tabs",{"tabs--block":i},f)},b.map((function(e){var t=e.value,n=e.label;return a.createElement("li",{role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,className:(0,c.Z)("tabs__item",u,{"tabs__item--active":w===t}),key:t,ref:function(e){return _.push(e)},onKeyDown:D,onFocus:j,onClick:j},null!=n?n:t)}))),o?(0,a.cloneElement)(k.filter((function(e){return e.props.value===w}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},k.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==w})}))))}function d(e){var t=(0,o.Z)();return a.createElement(p,(0,r.Z)({key:String(t)},e))}},8578:function(e,t,n){var r=(0,n(7294).createContext)(void 0);t.Z=r},4283:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return p},toc:function(){return d},default:function(){return f}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=n(8387),l=n(1332),s=["components"],c={id:"configure_project_netcore",title:"Configure the project",hide_title:!0,sidebar_label:"Configure the project",hide_table_of_contents:!0,description:"Configure, Build and run .NET Core REST API application with CQRS on local and docker container",keywords:[".net core","rest api","cqrs","azure","application insights","cosmos db","build","run","application","configure","docker"]},u=void 0,p={unversionedId:"workloads/azure/backend/netcore/quickstart/web_api_cqrs/configure_project_netcore",id:"workloads/azure/backend/netcore/quickstart/web_api_cqrs/configure_project_netcore",isDocsHomePage:!1,title:"Configure the project",description:"Configure, Build and run .NET Core REST API application with CQRS on local and docker container",source:"@site/docs/workloads/azure/backend/netcore/quickstart/web_api_cqrs/configure_project_netcore.md",sourceDirName:"workloads/azure/backend/netcore/quickstart/web_api_cqrs",slug:"/workloads/azure/backend/netcore/quickstart/web_api_cqrs/configure_project_netcore",permalink:"/docs/workloads/azure/backend/netcore/quickstart/web_api_cqrs/configure_project_netcore",tags:[],version:"current",frontMatter:{id:"configure_project_netcore",title:"Configure the project",hide_title:!0,sidebar_label:"Configure the project",hide_table_of_contents:!0,description:"Configure, Build and run .NET Core REST API application with CQRS on local and docker container",keywords:[".net core","rest api","cqrs","azure","application insights","cosmos db","build","run","application","configure","docker"]},sidebar:"docs",previous:{title:"Create the project",permalink:"/docs/workloads/azure/backend/netcore/quickstart/web_api_cqrs/create_project_netcore"},next:{title:"Build & Run the Project",permalink:"/docs/workloads/azure/backend/netcore/quickstart/web_api_cqrs/build_and_run_project_netcore"}},d=[{value:"Configure the project",id:"configure-the-project",children:[],level:2}],m={toc:d};function f(e){var t=e.components,c=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},m,c,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"configure-the-project"},"Configure the project"),(0,o.kt)("p",null,"It uses an Azure ",(0,o.kt)("strong",{parentName:"p"},"CosmosDB")," or ",(0,o.kt)("strong",{parentName:"p"},"InMemory")," database to store the example application data."),(0,o.kt)("p",null,"To interact with CosmosDb there is a environment variable that needs to be set. The ",(0,o.kt)("strong",{parentName:"p"},"InMemory")," database doesn't require additional configuration and upon project generation is the default option."),(0,o.kt)("br",null),(0,o.kt)("details",{open:!0},(0,o.kt)("summary",null,"Using the Cosmos DB Emulator to run the database locally"),(0,o.kt)("div",null,(0,o.kt)("p",null,"For running on local environments, ",(0,o.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/azure/cosmos-db/local-emulator?tabs=ssl-netstd21"},"Cosmos DB emulator")," can be used in a Windows environment."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Install Cosmos DB Emulator")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Identify the ",(0,o.kt)("strong",{parentName:"p"},"Primary key")))),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"CosmosDB",src:n(8141).Z})))),(0,o.kt)("br",null),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Not using the Cosmos DB Emulator"),(0,o.kt)("div",null,"When choosing not to run the CosmosDB locally, further configuration needs to be changed.",(0,o.kt)("p",null,"Set the CosmosDB URI parameter ",(0,o.kt)("strong",{parentName:"p"},"DatabaseAccountUri")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'{2} title="<PROJECT-NAME>/src/api/xxAMIDOxx.xxSTACKSxx.API/appsettings.json"',"{2}":!0,title:'"<PROJECT-NAME>/src/api/xxAMIDOxx.xxSTACKSxx.API/appsettings.json"'},'"CosmosDb": {\n    "DatabaseAccountUri": "<Add CosmosDB Account URI here>",\n    ...\n}\n')))),(0,o.kt)("br",null),(0,o.kt)("details",{open:!0},(0,o.kt)("summary",null,"Create the Cosmos DB structure"),(0,o.kt)("div",null,(0,o.kt)("p",null,"Based on the solution template the Cosmos DB has to contain a fixed structure."),(0,o.kt)("p",null,"Create a collection ",(0,o.kt)("strong",{parentName:"p"},"Stacks")," with a container id ",(0,o.kt)("strong",{parentName:"p"},"menu")," (name of domain object) and the partition key ",(0,o.kt)("strong",{parentName:"p"},"/id"),"."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"CosmosDB",src:n(2309).Z})))),(0,o.kt)("br",null),(0,o.kt)("p",null,"For the project just created to connect to the Cosmos Db database, the primary key has to be provided as a environment variable. To add this variable perform one of the next two steps."),(0,o.kt)("details",{open:!0},(0,o.kt)("summary",null,"Setting the key as a system property"),(0,o.kt)("div",null,(0,o.kt)(i.Z,{defaultValue:"windows",values:[{label:"Windows",value:"windows"},{label:"Unix",value:"unix"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"windows",mdxType:"TabItem"},(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Replace the Cosmos DB Primary key in the command.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Run the command in powershell with administrator privileges."))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-powershell",metastring:'title="Run command to add the COSMOSDB_KEY system variable"',title:'"Run',command:!0,to:!0,add:!0,the:!0,COSMOSDB_KEY:!0,system:!0,'variable"':!0},'[Environment]::SetEnvironmentVariable("COSMOSDB_KEY", "Cosmos DB Primary key", [EnvironmentVariableTarget]::Machine)\n'))),(0,o.kt)(l.Z,{value:"unix",mdxType:"TabItem"},"Set as additional variable within e.g. ",(0,o.kt)("code",null,"~/.profile")," or ",(0,o.kt)("code",null,"/etc/profile"),".")))),(0,o.kt)("br",null),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Set the variable specific to Visual Studio"),(0,o.kt)("div",null,(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Open the project in Visual Studio. The solution file is located at ",(0,o.kt)("inlineCode",{parentName:"p"},"src/api/xxAMIDOxx.xxSTACKSxx.API.sln"),".")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Add ",(0,o.kt)("strong",{parentName:"p"},"COSMOSDB_KEY")," environment variable to the ",(0,o.kt)("strong",{parentName:"p"},"launchSettings.json")," file generated by Visual Studio and add the Cosmos DB Primary key value."))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'{4} title="src/api/xxAMIDOxx.xxSTACKSxx.API/properties/launchSettings.json"',"{4}":!0,title:'"src/api/xxAMIDOxx.xxSTACKSxx.API/properties/launchSettings.json"'},'{\n  ...\n  "profiles": {\n    "xxAMIDOxx.xxSTACKSxx.API": {\n      "environmentVariables": {\n        "ASPNETCORE_ENVIRONMENT": "Development",\n        "COSMOSDB_KEY": "<Add Cosmos DB Primary Key here>"\n        ...\n      }\n    }\n  }\n}\n')),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The variable is referenced in ",(0,o.kt)("strong",{parentName:"p"},"appsettings.json"),"."),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'{4} title="src/api/xxAMIDOxx.xxSTACKSxx.API/appsettings.json"',"{4}":!0,title:'"src/api/xxAMIDOxx.xxSTACKSxx.API/appsettings.json"'},'"CosmosDb": {\n    ...\n    "SecurityKeySecret": {\n        "Identifier": "COSMOSDB_KEY",\n        ...\n    }\n}\n')))))),(0,o.kt)("br",null))}f.isMDXComponent=!0},2309:function(e,t,n){t.Z=n.p+"assets/images/cosmosdb_emulator_1-eb5c6355a0662db45234724a920edac3.png"},8141:function(e,t,n){t.Z=n.p+"assets/images/cosmosdb_emulator_3-ddb539bc14733fdf2bc3cb8dc022cf09.png"}}]);