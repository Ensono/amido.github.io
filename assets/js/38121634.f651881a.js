"use strict";(self.webpackChunkstacks=self.webpackChunkstacks||[]).push([[1059],{5383:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>i,default:()=>p,frontMatter:()=>n,metadata:()=>c,toc:()=>d});var s=r(4848),o=r(8453);const n={id:"repository_overview_netcore",title:"Repository Overview",sidebar_label:"Repository Structure",hide_title:!1,hide_table_of_contents:!0,description:".NET Core REST API application - Repositories Overview",keywords:[".net core","rest api","cqrs","example","template","repository","structure"]},i=void 0,c={id:"workloads/azure/backend/netcore/architecture/repository_overview_netcore",title:"Repository Overview",description:".NET Core REST API application - Repositories Overview",source:"@site/docs/workloads/azure/backend/netcore/architecture/repository_overview_netcore.md",sourceDirName:"workloads/azure/backend/netcore/architecture",slug:"/workloads/azure/backend/netcore/architecture/repository_overview_netcore",permalink:"/docs/workloads/azure/backend/netcore/architecture/repository_overview_netcore",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"repository_overview_netcore",title:"Repository Overview",sidebar_label:"Repository Structure",hide_title:!1,hide_table_of_contents:!0,description:".NET Core REST API application - Repositories Overview",keywords:[".net core","rest api","cqrs","example","template","repository","structure"]},sidebar:"docs",previous:{title:"Architecture Overview",permalink:"/docs/workloads/azure/backend/netcore/architecture/architecture_overview_netcore"},next:{title:"Solution Structure",permalink:"/docs/workloads/azure/backend/netcore/architecture/project_structure_netcore"}},a={},d=[];function l(e){const t={a:"a",code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-text",children:"\u251c\u2500\u2500 build\n\u2502   \u251c\u2500\u2500 azDevOps: stores configuration, build steps and scripts used by azure dev ops only\n\u2502   \u251c\u2500\u2500 jenkins: stores configuration, build steps and scripts used by jenkins only\n\u2502   \u2514\u2500\u2500 scripts: stores scripts used by build steps that can be reused by multiple\n|                tools without changes. ie: Docker script for Container Image creation\n\u251c\u2500\u2500 deploy\n|  \u251c\u2500\u2500 k8s: stores yaml files for k8s deployments. i.e: deployments, services,\n|  |  |    configMap and related dependencies for each service in an application\n|  |  \u251c\u2500\u2500 ui: stores yaml for ui service\n|  |  \u2514\u2500\u2500 api: stores yaml for the api service and configuration files\n\u2502  \u2502     \u251c\u2500\u2500 base: store raw yaml used by k8s\n\u2502  \u2502     \u251c\u2500\u2500 kustomization: store kustomize files(for kubectl apply -k)\n\u2502  \u2502     \u2502   \u251c\u2500\u2500 dev: configuration files for dev environment\n\u2502  \u2502     \u2502   \u2514\u2500\u2500 test: configuration files for test environment\n\u2502  \u2502     \u2514\u2500\u2500 helm-chart: store helm chart files(if helm used)\n\u2502  \u2502         \u2514\u2500\u2500 templates\n|  \u251c\u2500\u2500 serviceFabric: scripts used to deploy applications on serviceFabric\n|  \u251c\u2500\u2500 terraform: terraform scripts used to provision dependencies\n|  |              only needed by this application\n|  \u2514\u2500\u2500 scripts: deployment scripts shared by multiple tools. ie: Variable substitution\n\u251c\u2500\u2500 contracts: stores swagger specs, ui mocks and other documents describing\n|              the overall solution\n\u2514\u2500\u2500 src\n   \u251c\u2500\u2500 services (i.e: apis, queue listener, scheduled jobs)\n   \u251c\u2500\u2500 tests: stores tests not built in other services solutions (functional tests,\n   |          performance, etc)\n   \u2514\u2500\u2500 ui: stores the front end service and components\n"})}),"\n",(0,s.jsx)(t.p,{children:"There are 3 repositories available:"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https://github.com/Ensono/stacks-dotnet",children:"stacks-dotnet"})," for a simple web API ",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(t.a,{href:"https://github.com/Ensono/stacks-dotnet-cqrs",children:"stacks-dotnet-cqrs"})," for a web API with CQRS ",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(t.a,{href:"https://github.com/Ensono/stacks-dotnet-cqrs-events",children:"stacks-dotnet-cqrs-events"})," for a web API with CQRS and Event Listening (with function and worker service) ",(0,s.jsx)("br",{})]})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>c});var s=r(6540);const o={},n=s.createContext(o);function i(e){const t=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(n.Provider,{value:t},e.children)}}}]);