"use strict";(self.webpackChunkstacks=self.webpackChunkstacks||[]).push([[7097,7737,4715,8323,6142],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return g}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,g=p["".concat(l,".").concat(m)]||p[m]||d[m]||s;return n?r.createElement(g,i(i({ref:t},u),{},{components:n})):r.createElement(g,i({ref:t},u))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,i=new Array(s);i[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[p]="string"==typeof e?e:a,i[1]=o;for(var c=2;c<s;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:function(e,t,n){n.d(t,{Z:function(){return i}});var r=n(7294),a=n(6010),s={tabItem:"tabItem_Ymn6"};function i(e){var t=e.children,n=e.hidden,i=e.className;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(s.tabItem,i),hidden:n},t)}},4866:function(e,t,n){n.d(t,{Z:function(){return N}});var r=n(7462),a=n(7294),s=n(6010),i=n(2466),o=n(6550),l=n(1980),c=n(7392),u=n(12);function p(e){return function(e){var t,n;return null!=(t=null==(n=a.Children.map(e,(function(e){if(!e||(0,a.isValidElement)(e)&&(t=e.props)&&"object"==typeof t&&"value"in t)return e;var t;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?t:[]}(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}function d(e){var t=e.values,n=e.children;return(0,a.useMemo)((function(){var e=null!=t?t:p(n);return function(e){var t=(0,c.l)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function m(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function g(e){var t=e.queryString,n=void 0!==t&&t,r=e.groupId,s=(0,o.k6)(),i=function(e){var t=e.queryString,n=void 0!==t&&t,r=e.groupId;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=r?r:null}({queryString:n,groupId:r});return[(0,l._X)(i),(0,a.useCallback)((function(e){if(i){var t=new URLSearchParams(s.location.search);t.set(i,e),s.replace(Object.assign({},s.location,{search:t.toString()}))}}),[i,s])]}function y(e){var t,n,r,s,i=e.defaultValue,o=e.queryString,l=void 0!==o&&o,c=e.groupId,p=d(e),y=(0,a.useState)((function(){return function(e){var t,n=e.defaultValue,r=e.tabValues;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:r}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+r.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}var a=null!=(t=r.find((function(e){return e.default})))?t:r[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:i,tabValues:p})})),f=y[0],k=y[1],h=g({queryString:l,groupId:c}),v=h[0],b=h[1],N=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:c}.groupId),n=(0,u.Nk)(t),r=n[0],s=n[1],[r,(0,a.useCallback)((function(e){t&&s.set(e)}),[t,s])]),x=N[0],w=N[1],T=function(){var e=null!=v?v:x;return m({value:e,tabValues:p})?e:null}();return(0,a.useLayoutEffect)((function(){T&&k(T)}),[T]),{selectedValue:f,selectValue:(0,a.useCallback)((function(e){if(!m({value:e,tabValues:p}))throw new Error("Can't select invalid tab value="+e);k(e),b(e),w(e)}),[b,w,p]),tabValues:p}}var f=n(2389),k={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function h(e){var t=e.className,n=e.block,o=e.selectedValue,l=e.selectValue,c=e.tabValues,u=[],p=(0,i.o5)().blockElementScrollPositionUntilNextRender,d=function(e){var t=e.currentTarget,n=u.indexOf(t),r=c[n].value;r!==o&&(p(t),l(r))},m=function(e){var t,n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":var r,a=u.indexOf(e.currentTarget)+1;n=null!=(r=u[a])?r:u[0];break;case"ArrowLeft":var s,i=u.indexOf(e.currentTarget)-1;n=null!=(s=u[i])?s:u[u.length-1]}null==(t=n)||t.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":n},t)},c.map((function(e){var t=e.value,n=e.label,i=e.attributes;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:function(e){return u.push(e)},onKeyDown:m,onClick:d},i,{className:(0,s.Z)("tabs__item",k.tabItem,null==i?void 0:i.className,{"tabs__item--active":o===t})}),null!=n?n:t)})))}function v(e){var t=e.lazy,n=e.children,r=e.selectedValue,s=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){var i=s.find((function(e){return e.props.value===r}));return i?(0,a.cloneElement)(i,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},s.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r})})))}function b(e){var t=y(e);return a.createElement("div",{className:(0,s.Z)("tabs-container",k.tabList)},a.createElement(h,(0,r.Z)({},e,t)),a.createElement(v,(0,r.Z)({},e,t)))}function N(e){var t=(0,f.Z)();return a.createElement(b,(0,r.Z)({key:String(t)},e))}},1015:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return g},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return p}});var r=n(7462),a=n(3366),s=(n(7294),n(3905)),i=["components"],o={},l=void 0,c={unversionedId:"getting_started/cypress/accessibility",id:"getting_started/cypress/accessibility",title:"accessibility",description:"@ensono-stacks/cypress:accessibility",source:"@site/docs/getting_started/cypress/accessibility.md",sourceDirName:"getting_started/cypress",slug:"/getting_started/cypress/accessibility",permalink:"/docs/getting_started/cypress/accessibility",draft:!1,tags:[],version:"current",frontMatter:{}},u={},p=[{value:"@ensono-stacks/cypress:accessibility",id:"ensono-stackscypressaccessibility",level:3},{value:"Usage",id:"usage",level:2},{value:"Command line arguments",id:"command-line-arguments",level:3},{value:"Generator Output",id:"generator-output",level:3}],d={toc:p},m="wrapper";function g(e){var t=e.components,n=(0,a.Z)(e,i);return(0,s.kt)(m,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h3",{id:"ensono-stackscypressaccessibility"},"@ensono-stacks/cypress:accessibility"),(0,s.kt)("details",null,(0,s.kt)("summary",null,"Adds axe accessibility tests to your test project"),(0,s.kt)("p",null,"The ",(0,s.kt)("em",{parentName:"p"},"accessibility")," generator installs the required plugins for conducting accessibility testing with cypress. Additionally, this will configure your test project to enable proper test reporting from ",(0,s.kt)("inlineCode",{parentName:"p"},"axe")," while providing you with an example set of test cases."),(0,s.kt)("h2",{id:"usage"},"Usage"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"nx g @ensono-stacks/cypress:accessibility\n")),(0,s.kt)("h3",{id:"command-line-arguments"},"Command line arguments"),(0,s.kt)("p",null,"The following command line arguments are available:"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"Option"),(0,s.kt)("th",{parentName:"tr",align:null},"Description"),(0,s.kt)("th",{parentName:"tr",align:null},"Type"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"--project -p"),(0,s.kt)("td",{parentName:"tr",align:null},"The name of the test project to add accessibility tests to"),(0,s.kt)("td",{parentName:"tr",align:null},"string")))),(0,s.kt)("h3",{id:"generator-output"},"Generator Output"),(0,s.kt)("p",null,"Scaffolding accessibility testing will add two dependencies to the ",(0,s.kt)("inlineCode",{parentName:"p"},"package.json"),":"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/axe-core"},(0,s.kt)("inlineCode",{parentName:"a"},"axe-core"))," - The accessibility test engine"),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/cypress-axe"},(0,s.kt)("inlineCode",{parentName:"a"},"cypress-axe"))," - Cypress integration with the accessibility test engine")),(0,s.kt)("p",null,"Additionally, an example accessibility test will be generated, showcasing how to utilise ",(0,s.kt)("em",{parentName:"p"},"axe")," to scan your application for accessibility violations:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Generated files"',title:'"Generated','files"':!0},".\n\u251c\u2500\u2500 apps\n\u2502   \u251c\u2500\u2500 <app-name>\n\u2502   \u2502   \u251c\u2500\u2500 cypress\n\u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 support\n\u2502   \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 e2e.ts #Terminal logging function configured\n\u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 e2e\n\u2502   \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 axe-accessibility.cy.ts #Example accessibility test using cypress\n\u2502   \u2502   \u251c\u2500\u2500 cypress.config.js #setupNodeEvents configured for logging with terminal logging function\n\u251c\u2500\u2500   tsconfig.cy.json #cypress-axe declared as a type\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n")),(0,s.kt)("admonition",{type:"note"},(0,s.kt)("p",{parentName:"admonition"},"Visit the ",(0,s.kt)("a",{parentName:"p",href:"/docs/testing/testing_in_nx/cypress_accessibility_testing"},(0,s.kt)("inlineCode",{parentName:"a"},"Accessibility Testing"))," documentation for further details!"))))}g.isMDXComponent=!0},2422:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return g},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return p}});var r=n(7462),a=n(3366),s=(n(7294),n(3905)),i=["components"],o={},l=void 0,c={unversionedId:"getting_started/cypress/executor",id:"getting_started/cypress/executor",title:"executor",description:"@nx/cypress:cypress",source:"@site/docs/getting_started/cypress/executor.md",sourceDirName:"getting_started/cypress",slug:"/getting_started/cypress/executor",permalink:"/docs/getting_started/cypress/executor",draft:!1,tags:[],version:"current",frontMatter:{}},u={},p=[{value:"@nx/cypress:cypress",id:"nxcypresscypress",level:3},{value:"Usage",id:"usage",level:2},{value:"Command line arguments",id:"command-line-arguments",level:3}],d={toc:p},m="wrapper";function g(e){var t=e.components,n=(0,a.Z)(e,i);return(0,s.kt)(m,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h3",{id:"nxcypresscypress"},"@nx/cypress:cypress"),(0,s.kt)("details",null,(0,s.kt)("summary",null,"Enables you to execute your cypress tests"),(0,s.kt)("p",null,"The ",(0,s.kt)("em",{parentName:"p"},"cypress")," executor is an executor provided by ",(0,s.kt)("inlineCode",{parentName:"p"},"@nx/cypress")," and enables you to run your e2e tests. "),(0,s.kt)("h2",{id:"usage"},"Usage"),(0,s.kt)("p",null,"The following command will run all of the cypress tests within your applications cypress test folder, as part of the executor it will automatically spin up a web server on local host for the corresponding application."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"nx e2e <app-name>\n")),(0,s.kt)("h3",{id:"command-line-arguments"},"Command line arguments"),(0,s.kt)("p",null,"See the ",(0,s.kt)("a",{parentName:"p",href:"https://nx.dev/packages/cypress/executors/cypress"},"@nx/cypress")," plugin page for a list of up to date command line arguments")))}g.isMDXComponent=!0},861:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return g},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return p}});var r=n(7462),a=n(3366),s=(n(7294),n(3905)),i=["components"],o={},l=void 0,c={unversionedId:"getting_started/cypress/init-deployment",id:"getting_started/cypress/init-deployment",title:"init-deployment",description:"@ensono-stacks/cypress:init-deployment",source:"@site/docs/getting_started/cypress/init-deployment.md",sourceDirName:"getting_started/cypress",slug:"/getting_started/cypress/init-deployment",permalink:"/docs/getting_started/cypress/init-deployment",draft:!1,tags:[],version:"current",frontMatter:{}},u={},p=[{value:"@ensono-stacks/cypress:init-deployment",id:"ensono-stackscypressinit-deployment",level:3},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Usage",id:"usage",level:2},{value:"Generator Output",id:"generator-output",level:3}],d={toc:p},m="wrapper";function g(e){var t=e.components,n=(0,a.Z)(e,i);return(0,s.kt)(m,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h3",{id:"ensono-stackscypressinit-deployment"},"@ensono-stacks/cypress:init-deployment"),(0,s.kt)("details",null,(0,s.kt)("summary",null,"Add cypress E2E tests to your deployment pipelines"),(0,s.kt)("p",null,"The ",(0,s.kt)("em",{parentName:"p"},"init-deployment")," generator adds e2e testing to pre-existing deployment pipelines, including test reporting and artefact uploads."),(0,s.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"The ",(0,s.kt)("a",{parentName:"li",href:"/docs/getting_started/workspace/ensono-stacks-workspace#ensono-stacksworkspaceinit-deployment"},"@ensono-stacks/workspace:init-deployment")," has been executed, producing the required deployment files for the workspace")),(0,s.kt)("h2",{id:"usage"},"Usage"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"nx g @ensono-stacks/cypress:init-deployment\n")),(0,s.kt)("h3",{id:"generator-output"},"Generator Output"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title=build/taskctl/tasks.yaml",title:"build/taskctl/tasks.yaml"},'# New e2e:ci task definition will be added to the tasks.yaml, defining what target should be ran for projects when executing the e2e task\ne2e:ci:\n    description: Run e2e tests in ci\n    command:\n      - npx nx affected --base="$BASE_SHA" --target=e2e --parallel=1\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title=taskctl.yaml",title:"taskctl.yaml"},"# New e2e:ci task will be added to the taskctl pipeline, adding e2e tests following unit testing\n- task: e2e:ci\n    depends_on: test:ci\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"build/azDevOps/azuredevops-stages.yaml","build/azDevOps/azuredevops-stages.yaml":!0},"# Generate HTML report for all affected projects\n- task: Bash@3\n            condition: and(succeededOrFailed(),eq(variables.HASTESTRESULTS, 'true'))\n            displayName: Generate Reports\n            inputs:\n              targetType: inline\n              script: npx nx affected --base=\"$BASE_SHA\" --target=html-report\n                --configuration=ci --parallel=1\n# New test reporting steps will be added to the azuredevops pipeline\n- task: PublishTestResults@2\n    # Configuration for publishing test results\n- task: PublishPipelineArtifact@1\n    # Configuration for publishing pipeline artefacts\n"))))}g.isMDXComponent=!0},262:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return g},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return p}});var r=n(7462),a=n(3366),s=(n(7294),n(3905)),i=["components"],o={},l=void 0,c={unversionedId:"getting_started/cypress/init",id:"getting_started/cypress/init",title:"init",description:"@ensono-stacks/cypress:init",source:"@site/docs/getting_started/cypress/init.md",sourceDirName:"getting_started/cypress",slug:"/getting_started/cypress/init",permalink:"/docs/getting_started/cypress/init",draft:!1,tags:[],version:"current",frontMatter:{}},u={},p=[{value:"@ensono-stacks/cypress:init",id:"ensono-stackscypressinit",level:3},{value:"Usage",id:"usage",level:2},{value:"Command line arguments",id:"command-line-arguments",level:3},{value:"Generator Output",id:"generator-output",level:3}],d={toc:p},m="wrapper";function g(e){var t=e.components,n=(0,a.Z)(e,i);return(0,s.kt)(m,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h3",{id:"ensono-stackscypressinit"},"@ensono-stacks/cypress:init"),(0,s.kt)("details",null,(0,s.kt)("summary",null,"Create a cypress test project for your chosen application"),(0,s.kt)("p",null,"The ",(0,s.kt)("em",{parentName:"p"},"init")," generator adds cypress e2e tests to the application you choose."),(0,s.kt)("h2",{id:"usage"},"Usage"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"nx g @ensono-stacks/cypress:init\n")),(0,s.kt)("p",null,"Upon calling the ",(0,s.kt)("em",{parentName:"p"},"init")," generator you will be presented with the following question:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"What app would you like to generate a test project for?",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"The name of the existing application to generate a test project for")))),(0,s.kt)("h3",{id:"command-line-arguments"},"Command line arguments"),(0,s.kt)("p",null,"The following command line arguments are available:"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"Option"),(0,s.kt)("th",{parentName:"tr",align:null},"Description"),(0,s.kt)("th",{parentName:"tr",align:null},"Type"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"--project"),(0,s.kt)("td",{parentName:"tr",align:null},"The name of the application to generate a test project for"),(0,s.kt)("td",{parentName:"tr",align:null},"string")))),(0,s.kt)("h3",{id:"generator-output"},"Generator Output"),(0,s.kt)("p",null,"The ",(0,s.kt)("em",{parentName:"p"},"init")," generator will create a new test project within your chosen application containing an example test and predefined configuration for the monorepo and the individual test project. "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Generated files"',title:'"Generated','files"':!0},".\n\u251c\u2500\u2500 apps\n\u2502   \u251c\u2500\u2500 <app-name>\n\u2502   \u2502   \u251c\u2500\u2500 cypress\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 e2e\n\u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 example.cy.ts #Example tests using cypress\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 fixtures\n\u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 example.json #Example fixture/test data\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 support\n\u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 commands.ts #Example custom commands for cypress\n\u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 e2e.ts #Configuration for cypress and test reporting\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 tsconfig.json #Typescript configuration for cypress\n\u2502   \u2502   \u251c\u2500\u2500 project.json #Updated with target for cypress and reporting\n\u2502   \u2502   \u251c\u2500\u2500 tsconfig.json #Typescript configuration updated for cypress exclusions\n\u2514\u2500\u2500 cypress.config.base.ts #Shared cypress configuration across projects\n")),(0,s.kt)("admonition",{type:"note"},(0,s.kt)("p",{parentName:"admonition"},"Visit the ",(0,s.kt)("a",{parentName:"p",href:"/docs/testing/testing_in_nx/testing_with_cypress"},(0,s.kt)("inlineCode",{parentName:"a"},"Testing with cypress"))," documentation for further details!"))))}g.isMDXComponent=!0},8447:function(e,t,n){n.r(t),n.d(t,{assets:function(){return f},contentTitle:function(){return g},default:function(){return b},frontMatter:function(){return m},metadata:function(){return y},toc:function(){return k}});var r=n(7462),a=n(3366),s=(n(7294),n(3905)),i=n(262),o=n(861),l=n(1015),c=n(2422),u=n(4866),p=n(5162),d=["components"],m={id:"ensono-stacks-cypress",title:"@ensono-stacks/cypress",sidebar_label:"@ensono-stacks/cypress",description:"Using cypress with Ensono Stacks!",keywords:["Nx","monorepo","stacks","ensono","cypress","generator","executor"]},g=void 0,y={unversionedId:"getting_started/cypress/ensono-stacks-cypress",id:"getting_started/cypress/ensono-stacks-cypress",title:"@ensono-stacks/cypress",description:"Using cypress with Ensono Stacks!",source:"@site/docs/getting_started/cypress/plugin-information.md",sourceDirName:"getting_started/cypress",slug:"/getting_started/cypress/ensono-stacks-cypress",permalink:"/docs/getting_started/cypress/ensono-stacks-cypress",draft:!1,tags:[],version:"current",frontMatter:{id:"ensono-stacks-cypress",title:"@ensono-stacks/cypress",sidebar_label:"@ensono-stacks/cypress",description:"Using cypress with Ensono Stacks!",keywords:["Nx","monorepo","stacks","ensono","cypress","generator","executor"]},sidebar:"docs",previous:{title:"@ensono-stacks/playwright",permalink:"/docs/getting_started/playwright/ensono-stacks-playwright"},next:{title:"@ensono-stacks/logger",permalink:"/docs/getting_started/logger/ensono-stacks-logger"}},f={},k=[{value:"Setting up @ensono-stacks/cypress",id:"setting-up-ensono-stackscypress",level:2},{value:"Executors and Generators",id:"executors-and-generators",level:2},{value:"Generators",id:"generators",level:3},{value:"Executors",id:"executors",level:3}],h={toc:k},v="wrapper";function b(e){var t=e.components,n=(0,a.Z)(e,d);return(0,s.kt)(v,(0,r.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Using the ",(0,s.kt)("inlineCode",{parentName:"p"},"@ensono-stacks/cypress")," plugin can help you get started with testing using cypress. Built upon the ",(0,s.kt)("a",{parentName:"p",href:"https://nx.dev/packages/cypress"},"@nx/cypress")," plugin, stacks provides additional capabilities to help you hit the ground running! "),(0,s.kt)("p",null,"Additionally, cypress tests can be added to your deployment pipelines through the various deployment generators."),(0,s.kt)("admonition",{type:"tip"},(0,s.kt)("p",{parentName:"admonition"},"Visit the ",(0,s.kt)("a",{parentName:"p",href:"/docs/testing/testing_in_nx/frontend_testing_in_nx"},"Frontend Testing in an Nx monorepo")," and ",(0,s.kt)("a",{parentName:"p",href:"/docs/testing/testing_in_nx/testing_with_cypress"},"Testing with cypress")," user guides for more information!")),(0,s.kt)("h2",{id:"setting-up-ensono-stackscypress"},"Setting up @ensono-stacks/cypress"),(0,s.kt)("p",null,"Install the ",(0,s.kt)("inlineCode",{parentName:"p"},"@ensono-stacks/cypress")," plugin with the following command:"),(0,s.kt)(u.Z,{mdxType:"Tabs"},(0,s.kt)(p.Z,{value:"npm",label:"npm",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --save-dev @ensono-stacks/cypress@latest\n"))),(0,s.kt)(p.Z,{value:"yarn",label:"yarn",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add --dev @ensono-stacks/cypress@latest\n")))),(0,s.kt)("h2",{id:"executors-and-generators"},"Executors and Generators"),(0,s.kt)("p",null,"To see a list of the plugin capabilities run the following command:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"nx list @ensono-stacks/cypress\n")),(0,s.kt)("p",null,"View additional information about a plugin capability through the following command:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"nx g @ensono-stacks/cypress:[generator-executor-name] --help\n")),(0,s.kt)("h3",{id:"generators"},"Generators"),(0,s.kt)(i.default,{mdxType:"InitGenerator"}),(0,s.kt)(o.default,{mdxType:"InitDeploy"}),(0,s.kt)(l.default,{mdxType:"AccessibilityGenerator"}),(0,s.kt)("h3",{id:"executors"},"Executors"),(0,s.kt)(c.default,{mdxType:"Executor"}))}b.isMDXComponent=!0}}]);