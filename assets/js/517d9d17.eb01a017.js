"use strict";(self.webpackChunkstacks=self.webpackChunkstacks||[]).push([[326],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var a=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var r=a.createContext({}),c=function(e){var t=a.useContext(r),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(r.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,o=e.originalType,r=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),d=s,k=m["".concat(r,".").concat(d)]||m[d]||u[d]||o;return n?a.createElement(k,i(i({ref:t},p),{},{components:n})):a.createElement(k,i({ref:t},p))}));function d(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var r in t)hasOwnProperty.call(t,r)&&(l[r]=t[r]);l.originalType=e,l.mdxType="string"==typeof e?e:s,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7412:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return r},metadata:function(){return c},toc:function(){return p},default:function(){return m}});var a=n(7462),s=n(3366),o=(n(7294),n(3905)),i=["components"],l={},r="Examples",c={unversionedId:"stackscli/examples",id:"stackscli/examples",isDocsHomePage:!1,title:"Examples",description:"This section provides some examples on how to run the CLI to setup a project from the Amido Stacks projects.",source:"@site/docs/stackscli/examples.mdx",sourceDirName:"stackscli",slug:"/stackscli/examples",permalink:"/docs/stackscli/examples",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Project Settings",permalink:"/docs/stackscli/project_settings"},next:{title:"Troubleshooting",permalink:"/docs/stackscli/troubleshooting"}},p=[{value:".NET",id:"net",children:[{value:".NET WebApi project from command line",id:"net-webapi-project-from-command-line",children:[],level:3},{value:".NET WebApi project using the interactive command",id:"net-webapi-project-using-the-interactive-command",children:[],level:3},{value:".NET WebApi project using a configuration file",id:"net-webapi-project-using-a-configuration-file",children:[],level:3}],level:2},{value:"Java",id:"java",children:[{value:"Java WebApi project from command line",id:"java-webapi-project-from-command-line",children:[],level:3},{value:"Java WebApi project using the interactive command",id:"java-webapi-project-using-the-interactive-command",children:[],level:3},{value:"Java WebApi project using a configuration file",id:"java-webapi-project-using-a-configuration-file",children:[],level:3}],level:2},{value:"Running scaffold command again",id:"running-scaffold-command-again",children:[],level:2},{value:"Checking Framework command versions",id:"checking-framework-command-versions",children:[],level:2}],u={toc:p};function m(e){var t=e.components,l=(0,s.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"examples"},"Examples"),(0,o.kt)("p",null,"This section provides some examples on how to run the CLI to setup a project from the Amido Stacks projects."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Note")),(0,o.kt)("p",{parentName:"blockquote"},"It is assumed that the Stacks CLI command has been installed and is in the path to be called using the ",(0,o.kt)("inlineCode",{parentName:"p"},"stacks")," name.")),(0,o.kt)("p",null,"The following table shows the settings that are being used in each of the examples."),(0,o.kt)("table",null,(0,o.kt)("caption",null,"Example settings"),(0,o.kt)("colgroup",null,(0,o.kt)("col",{style:{width:"33%"}}),(0,o.kt)("col",{style:{width:"33%"}}),(0,o.kt)("col",{style:{width:"33%"}})),(0,o.kt)("thead",null,(0,o.kt)("tr",{className:"header"},(0,o.kt)("th",null,"Name"),(0,o.kt)("th",null,"Value"),(0,o.kt)("th",null,"Description"))),(0,o.kt)("tbody",null,(0,o.kt)("tr",{className:"odd"},(0,o.kt)("td",null,(0,o.kt)("p",null,"company")),(0,o.kt)("td",null,(0,o.kt)("p",null,(0,o.kt)("code",null,"MyCompany"))),(0,o.kt)("td",null,(0,o.kt)("p",null,"Name of the company that the project is being created for"))),(0,o.kt)("tr",{className:"even"},(0,o.kt)("td",null,(0,o.kt)("p",null,"area")),(0,o.kt)("td",null,(0,o.kt)("p",null,(0,o.kt)("code",null,"core"))),(0,o.kt)("td",null,(0,o.kt)("p",null,"The area within the company that the project is relevant to."),(0,o.kt)("p",null,"In previous versions of the CLI, this has been referred to as the domain, but it has been changed to area to avoid confusion with DNS domain."))),(0,o.kt)("tr",{className:"odd"},(0,o.kt)("td",null,(0,o.kt)("p",null,"component")),(0,o.kt)("td",null,(0,o.kt)("p",null,(0,o.kt)("code",null,"backend"))),(0,o.kt)("td",null,(0,o.kt)("p",null,"Component that the project is for"))),(0,o.kt)("tr",{className:"even"},(0,o.kt)("td",null,(0,o.kt)("p",null,"domain")),(0,o.kt)("td",null,(0,o.kt)("p",null,(0,o.kt)("code",null,"stacks-example.com"))),(0,o.kt)("td",null,(0,o.kt)("p",null,"DNS domain for which the application will respond to"))),(0,o.kt)("tr",{className:"odd"},(0,o.kt)("td",null,(0,o.kt)("p",null,"cloud")),(0,o.kt)("td",null,(0,o.kt)("p",null,(0,o.kt)("code",null,"azure"))),(0,o.kt)("td",null,(0,o.kt)("p",null,"The cloud platform being used"))),(0,o.kt)("tr",{className:"even"},(0,o.kt)("td",null,(0,o.kt)("p",null,"region")),(0,o.kt)("td",null,(0,o.kt)("p",null,(0,o.kt)("code",null,"ukwest"))),(0,o.kt)("td",null,(0,o.kt)("p",null,"Region in the cloud that the resources will be deployed to"))),(0,o.kt)("tr",{className:"odd"},(0,o.kt)("td",null,(0,o.kt)("p",null,"group")),(0,o.kt)("td",null,(0,o.kt)("p",null,(0,o.kt)("code",null,"mywebapi-resources"))),(0,o.kt)("td",null,(0,o.kt)("p",null,"Group that holds all of the cloud resources"))),(0,o.kt)("tr",{className:"even"},(0,o.kt)("td",null,(0,o.kt)("p",null,"tfgroup")),(0,o.kt)("td",null,(0,o.kt)("p",null,(0,o.kt)("code",null,"supporting-group"))),(0,o.kt)("td",null,(0,o.kt)("p",null,"Group that has the resources to be used to hold the Terraform state"))),(0,o.kt)("tr",{className:"odd"},(0,o.kt)("td",null,(0,o.kt)("p",null,"tfstorage")),(0,o.kt)("td",null,(0,o.kt)("p",null,(0,o.kt)("code",null,"kjh56sdfnjnkjn"))),(0,o.kt)("td",null,(0,o.kt)("p",null,"Name of the storage that will hold the Terraform state"))),(0,o.kt)("tr",{className:"even"},(0,o.kt)("td",null,(0,o.kt)("p",null,"tfcontainer")),(0,o.kt)("td",null,(0,o.kt)("p",null,(0,o.kt)("code",null,"tfstate"))),(0,o.kt)("td",null,(0,o.kt)("p",null,"Container in the storage for the state files"))),(0,o.kt)("tr",{className:"odd"},(0,o.kt)("td",null,(0,o.kt)("p",null,"name")),(0,o.kt)("td",null,(0,o.kt)("p",null,(0,o.kt)("code",null,"my-webapi"))),(0,o.kt)("td",null,(0,o.kt)("p",null,"Name of the project to create in the working directory"))),(0,o.kt)("tr",{className:"even"},(0,o.kt)("td",null,(0,o.kt)("p",null,"framework_option")),(0,o.kt)("td",null,(0,o.kt)("p",null,(0,o.kt)("code",null,"webapi"))),(0,o.kt)("td",null,(0,o.kt)("p",null,"The option within the framework being created."),(0,o.kt)("p",null,"For ",(0,o.kt)("code",null,"dotnet")," or ",(0,o.kt)("code",null,"java")," the options are ",(0,o.kt)("code",null,"webapi"),", ",(0,o.kt)("code",null,"cqrs")," or ",(0,o.kt)("code",null,"events"),". For ",(0,o.kt)("code",null,"infra")," the options are ",(0,o.kt)("code",null,"aks"),"."))))),(0,o.kt)("h2",{id:"net"},".NET"),(0,o.kt)("p",null,"The following table shows the additional options that are required when scaffolding the .NET examples."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Value"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"framework"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"dotnet")),(0,o.kt)("td",{parentName:"tr",align:null},"Framework being used, e.g. ",(0,o.kt)("inlineCode",{parentName:"td"},"dotnet"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"java")," or ",(0,o.kt)("inlineCode",{parentName:"td"},"infra"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"framework","_","version"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"v6.0.274")),(0,o.kt)("td",{parentName:"tr",align:null},"Version of the framework option to grab.")))),(0,o.kt)("p",null,".NET Specific settings"),(0,o.kt)("h3",{id:"net-webapi-project-from-command-line"},".NET WebApi project from command line"),(0,o.kt)("p",null,"Run the following command to create the new project in the working directory, which will be the directory that the command is being run in."),(0,o.kt)("table",null,(0,o.kt)("colgroup",null,(0,o.kt)("col",{style:{width:"50%"}}),(0,o.kt)("col",{style:{width:"50%"}})),(0,o.kt)("thead",null,(0,o.kt)("tr",{className:"header"},(0,o.kt)("th",null,"Bash"),(0,o.kt)("th",null,"PowerShell"))),(0,o.kt)("tbody",null,(0,o.kt)("tr",{className:"odd"},(0,o.kt)("td",null,(0,o.kt)("div",{className:"sourceCode",id:"cb1"},(0,o.kt)("pre",{className:"sourceCode bash"},(0,o.kt)("code",{className:"sourceCode bash"},(0,o.kt)("a",{className:"sourceLine",id:"cb1-1",title:"1"},(0,o.kt)("span",{className:"ex"},"stacks-cli")," scaffold -A core \\"),(0,o.kt)("a",{className:"sourceLine",id:"cb1-2",title:"2"},"                --company MyCompany \\"),(0,o.kt)("a",{className:"sourceLine",id:"cb1-3",title:"3"},"                --component backend \\"),(0,o.kt)("a",{className:"sourceLine",id:"cb1-4",title:"4"},"                --domain stacks-example.com \\"),(0,o.kt)("a",{className:"sourceLine",id:"cb1-5",title:"5"},"                -F dotnet \\"),(0,o.kt)("a",{className:"sourceLine",id:"cb1-6",title:"6"},"                -n my-webapi \\"),(0,o.kt)("a",{className:"sourceLine",id:"cb1-7",title:"7"},"                -p azdo \\"),(0,o.kt)("a",{className:"sourceLine",id:"cb1-8",title:"8"},"                -P aks \\"),(0,o.kt)("a",{className:"sourceLine",id:"cb1-9",title:"9"},"                --tfcontainer my-webapi \\"),(0,o.kt)("a",{className:"sourceLine",id:"cb1-10",title:"10"},"                --tfgroup supporting-group \\"),(0,o.kt)("a",{className:"sourceLine",id:"cb1-11",title:"11"},"                --tfstorage kjh56sdfnjnkjn \\"),(0,o.kt)("a",{className:"sourceLine",id:"cb1-12",title:"12"},"                -O webapi \\"),(0,o.kt)("a",{className:"sourceLine",id:"cb1-13",title:"13"},"                -V v6.0.274 \\"),(0,o.kt)("a",{className:"sourceLine",id:"cb1-14",title:"14"},"                --cmdlog"))))),(0,o.kt)("td",null,(0,o.kt)("div",{className:"sourceCode",id:"cb2"},(0,o.kt)("pre",{className:"sourceCode powershell"},(0,o.kt)("code",{className:"sourceCode powershell"},(0,o.kt)("a",{className:"sourceLine",id:"cb2-1",title:"1"},"stacks-cli scaffold -A core `"),(0,o.kt)("a",{className:"sourceLine",id:"cb2-2",title:"2"},"                --company MyCompany `"),(0,o.kt)("a",{className:"sourceLine",id:"cb2-3",title:"3"},"                --component backend `"),(0,o.kt)("a",{className:"sourceLine",id:"cb2-4",title:"4"},"                --domain stacks-example.",(0,o.kt)("span",{className:"fu"},"com")," `"),(0,o.kt)("a",{className:"sourceLine",id:"cb2-5",title:"5"},"                -F dotnet `"),(0,o.kt)("a",{className:"sourceLine",id:"cb2-6",title:"6"},"                -n my-webapi `"),(0,o.kt)("a",{className:"sourceLine",id:"cb2-7",title:"7"},"                -p azdo `"),(0,o.kt)("a",{className:"sourceLine",id:"cb2-8",title:"8"},"                -P aks `"),(0,o.kt)("a",{className:"sourceLine",id:"cb2-9",title:"9"},"                --tfcontainer my-webapi `"),(0,o.kt)("a",{className:"sourceLine",id:"cb2-10",title:"10"},"                --tfgroup supporting-group `"),(0,o.kt)("a",{className:"sourceLine",id:"cb2-11",title:"11"},"                --tfstorage kjh56sdfnjnkjn `"),(0,o.kt)("a",{className:"sourceLine",id:"cb2-12",title:"12"},"                -O webapi `"),(0,o.kt)("a",{className:"sourceLine",id:"cb2-13",title:"13"},"                -V v6.",(0,o.kt)("span",{className:"fu"},"0"),".",(0,o.kt)("span",{className:"fu"},"274")," `"),(0,o.kt)("a",{className:"sourceLine",id:"cb2-14",title:"14"},"                --cmdlog")))))))),(0,o.kt)("p",null,"This will get the specified version of the framework project, create a new project based on the options specified and then update the build files to work with those settings. Finally it will initalise a new git repository in the new project directory. All of the commands that have been run by the CLI will be saved in the ",(0,o.kt)("inlineCode",{parentName:"p"},"cmdlog.txt")," file in the directory that the command was run in."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"CLI with command line options",src:n(4589).Z})),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"#example_cli_cmdline"},"Figure 1")," shows the output of the command running in PowerShell. It also shows the commands that have been run in the ",(0,o.kt)("inlineCode",{parentName:"p"},"cmdlog.txt"),"."),(0,o.kt)("p",null,"The resultant project, as stated by the ",(0,o.kt)("inlineCode",{parentName:"p"},"Project path:")," statement in the screenshot, contains all the necessary files to run a simple .NET WebApi. The following listing shows that the solutions have been renamed with the ",(0,o.kt)("inlineCode",{parentName:"p"},"company")," name as the namespace, as shown on lines 19, 26, 29 and 36."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"\u2514\u2500\u2500\u2500my-webapi\n    \u251c\u2500\u2500\u2500.github\n    \u251c\u2500\u2500\u2500build\n    \u2502   \u2514\u2500\u2500\u2500azDevOps\n    \u2502       \u2514\u2500\u2500\u2500azure\n    \u2502           \u2514\u2500\u2500\u2500templates\n    \u2502               \u2514\u2500\u2500\u2500steps\n    \u2502                   \u2514\u2500\u2500\u2500build\n    \u251c\u2500\u2500\u2500contracts\n    \u251c\u2500\u2500\u2500deploy\n    \u2502   \u251c\u2500\u2500\u2500azure\n    \u2502   \u2502   \u2514\u2500\u2500\u2500app\n    \u2502   \u2502       \u2514\u2500\u2500\u2500kube\n    \u2502   \u251c\u2500\u2500\u2500k8s\n    \u2502   \u2502   \u2514\u2500\u2500\u2500app\n    \u2502   \u2514\u2500\u2500\u2500scripts\n    \u2514\u2500\u2500\u2500src\n        \u251c\u2500\u2500\u2500api\n        \u2502   \u251c\u2500\u2500\u2500MyCompany.core.API\n        \u2502   \u2502   \u251c\u2500\u2500\u2500Authentication\n        \u2502   \u2502   \u251c\u2500\u2500\u2500Authorization\n        \u2502   \u2502   \u2514\u2500\u2500\u2500Controllers\n        \u2502   \u2502       \u251c\u2500\u2500\u2500Category\n        \u2502   \u2502       \u251c\u2500\u2500\u2500DOMAIN\n        \u2502   \u2502       \u2514\u2500\u2500\u2500Item\n        \u2502   \u251c\u2500\u2500\u2500MyCompany.core.API.Models\n        \u2502   \u2502   \u251c\u2500\u2500\u2500Requests\n        \u2502   \u2502   \u2514\u2500\u2500\u2500Responses\n        \u2502   \u2514\u2500\u2500\u2500MyCompany.core.API.UnitTests\n        \u2502       \u2514\u2500\u2500\u2500Controllers\n        \u2502           \u251c\u2500\u2500\u2500Category\n        \u2502           \u251c\u2500\u2500\u2500DOMAIN\n        \u2502           \u2514\u2500\u2500\u2500Item\n        \u2514\u2500\u2500\u2500tests\n            \u2514\u2500\u2500\u2500Functional\n                \u2514\u2500\u2500\u2500MyCompany.core.API.FunctionalTests\n                    \u251c\u2500\u2500\u2500Builders\n                    \u2502   \u2514\u2500\u2500\u2500Http\n                    \u251c\u2500\u2500\u2500Configuration\n                    \u251c\u2500\u2500\u2500Models\n                    \u2514\u2500\u2500\u2500Tests\n                        \u251c\u2500\u2500\u2500Fixtures\n                        \u251c\u2500\u2500\u2500Steps\n                        \u2514\u2500\u2500\u2500Stories\n")),(0,o.kt)("h3",{id:"net-webapi-project-using-the-interactive-command"},".NET WebApi project using the interactive command"),(0,o.kt)("p",null,"The interactive command is designed to ask questions on the command line about the configuration required for setting up Amido Stacks. It will then save this configuration out to a file that can be read in using the ",(0,o.kt)("inlineCode",{parentName:"p"},"scaffold")," command."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"stacks-cli interactive\n")),(0,o.kt)("p",null,"The values as specified in the previous configuration table have been used in the following screenshot of the interactive session."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"stackscli interactive",src:n(983).Z})),(0,o.kt)("p",null,"The resulting configuration file contains all of the configuration that was used to generate the projects, which means it can be used to produce the same project stack again."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'log:\n  level: info\n  format: text\n  colour: true\ndirectory:\n  working: "C:\\\\Users\\\\RussellSeymour\\\\scratch\\\\projects"\nbusiness:\n  company: My Company\n  domain: core\n  component: backend\ncloud:\n  platform: azure\nnetwork:\n  base:\n    domain:\n      external: example-stacks.com\npipeline: azdo\nproject:\n- name: my-webapi\n  framework:\n    type: dotnet\n    option: webapi\n    version: v3.0.232\n  platform:\n    type: aks\n  sourcecontrol:\n    type: github\n    url: https://github.com/russellseymour/my-webapi\n  cloud:\n    region: ukwest\n    group: mywebapi-resources\nstacks:\n  dotnet:\n    webapi:\n      url: https://github.com/amido/stacks-dotnet\n      trunk: master\n    cqrs:\n      url: https://github.com/amido/stacks-dotnet-cqrs\n      trunk: master\n    events:\n      url: https://github.com/amido/stacks-dotnet-cqrs-events\n      trunk: master\n  java:\n    webapi:\n      url: https://github.com/amido/stacks-java\n      trunk: master\n    cqrs:\n      url: https://github.com/amido/stacks-java-cqrs\n      trunk: main\n    events:\n      url: https://github.com/amido/stacks-java-cqrs-events\n      trunk: main\n  nodejs:\n    csr:\n      url: https://github.com/amido/stacks-typescript-csr\n      trunk: master\n    ssr:\n      url: https://github.com/amido/stacks-typescript-ssr\n      trunk: master\n  infra:\n    aks:\n      url: https://github.com/amido/stacks-infrastructure-aks\n      trunk: master\nterraform:\n  backend:\n    storage: kjh56sdfnjnkjn\n    group: supporting-group\n    container: tfstate\noptions:\n  cmdlog: false\n  dryrun: false\n  nobanner: false\n  nocliversion: false\n')),(0,o.kt)("p",null,"The command that needs to be run next is displayed at the end of the output."),(0,o.kt)("h3",{id:"net-webapi-project-using-a-configuration-file"},".NET WebApi project using a configuration file"),(0,o.kt)("p",null,"The CLI can be used with a configuration file to generate the Amido Stacks based projects."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Note")),(0,o.kt)("p",{parentName:"blockquote"},"The configuration file that is used in the following example is from the previous example. However, any valid configuration file can be used.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"stacks-cli scaffold -c ./stacks.yml\n")),(0,o.kt)("p",null,"The CLI will use the configuration file to scaffold the requested projects."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Scaffolding projects with a configuration file",src:n(8634).Z})),(0,o.kt)("p",null,"As has been seen with using the scaffolding command with command line options, the resultant project has been created with the namespace set to the specified company name."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"\u2514\u2500\u2500\u2500my-webapi\n    \u251c\u2500\u2500\u2500.github\n    \u251c\u2500\u2500\u2500build\n    \u2502   \u2514\u2500\u2500\u2500azDevOps\n    \u2502       \u2514\u2500\u2500\u2500azure\n    \u2502           \u2514\u2500\u2500\u2500templates\n    \u2502               \u2514\u2500\u2500\u2500steps\n    \u2502                   \u2514\u2500\u2500\u2500build\n    \u251c\u2500\u2500\u2500contracts\n    \u251c\u2500\u2500\u2500deploy\n    \u2502   \u251c\u2500\u2500\u2500azure\n    \u2502   \u2502   \u2514\u2500\u2500\u2500app\n    \u2502   \u2502       \u2514\u2500\u2500\u2500kube\n    \u2502   \u251c\u2500\u2500\u2500k8s\n    \u2502   \u2502   \u2514\u2500\u2500\u2500app\n    \u2502   \u2514\u2500\u2500\u2500scripts\n    \u2514\u2500\u2500\u2500src\n        \u251c\u2500\u2500\u2500api\n        \u2502   \u251c\u2500\u2500\u2500MyCompany.core.API\n        \u2502   \u2502   \u251c\u2500\u2500\u2500Authentication\n        \u2502   \u2502   \u251c\u2500\u2500\u2500Authorization\n        \u2502   \u2502   \u2514\u2500\u2500\u2500Controllers\n        \u2502   \u2502       \u251c\u2500\u2500\u2500Category\n        \u2502   \u2502       \u251c\u2500\u2500\u2500DOMAIN\n        \u2502   \u2502       \u2514\u2500\u2500\u2500Item\n        \u2502   \u251c\u2500\u2500\u2500MyCompany.core.API.Models\n        \u2502   \u2502   \u251c\u2500\u2500\u2500Requests\n        \u2502   \u2502   \u2514\u2500\u2500\u2500Responses\n        \u2502   \u2514\u2500\u2500\u2500MyCompany.core.API.UnitTests\n        \u2502       \u2514\u2500\u2500\u2500Controllers\n        \u2502           \u251c\u2500\u2500\u2500Category\n        \u2502           \u251c\u2500\u2500\u2500DOMAIN\n        \u2502           \u2514\u2500\u2500\u2500Item\n        \u2514\u2500\u2500\u2500tests\n            \u2514\u2500\u2500\u2500Functional\n                \u2514\u2500\u2500\u2500MyCompany.core.API.FunctionalTests\n                    \u251c\u2500\u2500\u2500Builders\n                    \u2502   \u2514\u2500\u2500\u2500Http\n                    \u251c\u2500\u2500\u2500Configuration\n                    \u251c\u2500\u2500\u2500Models\n                    \u2514\u2500\u2500\u2500Tests\n                        \u251c\u2500\u2500\u2500Fixtures\n                        \u251c\u2500\u2500\u2500Steps\n                        \u2514\u2500\u2500\u2500Stories\n")),(0,o.kt)("h2",{id:"java"},"Java"),(0,o.kt)("p",null,"The following table shows the additional options that are required when scaffolding the Java examples."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Value"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"framework"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"java")),(0,o.kt)("td",{parentName:"tr",align:null},"Framework being used, e.g. ",(0,o.kt)("inlineCode",{parentName:"td"},"dotnet"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"java")," or ",(0,o.kt)("inlineCode",{parentName:"td"},"infra"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"framework","_","version"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"v1.0.0")),(0,o.kt)("td",{parentName:"tr",align:null},"Version of the framework option to grab.")))),(0,o.kt)("p",null,"Java Specific settings"),(0,o.kt)("h3",{id:"java-webapi-project-from-command-line"},"Java WebApi project from command line"),(0,o.kt)("p",null,"Run the following command to scaffold a new Java project based on the Amido WebApi Java project. The project will be created in the working directory, which in this case will be the directory that the command has is being run under."),(0,o.kt)("table",null,(0,o.kt)("colgroup",null,(0,o.kt)("col",{style:{width:"50%"}}),(0,o.kt)("col",{style:{width:"50%"}})),(0,o.kt)("thead",null,(0,o.kt)("tr",{className:"header"},(0,o.kt)("th",null,"Bash"),(0,o.kt)("th",null,"PowerShell"))),(0,o.kt)("tbody",null,(0,o.kt)("tr",{className:"odd"},(0,o.kt)("td",null,(0,o.kt)("div",{className:"sourceCode",id:"cb1"},(0,o.kt)("pre",{className:"sourceCode bash"},(0,o.kt)("code",{className:"sourceCode bash"},(0,o.kt)("a",{className:"sourceLine",id:"cb1-1",title:"1"},(0,o.kt)("span",{className:"ex"},"stacks-cli")," scaffold -A core \\"),(0,o.kt)("a",{className:"sourceLine",id:"cb1-2",title:"2"},"                --company MyCompany \\"),(0,o.kt)("a",{className:"sourceLine",id:"cb1-3",title:"3"},"                --component backend \\"),(0,o.kt)("a",{className:"sourceLine",id:"cb1-4",title:"4"},"                --domain stacks-example.com \\"),(0,o.kt)("a",{className:"sourceLine",id:"cb1-5",title:"5"},"                -F java \\"),(0,o.kt)("a",{className:"sourceLine",id:"cb1-6",title:"6"},"                -n my-webapi \\"),(0,o.kt)("a",{className:"sourceLine",id:"cb1-7",title:"7"},"                -p azdo \\"),(0,o.kt)("a",{className:"sourceLine",id:"cb1-8",title:"8"},"                -P aks \\"),(0,o.kt)("a",{className:"sourceLine",id:"cb1-9",title:"9"},"                --tfcontainer my-webapi \\"),(0,o.kt)("a",{className:"sourceLine",id:"cb1-10",title:"10"},"                --tfgroup supporting-group \\"),(0,o.kt)("a",{className:"sourceLine",id:"cb1-11",title:"11"},"                --tfstorage kjh56sdfnjnkjn \\"),(0,o.kt)("a",{className:"sourceLine",id:"cb1-12",title:"12"},"                -O webapi \\"),(0,o.kt)("a",{className:"sourceLine",id:"cb1-13",title:"13"},"                -V v1.0.0 \\"),(0,o.kt)("a",{className:"sourceLine",id:"cb1-14",title:"14"},"                -u https://github.com/my-company/my-webapi \\"),(0,o.kt)("a",{className:"sourceLine",id:"cb1-15",title:"15"},"                --cmdlog"))))),(0,o.kt)("td",null,(0,o.kt)("div",{className:"sourceCode",id:"cb2"},(0,o.kt)("pre",{className:"sourceCode powershell"},(0,o.kt)("code",{className:"sourceCode powershell"},(0,o.kt)("a",{className:"sourceLine",id:"cb2-1",title:"1"},"stacks-cli scaffold -A core `"),(0,o.kt)("a",{className:"sourceLine",id:"cb2-2",title:"2"},"                --company MyCompany `"),(0,o.kt)("a",{className:"sourceLine",id:"cb2-3",title:"3"},"                --component backend `"),(0,o.kt)("a",{className:"sourceLine",id:"cb2-4",title:"4"},"                --domain stacks-example.",(0,o.kt)("span",{className:"fu"},"com")," `"),(0,o.kt)("a",{className:"sourceLine",id:"cb2-5",title:"5"},"                -F java `"),(0,o.kt)("a",{className:"sourceLine",id:"cb2-6",title:"6"},"                -n my-webapi `"),(0,o.kt)("a",{className:"sourceLine",id:"cb2-7",title:"7"},"                -p azdo `"),(0,o.kt)("a",{className:"sourceLine",id:"cb2-8",title:"8"},"                -P aks `"),(0,o.kt)("a",{className:"sourceLine",id:"cb2-9",title:"9"},"                --tfcontainer my-webapi `"),(0,o.kt)("a",{className:"sourceLine",id:"cb2-10",title:"10"},"                --tfgroup supporting-group `"),(0,o.kt)("a",{className:"sourceLine",id:"cb2-11",title:"11"},"                --tfstorage kjh56sdfnjnkjn `"),(0,o.kt)("a",{className:"sourceLine",id:"cb2-12",title:"12"},"                -O webapi `"),(0,o.kt)("a",{className:"sourceLine",id:"cb2-13",title:"13"},"                -V v1.",(0,o.kt)("span",{className:"fu"},"0"),".",(0,o.kt)("span",{className:"fu"},"0")," `"),(0,o.kt)("a",{className:"sourceLine",id:"cb2-14",title:"14"},"                -u https://github.",(0,o.kt)("span",{className:"fu"},"com"),"/my-company/my-webapi `"),(0,o.kt)("a",{className:"sourceLine",id:"cb2-15",title:"15"},"                --cmdlog")))))))),(0,o.kt)("p",null,"This command will download version v1.0.0, from the GitHub releases for the project, into a temporary directory. It will then run the specified Maven commands from the project settings file and scaffold a new project with the specified name, in the current directory. Once the project has been setup it will be initialised as Git repository and, where applicable, set the remote origin for the repo. All of the commands that are executed by the CLI will be saved in a file called ",(0,o.kt)("inlineCode",{parentName:"p"},"cmdlog.txt"),"."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"CLI scaffolding Java project from command line",src:n(4434).Z})),(0,o.kt)("p",null,"As the option to save all the commands that are executed by the CLI has been specified, the ",(0,o.kt)("inlineCode",{parentName:"p"},"cmdlog.txt")," file for the above command is as follows."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Command log for the Java webapi scaffold",src:n(7776).Z})),(0,o.kt)("p",null,"The resultant project, as stated by the ",(0,o.kt)("inlineCode",{parentName:"p"},"Project path:")," statement in the screenshot, contains all the necessary files to run a simple Java WebApi. The following listing shows that the solutions have been renamed with the ",(0,o.kt)("inlineCode",{parentName:"p"},"company")," name as the namespace."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"\u2514\u2500\u2500\u2500my-webapi\n    \u251c\u2500\u2500\u2500api-tests\n    \u2502   \u251c\u2500\u2500\u2500.mvn\n    \u2502   \u2502   \u2514\u2500\u2500\u2500wrapper\n    \u2502   \u2514\u2500\u2500\u2500src\n    \u2502       \u2514\u2500\u2500\u2500test\n    \u2502           \u251c\u2500\u2500\u2500java\n    \u2502           \u2502   \u2514\u2500\u2500\u2500com\n    \u2502           \u2502       \u2514\u2500\u2500\u2500MyCompany\n    \u2502           \u2502           \u2514\u2500\u2500\u2500core\n    \u2502           \u2502               \u2514\u2500\u2500\u2500backend\n    \u2502           \u2502                   \u2514\u2500\u2500\u2500tests\n    \u2502           \u2502                       \u251c\u2500\u2500\u2500menu\n    \u2502           \u2502                       \u251c\u2500\u2500\u2500models\n    \u2502           \u2502                       \u251c\u2500\u2500\u2500pact\n    \u2502           \u2502                       \u2502   \u2514\u2500\u2500\u2500pacts\n    \u2502           \u2502                       \u251c\u2500\u2500\u2500status\n    \u2502           \u2502                       \u251c\u2500\u2500\u2500stepdefinitions\n    \u2502           \u2502                       \u2514\u2500\u2500\u2500templates\n    \u2502           \u2514\u2500\u2500\u2500resources\n    \u2502               \u251c\u2500\u2500\u2500cucumber\n    \u2502               \u2502   \u2514\u2500\u2500\u2500features\n    \u2502               \u2502       \u2514\u2500\u2500\u2500status\n    \u2502               \u2514\u2500\u2500\u2500templates\n    \u251c\u2500\u2500\u2500api-tests-karate\n    \u2502   \u251c\u2500\u2500\u2500.mvn\n    \u2502   \u2502   \u2514\u2500\u2500\u2500wrapper\n    \u2502   \u2514\u2500\u2500\u2500src\n    \u2502       \u2514\u2500\u2500\u2500test\n    \u2502           \u251c\u2500\u2500\u2500java\n    \u2502           \u2502   \u2514\u2500\u2500\u2500org\n    \u2502           \u2502       \u2514\u2500\u2500\u2500MyCompany\n    \u2502           \u2502           \u2514\u2500\u2500\u2500core\n    \u2502           \u2502               \u2514\u2500\u2500\u2500backend\n    \u2502           \u2502                   \u2514\u2500\u2500\u2500tests\n    \u2502           \u2514\u2500\u2500\u2500resources\n    \u251c\u2500\u2500\u2500build\n    \u2502   \u251c\u2500\u2500\u2500azDevOps\n    \u2502   \u2502   \u2514\u2500\u2500\u2500azure\n    \u2502   \u2502       \u251c\u2500\u2500\u2500coverage\n    \u2502   \u2502       \u2514\u2500\u2500\u2500templates\n    \u2502   \u2502           \u2514\u2500\u2500\u2500steps\n    \u2502   \u2502               \u251c\u2500\u2500\u2500build\n    \u2502   \u2502               \u2514\u2500\u2500\u2500deploy\n    \u2502   \u2514\u2500\u2500\u2500jenkins\n    \u2502       \u2514\u2500\u2500\u2500azure\n    \u251c\u2500\u2500\u2500deploy\n    \u2502   \u251c\u2500\u2500\u2500azure\n    \u2502   \u2502   \u2514\u2500\u2500\u2500app\n    \u2502   \u2502       \u2514\u2500\u2500\u2500kube\n    \u2502   \u2514\u2500\u2500\u2500k8s\n    \u2502       \u2514\u2500\u2500\u2500app\n    \u2514\u2500\u2500\u2500java\n        \u251c\u2500\u2500\u2500.mvn\n        \u2502   \u2514\u2500\u2500\u2500wrapper\n        \u251c\u2500\u2500\u2500src\n        \u2502   \u251c\u2500\u2500\u2500main\n        \u2502   \u2502   \u251c\u2500\u2500\u2500java\n        \u2502   \u2502   \u2502   \u2514\u2500\u2500\u2500com\n        \u2502   \u2502   \u2502       \u2514\u2500\u2500\u2500MyCompany\n        \u2502   \u2502   \u2502           \u2514\u2500\u2500\u2500core\n        \u2502   \u2502   \u2502               \u2514\u2500\u2500\u2500backend\n        \u2502   \u2502   \u2502                   \u2514\u2500\u2500\u2500menu\n        \u2502   \u2502   \u2502                       \u251c\u2500\u2500\u2500api\n        \u2502   \u2502   \u2502                       \u2502   \u251c\u2500\u2500\u2500v1\n        \u2502   \u2502   \u2502                       \u2502   \u2502   \u251c\u2500\u2500\u2500dto\n        \u2502   \u2502   \u2502                       \u2502   \u2502   \u2502   \u251c\u2500\u2500\u2500request\n        \u2502   \u2502   \u2502                       \u2502   \u2502   \u2502   \u2514\u2500\u2500\u2500response\n        \u2502   \u2502   \u2502                       \u2502   \u2502   \u2514\u2500\u2500\u2500impl\n        \u2502   \u2502   \u2502                       \u2502   \u2514\u2500\u2500\u2500v2\n        \u2502   \u2502   \u2502                       \u2502       \u2514\u2500\u2500\u2500impl\n        \u2502   \u2502   \u2502                       \u251c\u2500\u2500\u2500domain\n        \u2502   \u2502   \u2502                       \u2514\u2500\u2500\u2500mappers\n        \u2502   \u2502   \u2514\u2500\u2500\u2500resources\n        \u2502   \u2502       \u2514\u2500\u2500\u2500local\n        \u2502   \u2514\u2500\u2500\u2500test\n        \u2502       \u2514\u2500\u2500\u2500java\n        \u2502           \u2514\u2500\u2500\u2500com\n        \u2502               \u2514\u2500\u2500\u2500MyCompany\n        \u2502                   \u2514\u2500\u2500\u2500core\n        \u2502                       \u2514\u2500\u2500\u2500backend\n        \u2502                           \u251c\u2500\u2500\u2500actuator\n        \u2502                           \u251c\u2500\u2500\u2500menu\n        \u2502                           \u2502   \u251c\u2500\u2500\u2500api\n        \u2502                           \u2502   \u2502   \u251c\u2500\u2500\u2500v1\n        \u2502                           \u2502   \u2502   \u2502   \u251c\u2500\u2500\u2500dto\n        \u2502                           \u2502   \u2502   \u2502   \u2502   \u2514\u2500\u2500\u2500response\n        \u2502                           \u2502   \u2502   \u2502   \u2514\u2500\u2500\u2500impl\n        \u2502                           \u2502   \u2502   \u2514\u2500\u2500\u2500v2\n        \u2502                           \u2502   \u2502       \u2514\u2500\u2500\u2500impl\n        \u2502                           \u2502   \u251c\u2500\u2500\u2500domain\n        \u2502                           \u2502   \u2514\u2500\u2500\u2500mappers\n        \u2502                           \u2514\u2500\u2500\u2500util\n        \u2514\u2500\u2500\u2500target\n            \u2514\u2500\u2500\u2500classes\n                \u2514\u2500\u2500\u2500local\n")),(0,o.kt)("h3",{id:"java-webapi-project-using-the-interactive-command"},"Java WebApi project using the interactive command"),(0,o.kt)("p",null,"As with the .NET example, it is possible to create a configuration file interactively to scaffold out a new project Java project. This is achieved using the ",(0,o.kt)("inlineCode",{parentName:"p"},"interactive")," sub-command."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Note")),(0,o.kt)("p",{parentName:"blockquote"},"The examples shown here have been run in WSL on Windows 11.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"---\nstacks-cli interactive\n---\n")),(0,o.kt)("p",null,"The values specified in the example are the ones as show in the configuration table and are the same as the settings used in the Java example fo scaffolding from the command line."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"stackscli interactive java",src:n(4018).Z})),(0,o.kt)("p",null,"The resulting configuration file contains all of the configuration that was used to generate the projects, which means it can be used to produce the same project stack again."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'log:\n  level: info\n  format: text\n  colour: true\n  file: ""\ndirectory:\n  working: /home/russells/projects\nbusiness:\n  company: My Company\n  domain: core\n  component: backend\ncloud:\n  platform: azure\nnetwork:\n  base:\n    domain:\n      external: example-stacks.com\npipeline: azdo\nproject:\n- name: my-webapi\n  framework:\n    type: java\n    option: webapi\n    version: v1.0.0\n  sourcecontrol:\n    type: github\n    url: https://github.com/my-company/my-webapi\n  cloud:\n    region: ukwest\n    group: mywebapi-resources\nstacks:\n  dotnet:\n    webapi:\n      url: https://github.com/amido/stacks-dotnet\n      trunk: master\n    cqrs:\n      url: https://github.com/amido/stacks-dotnet-cqrs\n      trunk: master\n    events:\n      url: https://github.com/amido/stacks-dotnet-cqrs-events\n      trunk: master\n  java:\n    webapi:\n      url: https://github.com/amido/stacks-java\n      trunk: master\n    cqrs:\n      url: https://github.com/amido/stacks-java-cqrs\n      trunk: main\n    events:\n      url: https://github.com/amido/stacks-java-cqrs-events\n      trunk: main\n  nodejs:\n    csr:\n      url: https://github.com/amido/stacks-typescript-csr\n      trunk: master\n    ssr:\n      url: https://github.com/amido/stacks-typescript-ssr\n      trunk: master\n  infra:\n    aks:\n      url: https://github.com/amido/stacks-infrastructure-aks/\n      trunk: master\nterraform:\n  backend:\n    storage: kjh56sdfnjnkjn\n    group: supporting-group\n    container: tfstate\noptions:\n  cmdlog: true\n  dryrun: false\n  nobanner: false\n  nocliversion: false\n')),(0,o.kt)("p",null,"The command that needs to be run next is displayed at the end of the output."),(0,o.kt)("h3",{id:"java-webapi-project-using-a-configuration-file"},"Java WebApi project using a configuration file"),(0,o.kt)("p",null,"The Amido Stacks CLI can be used with a configuration file to setup multiple projects in one go."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Note")),(0,o.kt)("p",{parentName:"blockquote"},"The configuration file used in this example is the one that was generated from the ",(0,o.kt)("inlineCode",{parentName:"p"},"interactive")," command in the previous example.")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Note")),(0,o.kt)("p",{parentName:"blockquote"},"The examples shown here have been run in WSL on Windows 11.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"stacks-cli scaffold -c ./stacks.yml\n")),(0,o.kt)("p",null,"The CLI will use the configuration file to get all the settings required to scaffold the projects that have been requested."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Scaffold Java project",src:n(2864).Z})),(0,o.kt)("p",null,"As the configuration file was configured with a company name with a space in it, the CLI has modified the value so it will be compatible with the commands that need to be run. This can be seen in the output of the CLi in the above image."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-txt"},"\u2514\u2500\u2500 my-webapi\n    \u251c\u2500\u2500 api-tests\n    \u2502\xa0\xa0 \u2514\u2500\u2500 src\n    \u2502\xa0\xa0     \u2514\u2500\u2500 test\n    \u2502\xa0\xa0         \u251c\u2500\u2500 java\n    \u2502\xa0\xa0         \u2502\xa0\xa0 \u2514\u2500\u2500 com\n    \u2502\xa0\xa0         \u2502\xa0\xa0     \u2514\u2500\u2500 My_Company\n    \u2502\xa0\xa0         \u2502\xa0\xa0         \u2514\u2500\u2500 core\n    \u2502\xa0\xa0         \u2502\xa0\xa0             \u2514\u2500\u2500 backend\n    \u2502\xa0\xa0         \u2502\xa0\xa0                 \u2514\u2500\u2500 tests\n    \u2502\xa0\xa0         \u2502\xa0\xa0                     \u251c\u2500\u2500 menu\n    \u2502\xa0\xa0         \u2502\xa0\xa0                     \u251c\u2500\u2500 models\n    \u2502\xa0\xa0         \u2502\xa0\xa0                     \u251c\u2500\u2500 pact\n    \u2502\xa0\xa0         \u2502\xa0\xa0                     \u2502\xa0\xa0 \u2514\u2500\u2500 pacts\n    \u2502\xa0\xa0         \u2502\xa0\xa0                     \u251c\u2500\u2500 status\n    \u2502\xa0\xa0         \u2502\xa0\xa0                     \u251c\u2500\u2500 stepdefinitions\n    \u2502\xa0\xa0         \u2502\xa0\xa0                     \u2514\u2500\u2500 templates\n    \u2502\xa0\xa0         \u2514\u2500\u2500 resources\n    \u2502\xa0\xa0             \u251c\u2500\u2500 cucumber\n    \u2502\xa0\xa0             \u2502\xa0\xa0 \u2514\u2500\u2500 features\n    \u2502\xa0\xa0             \u2502\xa0\xa0     \u2514\u2500\u2500 status\n    \u2502\xa0\xa0             \u2514\u2500\u2500 templates\n    \u251c\u2500\u2500 api-tests-karate\n    \u2502\xa0\xa0 \u2514\u2500\u2500 src\n    \u2502\xa0\xa0     \u2514\u2500\u2500 test\n    \u2502\xa0\xa0         \u251c\u2500\u2500 java\n    \u2502\xa0\xa0         \u2502\xa0\xa0 \u2514\u2500\u2500 components\n    \u2502\xa0\xa0         \u2502\xa0\xa0     \u2514\u2500\u2500 menu\n    \u2502\xa0\xa0         \u2514\u2500\u2500 resources\n    \u251c\u2500\u2500 build\n    \u2502\xa0\xa0 \u251c\u2500\u2500 azDevOps\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 azure\n    \u2502\xa0\xa0 \u2502\xa0\xa0     \u251c\u2500\u2500 coverage\n    \u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 templates\n    \u2502\xa0\xa0 \u2502\xa0\xa0         \u2514\u2500\u2500 steps\n    \u2502\xa0\xa0 \u2502\xa0\xa0             \u251c\u2500\u2500 build\n    \u2502\xa0\xa0 \u2502\xa0\xa0             \u2514\u2500\u2500 deploy\n    \u2502\xa0\xa0 \u2514\u2500\u2500 jenkins\n    \u2502\xa0\xa0     \u2514\u2500\u2500 azure\n    \u251c\u2500\u2500 deploy\n    \u2502\xa0\xa0 \u251c\u2500\u2500 azure\n    \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 app\n    \u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 kube\n    \u2502\xa0\xa0 \u2514\u2500\u2500 k8s\n    \u2502\xa0\xa0     \u2514\u2500\u2500 app\n    \u2514\u2500\u2500 java\n        \u251c\u2500\u2500 src\n        \u2502\xa0\xa0 \u251c\u2500\u2500 main\n        \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 java\n        \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 com\n        \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 My_Company\n        \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0         \u2514\u2500\u2500 core\n        \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0             \u2514\u2500\u2500 backend\n        \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0                 \u2514\u2500\u2500 menu\n        \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0                     \u251c\u2500\u2500 api\n        \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0                     \u2502\xa0\xa0 \u251c\u2500\u2500 v1\n        \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0                     \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 dto\n        \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0                     \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 request\n        \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0                     \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 response\n        \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0                     \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 impl\n        \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0                     \u2502\xa0\xa0 \u2514\u2500\u2500 v2\n        \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0                     \u2502\xa0\xa0     \u2514\u2500\u2500 impl\n        \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0                     \u251c\u2500\u2500 domain\n        \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0                     \u2514\u2500\u2500 mappers\n        \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 resources\n        \u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 local\n        \u2502\xa0\xa0 \u2514\u2500\u2500 test\n        \u2502\xa0\xa0     \u2514\u2500\u2500 java\n        \u2502\xa0\xa0         \u2514\u2500\u2500 com\n        \u2502\xa0\xa0             \u2514\u2500\u2500 My_Company\n        \u2502\xa0\xa0                 \u2514\u2500\u2500 core\n        \u2502\xa0\xa0                     \u2514\u2500\u2500 backend\n        \u2502\xa0\xa0                         \u251c\u2500\u2500 actuator\n        \u2502\xa0\xa0                         \u251c\u2500\u2500 menu\n        \u2502\xa0\xa0                         \u2502\xa0\xa0 \u251c\u2500\u2500 api\n        \u2502\xa0\xa0                         \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 v1\n        \u2502\xa0\xa0                         \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 dto\n        \u2502\xa0\xa0                         \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 response\n        \u2502\xa0\xa0                         \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 impl\n        \u2502\xa0\xa0                         \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 v2\n        \u2502\xa0\xa0                         \u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 impl\n        \u2502\xa0\xa0                         \u2502\xa0\xa0 \u251c\u2500\u2500 domain\n        \u2502\xa0\xa0                         \u2502\xa0\xa0 \u2514\u2500\u2500 mappers\n        \u2502\xa0\xa0                         \u2514\u2500\u2500 util\n        \u2514\u2500\u2500 target\n            \u2514\u2500\u2500 classes\n                \u2514\u2500\u2500 local\n")),(0,o.kt)("h2",{id:"running-scaffold-command-again"},"Running scaffold command again"),(0,o.kt)("p",null,"Due to the fact that the CLI does quite a lot of work, it will not attempt to create the projects if the project path already exists. For example, running the same command as before, without changing any of the settings will result in an error being displayed during the creation of the project."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"stacks-cli scaffold -c ./stacks.yml\n")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Project protection guard",src:n(2861).Z})),(0,o.kt)("p",null,"As can be seen the CLI will not overwrite anything at the same target path."),(0,o.kt)("p",null,"It is possible to change this behaviour, by adding the ",(0,o.kt)("inlineCode",{parentName:"p"},"--force")," option to the command line. This will remove any existing directory and recreate the project in its place."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Note")),(0,o.kt)("p",{parentName:"blockquote"},"If the project directory already exists but it is empty, e.g. it does not contain any files or directories, then the CLI will continue to use the directory and warn that it has done so.")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"stackscli overwrite empty dir",src:n(8969).Z})),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"stacks-cli scaffold -c ./stacks.yml --force\n")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Force removal of existng project directories",src:n(2930).Z})),(0,o.kt)("h2",{id:"checking-framework-command-versions"},"Checking Framework command versions"),(0,o.kt)("p",null,"Each project that gets scaffolded by the CLI, has has ",(0,o.kt)("inlineCode",{parentName:"p"},"stackscli.yml")," file which informs the CLI what to do for that project. One of the things that can be set is constraints on the version of the framework that needs to be installed."),(0,o.kt)("p",null,"For example take the following project settings file."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'framework:\n  name: dotnet\n  commands:\n    - name: dotnet\n      version: ">= 3.1, < 3.2"\n\n\n# Pipeline files\npipeline:\n  - type: azdo\n    files:\n      - name: build\n        path: build/azDevOps/azure/azure-pipelines-netcore-k8s.yml\n      - name: variable\n        path: build/azDevOps/azure/azuredevops-vars.yml\n    replacements:\n      - pattern: ^.*stacks-credentials-nonprod-kv$\n        value: ""\n\n# The init stage are things that are required to run before the template is run\ninit:\n  operations:\n    - action: cmd\n      cmd: dotnet\n      args: new -i .\n      desc: Install "stacks-webapi" template from the repo directory\n    - action: cmd\n      cmd: dotnet\n      args: new stacks-webapi -n {{ .Input.Business.Company }}.{{ .Input.Business.Domain }} -o {{ .Project.Directory.WorkingDir }}\n      desc: Create a project using the "stacks-webapi" template\n')),(0,o.kt)("p",null,"When the CLI runs it will take take the version constraint, on line 5, and compare the version of ",(0,o.kt)("inlineCode",{parentName:"p"},"dotnet")," it finds with this constraint. The following screenshot shows this in action on a machine that has .NET version ",(0,o.kt)("inlineCode",{parentName:"p"},"5.0.303")," installed."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Dotnet command version check",src:n(5745).Z})),(0,o.kt)("p",null,"It is possible to bypass this version check by using the ",(0,o.kt)("inlineCode",{parentName:"p"},"--force")," option on the command line, but note this is a destructive operation and if the project exists at the same location as the CLI is trying to write to the original project will be deleted."),(0,o.kt)("p",null,"In this case the error will still be displayed, but a a warning will state that the process is continuing."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Dotnet command bypass version check",src:n(7727).Z})))}m.isMDXComponent=!0},4434:function(e,t,n){t.Z=n.p+"assets/images/example-java-webapi-cmdline-eb377394dfd294589a6b45ef53ff4d1f.png"},7776:function(e,t,n){t.Z=n.p+"assets/images/example-java-webapi-cmdlog-6cc4b20c01f2d6af5a31e8e577cb59a7.png"},4589:function(e,t,n){t.Z=n.p+"assets/images/example_dotnet_webapi_cmdline-4c93ef0ed9081698b04025c32b73ceaa.png"},7727:function(e,t,n){t.Z=n.p+"assets/images/stacks-scaffold-command-version-check-force-de222fd387e9235a9261d5f02dddd8ce.png"},5745:function(e,t,n){t.Z=n.p+"assets/images/stacks-scaffold-command-version-check-a3f4d95d722ea9e847b24c4459e3e399.png"},8634:function(e,t,n){t.Z=n.p+"assets/images/stackscli-dotnet-webapi-config-file-faae648ae7174345783eb0c00ba793d2.png"},4018:function(e,t,n){t.Z=n.p+"assets/images/stackscli-interactive-java-a6f93db0e7b85036ee612a0d672390a6.png"},983:function(e,t,n){t.Z=n.p+"assets/images/stackscli-interactive-3047d04c1472210c15c8838ddf436195.png"},2864:function(e,t,n){t.Z=n.p+"assets/images/stackscli-java-webapi-config-file-aee3a7f6bc665489d2203df962502090.png"},8969:function(e,t,n){t.Z=n.p+"assets/images/stackscli-overwrite-empty-dir-ccf620e711681639a96b3561728c0b67.png"},2930:function(e,t,n){t.Z=n.p+"assets/images/stackscli-scaffold-project-guard-force-1c1fc57e107ecc103b9f81cd7df414df.png"},2861:function(e,t,n){t.Z=n.p+"assets/images/stackscli-scaffold-project-guard-50975cd95bb5cbb5e62dc01aad52687c.png"}}]);