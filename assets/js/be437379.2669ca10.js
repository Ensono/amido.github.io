"use strict";(self.webpackChunkstacks=self.webpackChunkstacks||[]).push([[9034],{3905:function(e,t,i){i.d(t,{Zo:function(){return p},kt:function(){return m}});var n=i(7294);function r(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function a(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function s(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?a(Object(i),!0).forEach((function(t){r(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function o(e,t){if(null==e)return{};var i,n,r=function(e,t){if(null==e)return{};var i,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||(r[i]=e[i]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var c=n.createContext({}),l=function(e){var t=n.useContext(c),i=t;return e&&(i="function"==typeof e?e(t):s(s({},t),e)),i},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var i=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=l(i),g=r,m=u["".concat(c,".").concat(g)]||u[g]||d[g]||a;return i?n.createElement(m,s(s({ref:t},p),{},{components:i})):n.createElement(m,s({ref:t},p))}));function m(e,t){var i=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=i.length,s=new Array(a);s[0]=g;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[u]="string"==typeof e?e:r,s[1]=o;for(var l=2;l<a;l++)s[l]=i[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,i)}g.displayName="MDXCreateElement"},8255:function(e,t,i){i.r(t),i.d(t,{contentTitle:function(){return c},default:function(){return g},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return p}});var n=i(7462),r=i(3366),a=(i(7294),i(3905)),s=["components"],o={id:"accessibility_testing",title:"Automated Accessibility Testing With Axe",sidebar_label:"Automated Accessibility Testing",hide_title:!1,hide_table_of_contents:!0,description:"Accessibility testing with Axe",keywords:["axe","tests","testing","jest","cypress","accessibility testing"]},c=void 0,l={unversionedId:"testing/accessibility_testing",id:"testing/accessibility_testing",isDocsHomePage:!1,title:"Automated Accessibility Testing With Axe",description:"Accessibility testing with Axe",source:"@site/docs/testing/axe_automated_accessibility_testing.md",sourceDirName:"testing",slug:"/testing/accessibility_testing",permalink:"/docs/testing/accessibility_testing",tags:[],version:"current",frontMatter:{id:"accessibility_testing",title:"Automated Accessibility Testing With Axe",sidebar_label:"Automated Accessibility Testing",hide_title:!1,hide_table_of_contents:!0,description:"Accessibility testing with Axe",keywords:["axe","tests","testing","jest","cypress","accessibility testing"]},sidebar:"docs",previous:{title:"API Contract Testing With Pact",permalink:"/docs/testing/contract_testing_pact"},next:{title:"Gatling Performance Testing",permalink:"/docs/testing/performance_testing_gatling"}},p=[{value:"Axe: Accessibility testing",id:"axe-accessibility-testing",children:[{value:"Cypress: Debugging Axe failures",id:"cypress-debugging-axe-failures",children:[],level:3}],level:2}],u={toc:p},d="wrapper";function g(e){var t=e.components,i=(0,r.Z)(e,s);return(0,a.kt)(d,(0,n.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"danger")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"We recommend and already have support within ",(0,a.kt)("a",{parentName:"p",href:"/docs/testing/testing_in_nx/playwright_accessibility_testing"},"Playwright for Axe")," and ",(0,a.kt)("a",{parentName:"p",href:"/docs/testing/testing_in_nx/cypress_accessibility_testing"},"Cypress for Axe"),"!"))),(0,a.kt)("h2",{id:"axe-accessibility-testing"},"Axe: Accessibility testing"),(0,a.kt)("p",null,"From the Dequeue family of products, we are using\n",(0,a.kt)("a",{parentName:"p",href:"https://www.deque.com/axe/"},"aXe")," for accessibility testing. When developing, we\nexpect to support WCAG 2.1 Level AA ",'["wcag21aa"]'," at a minimum."),(0,a.kt)("p",null,"aXe tests are performed on two levels:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Rendering the React component and testing with Jest."),(0,a.kt)("li",{parentName:"ol"},"Rendering the entire page and testing with Cypress.")),(0,a.kt)("p",null,"Both examples are in the scaffolded web app templates: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/amido/stacks-webapp-template/tree/master/packages/scaffolding-cli/templates/src/ssr"},"https://github.com/amido/stacks-webapp-template/tree/master/packages/scaffolding-cli/templates/src/ssr")),(0,a.kt)("h3",{id:"cypress-debugging-axe-failures"},"Cypress: Debugging Axe failures"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},'When accessibility violations are detected, your test will fail and an entry titled "A11Y ERROR!" will be added to the command log for each type of violation found (they will be above the failed assertion). Clicking on those will reveal more specifics about the error in the DevTools console.\nSource: ',(0,a.kt)("a",{parentName:"p",href:"https://github.com/avanslaars/cypress-axe#standard-output"},"cypress-axe#standard-output"))),(0,a.kt)("p",null,"For information on how to fix the failure, follow the HelpUrl printed to the console."))}g.isMDXComponent=!0}}]);