"use strict";(self.webpackChunkstacks=self.webpackChunkstacks||[]).push([[4918],{2024:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"workloads/azure/data/data_engineering/testing_data_azure","title":"Testing","description":"Testing","source":"@site/docs/workloads/azure/data/data_engineering/testing_data_azure.md","sourceDirName":"workloads/azure/data/data_engineering","slug":"/workloads/azure/data/data_engineering/testing_data_azure","permalink":"/docs/workloads/azure/data/data_engineering/testing_data_azure","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"testing_data_azure","title":"Testing","sidebar_label":"Testing","hide_title":false,"hide_table_of_contents":false,"description":"Testing","keywords":["testing"]},"sidebar":"docs","previous":{"title":"Data Quality","permalink":"/docs/workloads/azure/data/data_engineering/data_quality_azure"},"next":{"title":"Getting Started","permalink":"/docs/workloads/azure/data/getting_started/"}}');var a=n(4848),i=n(8453);const r={id:"testing_data_azure",title:"Testing",sidebar_label:"Testing",hide_title:!1,hide_table_of_contents:!1,description:"Testing",keywords:["testing"]},d=void 0,o={},l=[{value:"Unit tests",id:"unit-tests",level:2},{value:"End-to-end tests",id:"end-to-end-tests",level:2},{value:"Code quality and linting",id:"code-quality-and-linting",level:2}];function c(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"Data workloads generated in Ensono Stacks feature a framework for testing. Automated tests are essential at every stage of a data pipeline for reasons including:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"Early detection of issues: Catch errors and issues early in the data pipeline development process."}),"\n",(0,a.jsx)(t.li,{children:"Regression testing: As new code is added, ensure that changes do not introduce regressions or break existing functionality."}),"\n",(0,a.jsx)(t.li,{children:"Support CI/CD: Running automated tests are an essential part of the CI/CD process."}),"\n",(0,a.jsx)(t.li,{children:"Collaboration: A shared set of expectations and a common framework for testing can help collaboration between developers and end users."}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["In addition to the automated tests below, Ensono Stacks also has a framework for ",(0,a.jsx)(t.a,{href:"/docs/workloads/azure/data/data_engineering/data_quality_azure",children:"data quality testing"}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"unit-tests",children:"Unit tests"}),"\n",(0,a.jsxs)(t.p,{children:["Unit tests are implemented throughout the Ensono Stacks solution and recommended for all data workloads. Python code is tested using ",(0,a.jsx)(t.a,{href:"https://docs.pytest.org/en/7.2.x/",children:"Pytest"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:["Within a data workload generated through ",(0,a.jsx)(t.a,{href:"/docs/workloads/azure/data/data_engineering/datastacks",children:"Datastacks"}),", a placeholder for unit tests is found under ",(0,a.jsx)(t.code,{children:"tests/unit"}),". These tests will be executed as part of its Azure DevOps CI/CD pipeline."]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"/docs/workloads/azure/data/getting_started/dev_quickstart_data_azure#unit-tests",children:"Run unit tests locally"})}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"end-to-end-tests",children:"End-to-end tests"}),"\n",(0,a.jsxs)(t.p,{children:["Template end-to-end tests are implemented for data workloads in Ensono Stacks. These tests are implemented in a behaviour-driven-development (BDD) style using ",(0,a.jsx)(t.a,{href:"https://behave.readthedocs.io/en/stable/",children:"behave"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:["This framework allows test cases to be written in a natural language style. Data workloads generated through Datastacks will have placeholder end-to-end BDD tests under ",(0,a.jsx)(t.code,{children:"tests/end_to_end"}),". The ",(0,a.jsx)(t.code,{children:".feature"})," file located here contains the test cases in BDD style. The tests provided perform a number of actions to prepare a test scenario, execute the workload, check the results, and clean up."]}),"\n",(0,a.jsxs)(t.p,{children:["Example content of a ",(0,a.jsx)(t.code,{children:".feature"})," file is shown below:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-text",children:'Feature:Azure Data Ingest\n  I want to ingest data\n  so that it is available in Azure data lake storage\n\n  Scenario Outline: Data Factory Ingest SQL Database into ADLS\n    Given the ADF pipeline ingest_azure_sql_example has been triggered with <parameters>\n    And I poll the pipeline every 10 seconds until it has completed\n    Then the ADF pipeline ingest_azure_sql_example has finished with state Succeeded\n    And the ADF pipeline ingest_azure_sql_example completed in less than 900 seconds\n    And the files <output_files> are present in the ADLS container raw in the directory ingest_azure_sql_example\n\n    Examples: Output files\n    |parameters|output_files|\n    |{"window_start" : "2010-01-01", "window_end": "2010-01-31"}|["movies.keywords", "movies.keywords_dq", "movies.links", "movies.movies_metadata", "movies.movies_metadata_dq", "movies.ratings_small"]|\n'})}),"\n",(0,a.jsx)(t.p,{children:"The tests will be executed as part of the workload's Azure DevOps CI/CD pipeline. You may extend or change the test cases dependent on the particular requirements of you workload."}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"/docs/workloads/azure/data/getting_started/dev_quickstart_data_azure#unit-tests",children:"Run end-to-end tests locally"})}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"code-quality-and-linting",children:"Code quality and linting"}),"\n",(0,a.jsx)(t.p,{children:"Code quality and linting checks are also included as part of workload's CI/CD pipeline. This ensures consistent standards are maintained across the project."}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.a,{href:"https://pre-commit.com/",children:"Pre-commit"})," is used to assist developers in this process. The ",(0,a.jsx)(t.code,{children:".pre-commit-config.yaml"})," file in the project defines the checks and standards used."]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"/docs/workloads/azure/data/getting_started/dev_quickstart_data_azure#code-quality-checks",children:"Run code quality checks"})}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>d});var s=n(6540);const a={},i=s.createContext(a);function r(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);