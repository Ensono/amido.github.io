"use strict";(self.webpackChunkstacks=self.webpackChunkstacks||[]).push([[9917],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return k}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,k=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(k,i(i({ref:t},c),{},{components:n})):r.createElement(k,i({ref:t},c))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8884:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return k},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return u}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={},s=void 0,p={unversionedId:"getting_started/workspace/init-deployment",id:"getting_started/workspace/init-deployment",title:"init-deployment",description:"@ensono-stacks/workspace:init-deployment",source:"@site/docs/getting_started/workspace/init-deployment.md",sourceDirName:"getting_started/workspace",slug:"/getting_started/workspace/init-deployment",permalink:"/docs/getting_started/workspace/init-deployment",draft:!1,tags:[],version:"current",frontMatter:{}},c={},u=[{value:"@ensono-stacks/workspace:init-deployment",id:"ensono-stacksworkspaceinit-deployment",level:3},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Usage",id:"usage",level:2},{value:"Command line arguments",id:"command-line-arguments",level:3},{value:"Generator Output",id:"generator-output",level:3}],d={toc:u},m="wrapper";function k(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)(m,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"ensono-stacksworkspaceinit-deployment"},"@ensono-stacks/workspace:init-deployment"),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Set up deployment infrastructure for existing workspace"),"Set up configuration for deployment & infra for the workspace.",(0,o.kt)("p",null,"Allows you to choose your recommended 3rd party provider options."),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("p",null,"Workspace FE scaffolded using the ",(0,o.kt)("inlineCode",{parentName:"p"},"@ensono-stack/workspace:init")," generator."),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,"Scaffold your NX workspace with deployment config using the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nx g @ensono-stacks/workspace:init-deployment\n")),(0,o.kt)("h3",{id:"command-line-arguments"},"Command line arguments"),(0,o.kt)("p",null,"Interactive options can instead be passed via the command line:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Option"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Accepted Values"),(0,o.kt)("th",{parentName:"tr",align:null},"Default"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"--pipelineRunner"),(0,o.kt)("td",{parentName:"tr",align:null},"Which pipeline runner to use"),(0,o.kt)("td",{parentName:"tr",align:null},"enum"),(0,o.kt)("td",{parentName:"tr",align:null},"[taskctl, none]"),(0,o.kt)("td",{parentName:"tr",align:null},"taskctl")))),(0,o.kt)("h3",{id:"generator-output"},"Generator Output"),(0,o.kt)("p",null,"If ",(0,o.kt)("inlineCode",{parentName:"p"},"--pipelineRunner=taskctl")," is passed, the generator will also create a ",(0,o.kt)("inlineCode",{parentName:"p"},"build")," directory:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cs"},"\u251c\u2500\u2500 workspace root\n\u2502   \u251c\u2500\u2500 build\n\u2502   \u251c\u2500\u2500 \u251c\u2500\u2500 azDevOps\n\u2502   \u251c\u2500\u2500 \u251c\u2500\u2500 \u251c\u2500\u2500 azuredevops-runner.yaml - Azure Devops pipeline definition. Consumes `stages` and `vars` files in this directory\n\u2502   \u251c\u2500\u2500 \u251c\u2500\u2500 \u251c\u2500\u2500 azuredevops-stages.yaml - Azure Devops pipeline stages\n\u2502   \u251c\u2500\u2500 \u251c\u2500\u2500 \u251c\u2500\u2500 azuredevops-vars.yaml - Azure Devops variable definitions required by the pipeline\n\u2502   \u251c\u2500\u2500 \u251c\u2500\u2500 taskctl\n\u2502   \u251c\u2500\u2500 \u251c\u2500\u2500 \u251c\u2500\u2500 contexts.yaml - Context definitions for taskctl\n\u2502   \u251c\u2500\u2500 \u251c\u2500\u2500 \u251c\u2500\u2500 tasks.yaml - Task definitions for taskctl to be consumed by the pipeline\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"nx.json")," is also updated with the pipeline runner entry"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'"@ensono-stacks/workspace": {\n    "init": {\n        "pipelineRunner": "taskctl"\n    }\n}\n')),(0,o.kt)("p",null,"This sets up a CI/CD pipeline to provide a smooth collaborative workflow."),(0,o.kt)("p",null,"Currently supported pipeline tools are ",(0,o.kt)("a",{parentName:"p",href:"https://azure.microsoft.com/en-gb/products/devops/"},"Azure Devops")," and ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/taskctl/taskctl"},"taskctl"),"."),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"build")," files will only be generated if required project values have been collected from the ",(0,o.kt)("a",{parentName:"p",href:"/docs/getting_started/setup#option-1-stacks-cli"},"Stacks CLI")," or through the ",(0,o.kt)("a",{parentName:"p",href:"/docs/getting_started/setup#option-2-create-stacks-workspace-generator"},"@ensono-stacks/create-stacks-workspace")," plugin."))))}k.isMDXComponent=!0}}]);