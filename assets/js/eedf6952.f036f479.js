"use strict";(self.webpackChunkstacks=self.webpackChunkstacks||[]).push([[1349],{638:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"workloads/azure/backend/netcore/pipeline_gha_netcore","title":".NET - GitHub Actions Pipeline","description":"How to configure GitHub Actions Pipeline for .NET","source":"@site/docs/workloads/azure/backend/netcore/pipeline_gha_netcore.md","sourceDirName":"workloads/azure/backend/netcore","slug":"/workloads/azure/backend/netcore/pipeline_gha_netcore","permalink":"/docs/workloads/azure/backend/netcore/pipeline_gha_netcore","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"pipeline_gha_netcore","title":".NET - GitHub Actions Pipeline","sidebar_label":"AWS/GHA Pipeline","description":"How to configure GitHub Actions Pipeline for .NET","keywords":[".net","github actions","configure","pipeline","setting up","template","build"]},"sidebar":"docs","previous":{"title":"AWS Infrastructure","permalink":"/docs/workloads/azure/backend/netcore/infrastructure_aws_netcore"},"next":{"title":"Logging","permalink":"/docs/workloads/azure/backend/netcore/logging_netcore"}}');var r=n(4848),s=n(8453),c=n(6025),o=n(2017);const a={id:"pipeline_gha_netcore",title:".NET - GitHub Actions Pipeline",sidebar_label:"AWS/GHA Pipeline",description:"How to configure GitHub Actions Pipeline for .NET",keywords:[".net","github actions","configure","pipeline","setting up","template","build"]},l=void 0,d={},h=[{value:"Pipeline Diagram",id:"pipeline-diagram",level:2},{value:"Feature branch -&gt; Dev sequence",id:"feature-branch---dev-sequence",level:3},{value:"Main branch -&gt; Production sequence",id:"main-branch---production-sequence",level:3},{value:"Setting up GitHub Actions",id:"setting-up-github-actions",level:2},{value:"Variables",id:"variables",level:3},{value:"Creating the pipeline",id:"creating-the-pipeline",level:3}];function u(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"The pipeline will automate provisioning and updating the .NET REST API with CQRS infrastructure in AWS."}),"\n",(0,r.jsx)(o.A,{url:"https://www.youtube.com/watch?v=G8FW-djEDDY"}),"\n",(0,r.jsx)(t.h2,{id:"pipeline-diagram",children:"Pipeline Diagram"}),"\n",(0,r.jsx)(t.h3,{id:"feature-branch---dev-sequence",children:"Feature branch -> Dev sequence"}),"\n",(0,r.jsx)("img",{alt:"Dev .NET REST API - GitHub Actions Pipeline",src:(0,c.Ay)("img/netcore_pipeline_dev.png")}),"\n",(0,r.jsx)(t.h3,{id:"main-branch---production-sequence",children:"Main branch -> Production sequence"}),"\n",(0,r.jsx)("img",{alt:"Prod .NET REST API - GitHub Actions Pipeline",src:(0,c.Ay)("img/netcore_pipeline_prod.png")}),"\n",(0,r.jsx)(t.h2,{id:"setting-up-github-actions",children:"Setting up GitHub Actions"}),"\n",(0,r.jsx)(t.h3,{id:"variables",children:"Variables"}),"\n",(0,r.jsxs)(t.p,{children:["A variable file located at ",(0,r.jsx)(t.code,{children:".github/workflows/ci-env.yml"})," will contain the majority of the variables required for the pipeline. ",(0,r.jsx)(t.strong,{children:"This file should be manually checked and updated where required before first deployment"}),". If the project was generated using the Stacks CLI then the file will be updated with the information provided."]}),"\n",(0,r.jsxs)(t.p,{children:["Environment secrets will need creating for storing some sensitive variables to be used by the pipeline. Instructions for ",(0,r.jsx)(t.a,{href:"https://docs.github.com/en/actions/managing-workflow-runs-and-deployments/managing-deployments/managing-environments-for-deployment#environment-secrets",children:"creating a environment secrets"}),"."]}),"\n",(0,r.jsx)(t.p,{children:"Add the following secrets:"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Variable Name"}),(0,r.jsx)(t.th,{children:"Description"}),(0,r.jsx)(t.th,{children:"Required for"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"AWS_ACCESS_KEY_ID"}),(0,r.jsx)(t.td,{children:"AWS IAM User Access Key ID"}),(0,r.jsx)(t.td,{children:"AWS Authentication"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"AWS_ACCOUNT_ID"}),(0,r.jsx)(t.td,{children:"AWS Account ID"}),(0,r.jsx)(t.td,{children:"AWS Authentication"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"AWS_SECRET_ACCESS_KEY"}),(0,r.jsx)(t.td,{children:"AWS IAM User Secret Access Key"}),(0,r.jsx)(t.td,{children:"AWS Authentication"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"AWS_TF_STATE_BUCKET"}),(0,r.jsx)(t.td,{children:"S3 Bucket name for Terraform state"}),(0,r.jsx)(t.td,{children:"Terraform State Management"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"AWS_TF_STATE_DYNAMOTABLE"}),(0,r.jsx)(t.td,{children:"DynamoDB Table name for Terraform state"}),(0,r.jsx)(t.td,{children:"Terraform State Management"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"AWS_TF_STATE_ENCRYPTION"}),(0,r.jsxs)(t.td,{children:["Encrypt Terraform state. ",(0,r.jsx)(t.code,{children:"true"})," or ",(0,r.jsx)(t.code,{children:"false"})]}),(0,r.jsx)(t.td,{children:"Terraform State Management"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"AWS_TF_STATE_KEY"}),(0,r.jsx)(t.td,{children:"Unique name for this applications Terraform state"}),(0,r.jsx)(t.td,{children:"Terraform State Management"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"AWS_TF_STATE_REGION"}),(0,r.jsx)(t.td,{children:"AWS region"}),(0,r.jsx)(t.td,{children:"Terraform State Management"})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"creating-the-pipeline",children:"Creating the pipeline"}),"\n",(0,r.jsxs)(t.p,{children:["Stacks generates the GitHub Actions workflow file in the directory expected by GitHub Actions, ",(0,r.jsx)(t.code,{children:".github/workflows"}),". Committing this file to the ",(0,r.jsx)(t.code,{children:"main"}),' branch of a GitHub repository will "create" the pipeline. Instructions for ',(0,r.jsx)(t.a,{href:"https://docs.github.com/en/actions/writing-workflows/quickstart#viewing-your-workflow-results",children:"viewing the results"})]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},2017:(e,t,n)=>{n.d(t,{A:()=>l});n(6540);var i=n(3554),r=n.n(i);const s="playerSection_SVZU",c="playerWrapper_cclc",o="player_oSQx";var a=n(4848);const l=function(e){let{url:t}=e;return(0,a.jsx)("div",{className:s,children:(0,a.jsx)("div",{className:c,children:(0,a.jsx)(r(),{className:o,url:t,controls:!0,width:"100%",height:"100%",config:{}})})})}},8453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>o});var i=n(6540);const r={},s=i.createContext(r);function c(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);