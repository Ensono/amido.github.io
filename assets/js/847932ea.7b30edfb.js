"use strict";(self.webpackChunkstacks=self.webpackChunkstacks||[]).push([[5549],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return v}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(n),f=a,v=u["".concat(s,".").concat(f)]||u[f]||d[f]||i;return n?r.createElement(v,l(l({ref:t},c),{},{components:n})):r.createElement(v,l({ref:t},c))}));function v(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=f;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:a,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},200:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return c}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),l=["components"],o={id:"silver_data_azure",title:"Silver Pipeline",sidebar_label:"Silver Pipeline",hide_title:!1,hide_table_of_contents:!1,description:"Silver processing pipeline",keywords:["silver","adf","etl","databricks"]},s=void 0,p={unversionedId:"workloads/azure/data/etl_pipelines/silver_data_azure",id:"workloads/azure/data/etl_pipelines/silver_data_azure",isDocsHomePage:!1,title:"Silver Pipeline",description:"Silver processing pipeline",source:"@site/docs/workloads/azure/data/etl_pipelines/silver_data_azure.md",sourceDirName:"workloads/azure/data/etl_pipelines",slug:"/workloads/azure/data/etl_pipelines/silver_data_azure",permalink:"/docs/workloads/azure/data/etl_pipelines/silver_data_azure",tags:[],version:"current",frontMatter:{id:"silver_data_azure",title:"Silver Pipeline",sidebar_label:"Silver Pipeline",hide_title:!1,hide_table_of_contents:!1,description:"Silver processing pipeline",keywords:["silver","adf","etl","databricks"]},sidebar:"docs",previous:{title:"Data Ingestion",permalink:"/docs/workloads/azure/data/etl_pipelines/ingest_data_azure"},next:{title:"Data Quality",permalink:"/docs/workloads/azure/data/etl_pipelines/data_quality_azure"}},c=[{value:"Pipeline overview",id:"pipeline-overview",children:[],level:2},{value:"Data Factory pipeline design",id:"data-factory-pipeline-design",children:[],level:2}],u={toc:c},d="wrapper";function f(e){var t=e.components,o=(0,a.Z)(e,l);return(0,i.kt)(d,(0,r.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Silver processing represents the 'Bronze to Silver' layer transformations. It accepts raw data\n(e.g. CSV files) as an input and converts it into a more structured delta format.\nAzure Data Lake Storage (ADLS Gen2) has been chosen as both the source and destination system for\nour data processing."),(0,i.kt)("h2",{id:"pipeline-overview"},"Pipeline overview"),(0,i.kt)("p",null,"The diagram below gives an overview of the Silver pipeline design."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"ADF_SilverPipelineDesign.png",src:n(2400).Z})),(0,i.kt)("p",null,"Silver processing is executed as Python Databricks job with the data transformation logic\npackaged within our ",(0,i.kt)("a",{parentName:"p",href:"/docs/workloads/common/data/pysparkle/pysparkle_quickstart"},"PySparkle")," library."),(0,i.kt)("h2",{id:"data-factory-pipeline-design"},"Data Factory pipeline design"),(0,i.kt)("p",null,"The pipelines folder is structured as follows:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"ADF_SilverPipelinesList.png",src:n(7271).Z})),(0,i.kt)("p",null,"Similar to other ETL pipelines, Silver can optionally include a Data Quality validations step.\nDepending on your particular needs, you can deploy each of the pipelines with or without a Data\nQuality step. More on Data Quality can be found ",(0,i.kt)("a",{parentName:"p",href:"/docs/workloads/azure/data/etl_pipelines/data_quality_azure"},"here"),"."),(0,i.kt)("p",null,"In ADF the base Silver pipeline is as simple as this:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"ADF_Silver.png",src:n(6362).Z})),(0,i.kt)("p",null,"It contains just one step - Python Databricks, configured to run a simple script (",(0,i.kt)("inlineCode",{parentName:"p"},"silver.py"),"),\nwhich is an entrypoint to the PySparkle library. PySparkle is attached to a cluster by pointing\nto its location in DBFS."),(0,i.kt)("p",null,"Contents of ",(0,i.kt)("inlineCode",{parentName:"p"},"dbfs:/FileStore/scripts/silver.py"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'from pysparkle.pysparkle_cli import cli\n\ndef call_pysparkle_entrypoint():\n    cli(["silver", "--dataset-name", "movies_dataset"], standalone_mode=False)\n\nif __name__ == "__main__":\n    call_pysparkle_entrypoint()\n')))}f.isMDXComponent=!0},2400:function(e,t,n){t.Z=n.p+"assets/images/ADF_SilverPipelineDesign-57a531765a2430bbe0728b37cc61fc86.png"},7271:function(e,t,n){t.Z=n.p+"assets/images/ADF_SilverPipelinesList-ad113e315740f36f95fedaf0df540032.png"},6362:function(e,t,n){t.Z=n.p+"assets/images/ADF_silver-d3adbe5bbf16fc6cad97d4081dd6eb10.png"}}]);