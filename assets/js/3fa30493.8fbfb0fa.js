"use strict";(self.webpackChunkstacks=self.webpackChunkstacks||[]).push([[1064],{5787:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>u,default:()=>g,frontMatter:()=>o,metadata:()=>c,toc:()=>h});var n=a(4848),s=a(8453),r=a(9557),l=a(1470),i=a(9365);const o={id:"execute_karate_api_tests",title:"Running API tests with Karate",sidebar_label:"REST API testing with Karate",description:"How to test rest api application with karate",keywords:["java","rest","api","karate","run karate tests","karate test example","test runner","karate test report","execute parallel tests","framework","testing","test"]},u=void 0,c={id:"workloads/azure/backend/java/testing/execute_karate_api_tests",title:"Running API tests with Karate",description:"How to test rest api application with karate",source:"@site/docs/workloads/azure/backend/java/testing/execute_karate_api_tests.md",sourceDirName:"workloads/azure/backend/java/testing",slug:"/workloads/azure/backend/java/testing/execute_karate_api_tests",permalink:"/docs/workloads/azure/backend/java/testing/execute_karate_api_tests",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"execute_karate_api_tests",title:"Running API tests with Karate",sidebar_label:"REST API testing with Karate",description:"How to test rest api application with karate",keywords:["java","rest","api","karate","run karate tests","karate test example","test runner","karate test report","execute parallel tests","framework","testing","test"]},sidebar:"docs",previous:{title:"REST API testing with Serenity",permalink:"/docs/workloads/azure/backend/java/testing/execute_serenity_api_tests"},next:{title:"Introduction",permalink:"/docs/workloads/azure/backend/netcore/introduction_netcore"}},d={},h=[{value:"Getting Started",id:"getting-started",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Running the tests",id:"running-the-tests",level:2},{value:"Run the specific feature by tag option",id:"run-the-specific-feature-by-tag-option",level:3},{value:"Switching the Environment",id:"switching-the-environment",level:3},{value:"Running tests in parallel",id:"running-tests-in-parallel",level:2},{value:"@parallel=false",id:"parallelfalse",level:3},{value:"Parallel Stats",id:"parallel-stats",level:3},{value:"Note",id:"note",level:4},{value:"Test Reports",id:"test-reports",level:3}];function p(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:'Karate is an open-source general-purpose test-automation framework that can script calls to HTTP end-points and assert that the JSON or XML responses are as expected. Karate also has support for service-virtualization where it can bring up "mock" (or stub) servers which can substitute for web-services that need to participate in an integration-test. Karate\'s capabilities include being able to run tests in parallel, HTML reports and compatibility with Continuous Integration tools.'}),"\n",(0,n.jsx)(t.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,n.jsx)(t.p,{children:"This page explains how to setup the API testing framework built with Java and Karate."}),"\n",(0,n.jsx)(t.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,n.jsxs)(t.p,{children:["Set an environment variable named ",(0,n.jsx)(t.code,{children:"BASE_URL"})," (e.g. if testing locally set it to ",(0,n.jsx)(t.code,{children:"http://localhost:9000"}),") or use the ",(0,n.jsx)(t.code,{children:"export BASE_URL=http://localhost:9000"})," command."]}),"\n",(0,n.jsx)(t.h2,{id:"running-the-tests",children:"Running the tests"}),"\n",(0,n.jsxs)(t.p,{children:["To run all functional tests please navigate to ",(0,n.jsx)(t.code,{children:"./api-tests-karate"})," path and execute the following command:"]}),"\n",(0,n.jsxs)(l.A,{groupId:"operating-systems",defaultValue:"unix",values:[{label:"Unix",value:"unix"},{label:"Windows",value:"windows"}],children:[(0,n.jsx)(i.A,{value:"unix",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"./mvnw test -Dtest=RunFunctionalTests\n"})})}),(0,n.jsx)(i.A,{value:"windows",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"mvnw.cmd test -Dtest=RunFunctionalTests\n"})})})]}),"\n",(0,n.jsx)(t.p,{children:"To run the Smoke tests independently, use:"}),"\n",(0,n.jsxs)(l.A,{groupId:"operating-systems",defaultValue:"unix",values:[{label:"Unix",value:"unix"},{label:"Windows",value:"windows"}],children:[(0,n.jsx)(i.A,{value:"unix",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"./mvnw test -Dtest=RunSmokeTests\n"})})}),(0,n.jsx)(i.A,{value:"windows",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"mvnw.cmd test -Dtest=RunSmokeTests\n"})})})]}),"\n",(0,n.jsx)(t.p,{children:"Run Functional tests on the specific environment, use:"}),"\n",(0,n.jsxs)(l.A,{groupId:"operating-systems",defaultValue:"unix",values:[{label:"Unix",value:"unix"},{label:"Windows",value:"windows"}],children:[(0,n.jsx)(i.A,{value:"unix",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"./mvnw test -Dtest=RunFunctionalTests -Dkarate.env=local\n"})})}),(0,n.jsx)(i.A,{value:"windows",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"mvnw.cmd test -Dtest=RunFunctionalTests -Dkarate.env=local\n"})})})]}),"\n",(0,n.jsx)(t.h3,{id:"run-the-specific-feature-by-tag-option",children:"Run the specific feature by tag option"}),"\n",(0,n.jsxs)(t.p,{children:["Karate allows running tests by a ",(0,n.jsx)(t.a,{href:"https://intuit.github.io/karate/#tags",children:"specific tag"}),". To do that please set your tag to the specific feature or test, and then specify it in the Runner Class as follows:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'    @Karate.Test\n    Karate testFullPath() {\n        return Karate.run("classpath:PATH_TO_THE_FEATURE/FEATURE_NAME.feature").tags("@TAG");\n    }\n'})}),"\n",(0,n.jsx)(t.h3,{id:"switching-the-environment",children:"Switching the Environment"}),"\n",(0,n.jsx)(t.p,{children:"There is only one thing you need to do to switch the environment - which is to set a Java system property.\nBy default, the value of karate.env when you access it within karate-config.js - is base_url value taken from the environment variables"}),"\n",(0,n.jsx)(t.h2,{id:"running-tests-in-parallel",children:"Running tests in parallel"}),"\n",(0,n.jsx)(t.p,{children:"Choosing the right forking strategy and parallel execution settings can have a substantial impact on the memory requirements and the execution time of the build system.\nThe tests can be easily grouped in features and tags to run and compose test-suites in a very flexible manner."}),"\n",(0,n.jsx)(t.h3,{id:"parallelfalse",children:"@parallel=false"}),"\n",(0,n.jsx)(t.p,{children:"In rare cases you may want to suppress the default of Scenario-s executing in parallel and the special tag @parallel=false can be used. If you place it above the Feature keyword, it will apply to all Scenario-s. And if you just want one or two Scenario-s to NOT run in parallel, you can place this tag above only those Scenario-s."}),"\n",(0,n.jsx)(t.h3,{id:"parallel-stats",children:"Parallel Stats"}),"\n",(0,n.jsx)(t.p,{children:"For convenience, some stats are logged to the console when execution completes, which should look something like this:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"======================================================\nelapsed:   2.35 | threads:    5 | thread time: 4.98\nfeatures:    54 | ignored:   25 | efficiency: 0.42\nscenarios:  145 | passed:   145 | failed: 0\n======================================================\n"})}),"\n",(0,n.jsx)(t.h4,{id:"note",children:"Note"}),"\n",(0,n.jsx)(t.p,{children:'Any *.feature file tagged as @ignore will be skipped - as the ~ prefix means a "NOT" operation.\nYou can also specify tags on the command-line. The tags() method from test runner class also takes multiple arguments,for e.g.'}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.code,{children:'this is an "AND" operation: tags("@customer", "@smoke", "~@ignoredTags")'})}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.code,{children:'and this is an "OR" operation: tags("@customer, @smoke, ~@ignoredTags")'})}),"\n",(0,n.jsx)(t.p,{children:"The more threads are used, the higher the chances of sporadic, hard-to-reproduce test failures due to timeouts, test data clean up, and other related issues.\nThe added performance gain of each thread also tends to drop off for higher numbers of threads."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:'class Runner {\n    @Test\n    void run() {\n        Results results = Runner.path("classpath:PATH_TO_FUTURE_OR_PACKAGE").tags("~@ignoredTags", "@YourTag").parallel(1);\n        assertEquals(0, results.getFailCount(), results.getErrorMessages());\n    }\n}\n'})}),"\n",(0,n.jsx)(t.h3,{id:"test-reports",children:"Test Reports"}),"\n",(0,n.jsxs)(t.p,{children:["As a result of the test execution - karate will automatically generate the test report - ",(0,n.jsx)(t.code,{children:"target/surefire-reports/karate-summary.html"}),"."]}),"\n",(0,n.jsx)(r.A,{next:!0})]})}function g(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},9365:(e,t,a)=>{a.d(t,{A:()=>l});a(6540);var n=a(4164);const s={tabItem:"tabItem_Ymn6"};var r=a(4848);function l(e){let{children:t,hidden:a,className:l}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,n.A)(s.tabItem,l),hidden:a,children:t})}},1470:(e,t,a)=>{a.d(t,{A:()=>k});var n=a(6540),s=a(4164),r=a(3104),l=a(6347),i=a(205),o=a(7485),u=a(1682),c=a(679);function d(e){var t,a;return null!=(t=null==(a=n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:a.filter(Boolean))?t:[]}function h(e){const{values:t,children:a}=e;return(0,n.useMemo)((()=>{const e=null!=t?t:function(e){return d(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:s}}=e;return{value:t,label:a,attributes:n,default:s}}))}(a);return function(e){const t=(0,u.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,a])}function p(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:a}=e;const s=(0,l.W6)(),r=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=a?a:null}({queryString:t,groupId:a});return[(0,o.aZ)(r),(0,n.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(s.location.search);t.set(r,e),s.replace({...s.location,search:t.toString()})}),[r,s])]}function m(e){const{defaultValue:t,queryString:a=!1,groupId:s}=e,r=h(e),[l,o]=(0,n.useState)((()=>function(e){var t;let{defaultValue:a,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!p({value:a,tabValues:n}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+a+'" but none of its children has the corresponding value. Available values are: '+n.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return a}const s=null!=(t=n.find((e=>e.default)))?t:n[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:t,tabValues:r}))),[u,d]=g({queryString:a,groupId:s}),[m,v]=function(e){let{groupId:t}=e;const a=function(e){return e?"docusaurus.tab."+e:null}(t),[s,r]=(0,c.Dv)(a);return[s,(0,n.useCallback)((e=>{a&&r.set(e)}),[a,r])]}({groupId:s}),f=(()=>{const e=null!=u?u:m;return p({value:e,tabValues:r})?e:null})();(0,i.A)((()=>{f&&o(f)}),[f]);return{selectedValue:l,selectValue:(0,n.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error("Can't select invalid tab value="+e);o(e),d(e),v(e)}),[d,v,r]),tabValues:r}}var v=a(2303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=a(4848);function b(e){let{className:t,block:a,selectedValue:n,selectValue:l,tabValues:i}=e;const o=[],{blockElementScrollPositionUntilNextRender:u}=(0,r.a_)(),c=e=>{const t=e.currentTarget,a=o.indexOf(t),s=i[a].value;s!==n&&(u(t),l(s))},d=e=>{var t;let a=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{var n;const t=o.indexOf(e.currentTarget)+1;a=null!=(n=o[t])?n:o[0];break}case"ArrowLeft":{var s;const t=o.indexOf(e.currentTarget)-1;a=null!=(s=o[t])?s:o[o.length-1];break}}null==(t=a)||t.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":a},t),children:i.map((e=>{let{value:t,label:a,attributes:r}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:n===t?0:-1,"aria-selected":n===t,ref:e=>o.push(e),onKeyDown:d,onClick:c,...r,className:(0,s.A)("tabs__item",f.tabItem,null==r?void 0:r.className,{"tabs__item--active":n===t}),children:null!=a?a:t},t)}))})}function w(e){let{lazy:t,children:a,selectedValue:r}=e;const l=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===r));return e?(0,n.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:l.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==r})))})}function j(e){const t=m(e);return(0,x.jsxs)("div",{className:(0,s.A)("tabs-container",f.tabList),children:[(0,x.jsx)(b,{...t,...e}),(0,x.jsx)(w,{...t,...e})]})}function k(e){const t=(0,v.A)();return(0,x.jsx)(j,{...e,children:d(e.children)},String(t))}},9557:(e,t,a)=>{a.d(t,{A:()=>r});var n=a(6540),s=a(4848);const r=e=>{let{next:t,prev:a}=e;return n.useEffect((()=>{if(t){const e=document.querySelector("div.pagination-nav__item.pagination-nav__item--next>a");e&&e.style&&(e.style.display="none")}if(a){const e=document.querySelector("div.pagination-nav__item>a");e&&e.style&&(e.style.display="none")}})),(0,s.jsx)("div",{})}},8453:(e,t,a)=>{a.d(t,{R:()=>l,x:()=>i});var n=a(6540);const s={},r=n.createContext(s);function l(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);