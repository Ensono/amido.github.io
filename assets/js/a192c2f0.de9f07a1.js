"use strict";(self.webpackChunkstacks=self.webpackChunkstacks||[]).push([[8323],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=l(n),y=a,d=u["".concat(c,".").concat(y)]||u[y]||m[y]||i;return n?r.createElement(d,s(s({ref:t},p),{},{components:n})):r.createElement(d,s({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=y;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[u]="string"==typeof e?e:a,s[1]=o;for(var l=2;l<i;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},1015:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return u}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),s=["components"],o={},c=void 0,l={unversionedId:"getting_started/cypress/accessibility",id:"getting_started/cypress/accessibility",title:"accessibility",description:"@ensono-stacks/cypress:accessibility",source:"@site/docs/getting_started/cypress/accessibility.md",sourceDirName:"getting_started/cypress",slug:"/getting_started/cypress/accessibility",permalink:"/docs/getting_started/cypress/accessibility",draft:!1,tags:[],version:"current",frontMatter:{}},p={},u=[{value:"@ensono-stacks/cypress:accessibility",id:"ensono-stackscypressaccessibility",level:3},{value:"Usage",id:"usage",level:2},{value:"Command line arguments",id:"command-line-arguments",level:3},{value:"Generator Output",id:"generator-output",level:3}],m={toc:u},y="wrapper";function d(e){var t=e.components,n=(0,a.Z)(e,s);return(0,i.kt)(y,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"ensono-stackscypressaccessibility"},"@ensono-stacks/cypress:accessibility"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Adds axe accessibility tests to your test project"),(0,i.kt)("p",null,"The ",(0,i.kt)("em",{parentName:"p"},"accessibility")," generator installs the required plugins for conducting accessibility testing with cypress. Additionally, this will configure your test project to enable proper test reporting from ",(0,i.kt)("inlineCode",{parentName:"p"},"axe")," while providing you with an example set of test cases."),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"nx g @ensono-stacks/cypress:accessibility\n")),(0,i.kt)("h3",{id:"command-line-arguments"},"Command line arguments"),(0,i.kt)("p",null,"The following command line arguments are available:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Option"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"--project -p"),(0,i.kt)("td",{parentName:"tr",align:null},"The name of the test project to add accessibility tests to"),(0,i.kt)("td",{parentName:"tr",align:null},"string")))),(0,i.kt)("h3",{id:"generator-output"},"Generator Output"),(0,i.kt)("p",null,"Scaffolding accessibility testing will add two dependencies to the ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json"),":"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/axe-core"},(0,i.kt)("inlineCode",{parentName:"a"},"axe-core"))," - The accessibility test engine"),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/cypress-axe"},(0,i.kt)("inlineCode",{parentName:"a"},"cypress-axe"))," - Cypress integration with the accessibility test engine")),(0,i.kt)("p",null,"Additionally, an example accessibility test will be generated, showcasing how to utilise ",(0,i.kt)("em",{parentName:"p"},"axe")," to scan your application for accessibility violations:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Generated files"',title:'"Generated','files"':!0},".\n\u251c\u2500\u2500 apps\n\u2502   \u251c\u2500\u2500 <app-name>\n\u2502   \u2502   \u251c\u2500\u2500 cypress\n\u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 support\n\u2502   \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 e2e.ts #Terminal logging function configured\n\u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 e2e\n\u2502   \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 axe-accessibility.cy.ts #Example accessibility test using cypress\n\u2502   \u2502   \u251c\u2500\u2500 cypress.config.js #setupNodeEvents configured for logging with terminal logging function\n\u251c\u2500\u2500   tsconfig.cy.json #cypress-axe declared as a type\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n")),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Visit the ",(0,i.kt)("a",{parentName:"p",href:"/docs/testing/testing_in_nx/cypress_accessibility_testing"},(0,i.kt)("inlineCode",{parentName:"a"},"Accessibility Testing"))," documentation for further details!"))))}d.isMDXComponent=!0}}]);