"use strict";(self.webpackChunkstacks=self.webpackChunkstacks||[]).push([[375],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return h}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,h=p["".concat(u,".").concat(m)]||p[m]||d[m]||o;return n?r.createElement(h,i(i({ref:t},s),{},{components:n})):r.createElement(h,i({ref:t},s))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:function(e,t,n){n.d(t,{Z:function(){return i}});var r=n(7294),a=n(6010),o={tabItem:"tabItem_Ymn6"};function i(e){var t=e.children,n=e.hidden,i=e.className;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o.tabItem,i),hidden:n},t)}},4866:function(e,t,n){n.d(t,{Z:function(){return w}});var r=n(7462),a=n(7294),o=n(6010),i=n(2466),l=n(6550),u=n(1980),c=n(7392),s=n(12);function p(e){return function(e){var t,n;return null!=(t=null==(n=a.Children.map(e,(function(e){if(!e||(0,a.isValidElement)(e)&&(t=e.props)&&"object"==typeof t&&"value"in t)return e;var t;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?t:[]}(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}function d(e){var t=e.values,n=e.children;return(0,a.useMemo)((function(){var e=null!=t?t:p(n);return function(e){var t=(0,c.l)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function m(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function h(e){var t=e.queryString,n=void 0!==t&&t,r=e.groupId,o=(0,l.k6)(),i=function(e){var t=e.queryString,n=void 0!==t&&t,r=e.groupId;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=r?r:null}({queryString:n,groupId:r});return[(0,u._X)(i),(0,a.useCallback)((function(e){if(i){var t=new URLSearchParams(o.location.search);t.set(i,e),o.replace(Object.assign({},o.location,{search:t.toString()}))}}),[i,o])]}function f(e){var t,n,r,o,i=e.defaultValue,l=e.queryString,u=void 0!==l&&l,c=e.groupId,p=d(e),f=(0,a.useState)((function(){return function(e){var t,n=e.defaultValue,r=e.tabValues;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:r}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+r.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}var a=null!=(t=r.find((function(e){return e.default})))?t:r[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:i,tabValues:p})})),b=f[0],k=f[1],g=h({queryString:u,groupId:c}),v=g[0],N=g[1],w=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:c}.groupId),n=(0,s.Nk)(t),r=n[0],o=n[1],[r,(0,a.useCallback)((function(e){t&&o.set(e)}),[t,o])]),y=w[0],T=w[1],E=function(){var e=null!=v?v:y;return m({value:e,tabValues:p})?e:null}();return(0,a.useLayoutEffect)((function(){E&&k(E)}),[E]),{selectedValue:b,selectValue:(0,a.useCallback)((function(e){if(!m({value:e,tabValues:p}))throw new Error("Can't select invalid tab value="+e);k(e),N(e),T(e)}),[N,T,p]),tabValues:p}}var b=n(2389),k={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function g(e){var t=e.className,n=e.block,l=e.selectedValue,u=e.selectValue,c=e.tabValues,s=[],p=(0,i.o5)().blockElementScrollPositionUntilNextRender,d=function(e){var t=e.currentTarget,n=s.indexOf(t),r=c[n].value;r!==l&&(p(t),u(r))},m=function(e){var t,n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":var r,a=s.indexOf(e.currentTarget)+1;n=null!=(r=s[a])?r:s[0];break;case"ArrowLeft":var o,i=s.indexOf(e.currentTarget)-1;n=null!=(o=s[i])?o:s[s.length-1]}null==(t=n)||t.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},c.map((function(e){var t=e.value,n=e.label,i=e.attributes;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:function(e){return s.push(e)},onKeyDown:m,onClick:d},i,{className:(0,o.Z)("tabs__item",k.tabItem,null==i?void 0:i.className,{"tabs__item--active":l===t})}),null!=n?n:t)})))}function v(e){var t=e.lazy,n=e.children,r=e.selectedValue,o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){var i=o.find((function(e){return e.props.value===r}));return i?(0,a.cloneElement)(i,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},o.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r})})))}function N(e){var t=f(e);return a.createElement("div",{className:(0,o.Z)("tabs-container",k.tabList)},a.createElement(g,(0,r.Z)({},e,t)),a.createElement(v,(0,r.Z)({},e,t)))}function w(e){var t=(0,b.Z)();return a.createElement(N,(0,r.Z)({key:String(t)},e))}},4263:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return s},default:function(){return b},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return m}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=n(4866),l=n(5162),u=["components"],c={id:"build_and_run_project_netcore",title:"Build & Run REST API with CQRS",sidebar_label:"Build & Run REST API with CQRS",hide_title:!0,hide_table_of_contents:!0,description:"Build and Run .NET Core REST API application with CQRS",keywords:[".net core","rest api","cqrs","azure","application insights","cosmos db","aws sns","build","run","application"]},s=void 0,p={unversionedId:"workloads/azure/backend/netcore/quickstart/web_api_cqrs/build_and_run_project_netcore",id:"workloads/azure/backend/netcore/quickstart/web_api_cqrs/build_and_run_project_netcore",title:"Build & Run REST API with CQRS",description:"Build and Run .NET Core REST API application with CQRS",source:"@site/docs/workloads/azure/backend/netcore/quickstart/web_api_cqrs/build_and_run_project_netcore.md",sourceDirName:"workloads/azure/backend/netcore/quickstart/web_api_cqrs",slug:"/workloads/azure/backend/netcore/quickstart/web_api_cqrs/build_and_run_project_netcore",permalink:"/docs/workloads/azure/backend/netcore/quickstart/web_api_cqrs/build_and_run_project_netcore",draft:!1,tags:[],version:"current",frontMatter:{id:"build_and_run_project_netcore",title:"Build & Run REST API with CQRS",sidebar_label:"Build & Run REST API with CQRS",hide_title:!0,hide_table_of_contents:!0,description:"Build and Run .NET Core REST API application with CQRS",keywords:[".net core","rest api","cqrs","azure","application insights","cosmos db","aws sns","build","run","application"]},sidebar:"docs",previous:{title:"Configure REST API with CQRS project",permalink:"/docs/workloads/azure/backend/netcore/quickstart/web_api_cqrs/configure_project_netcore"},next:{title:"Architecture Overview",permalink:"/docs/workloads/azure/backend/netcore/architecture/architecture_overview_netcore"}},d={},m=[{value:"Build and Run the application",id:"build-and-run-the-application",level:2}],h={toc:m},f="wrapper";function b(e){var t=e.components,n=(0,a.Z)(e,u);return(0,o.kt)(f,(0,r.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"build-and-run-the-application"},"Build and Run the application"),(0,o.kt)("br",null),(0,o.kt)("p",null,"The API generated consists of configuration to be run locally or on a docker container."),(0,o.kt)("details",{open:!0},(0,o.kt)("summary",null,"Build and run locally"),(0,o.kt)("div",null,(0,o.kt)(i.Z,{groupId:"operating-systems",defaultValue:"windows",values:[{label:"Windows",value:"windows"},{label:"Linux",value:"linux"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"windows",mdxType:"TabItem"},(0,o.kt)("p",null,"Move to the ",(0,o.kt)("inlineCode",{parentName:"p"},"<PROJECT-NAME>/src/api")," folder and run the next commands in ",(0,o.kt)("strong",{parentName:"p"},"Command Prompt")," or ",(0,o.kt)("strong",{parentName:"p"},"Powershell")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"dotnet build\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# Note that the template engine will rename your paths, so change the command accordingly\ndotnet run --project xxAMIDOxx.xxSTACKSxx.API/xxAMIDOxx.xxSTACKSxx.API.csproj\n")),(0,o.kt)("admonition",{title:"Potential issue on some Windows installations",type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Depending on how deep your folder structure is you might encounter a problem where you cannot build the project. This happens because of our dependency on ",(0,o.kt)("a",{parentName:"p",href:"https://docs.pact.io/"},"Pact")," for our contract tests."),(0,o.kt)("p",{parentName:"admonition"},"The error looks something like this"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"Error MSB3491 Path: File exceeds the OS max path limit. The fully qualified file name must be less than 260 characters.\n")),(0,o.kt)("p",{parentName:"admonition"},"There are two fixes possible so far:"),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"You must enable long file paths on Windows by following the instructions ",(0,o.kt)("a",{parentName:"li",href:"https://docs.microsoft.com/en-us/windows/win32/fileio/maximum-file-path-limitation?tabs=powershell#enable-long-paths-in-windows-10-version-1607-and-later"},"here")),(0,o.kt)("li",{parentName:"ul"},"Create your folder on an upper level where the paths won't exceed 260 characters")))),(0,o.kt)(l.Z,{value:"linux",mdxType:"TabItem"},(0,o.kt)("p",null,"Move to the ",(0,o.kt)("inlineCode",{parentName:"p"},"<PROJECT-NAME>/src/api")," folder and run the next commands in ",(0,o.kt)("strong",{parentName:"p"},"terminal"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"export COSMOSDB_KEY=<COSMOSDB_KEY value here>\nexport SERVICEBUS_CONNECTIONSTRING=<Your Service Bus connection string here>\nexport EVENTHUB_CONNECTIONSTRING=<Your Event Hub connection string here>\nexport STORAGE_CONNECTIONSTRING=<Your Event Hub storage connection string here>\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"dotnet build\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# Note that the template engine will rename your paths, so change the command accordingly\ndotnet run --project xxAMIDOxx.xxSTACKSxx.API/xxAMIDOxx.xxSTACKSxx.API.csproj\n")))))),(0,o.kt)("br",null),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Build and run in docker container"),(0,o.kt)("div",null,(0,o.kt)("p",null,"From the ",(0,o.kt)("inlineCode",{parentName:"p"},"<PROJECT-NAME>/src/api")," folder, build a Docker image using e.g. the command below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Build docker image"',title:'"Build',docker:!0,'image"':!0},"docker build -t dotnet-api .\n")),(0,o.kt)("p",null,"This uses the ",(0,o.kt)("strong",{parentName:"p"},"Dockerfile")," in this folder to generate the Docker image."),(0,o.kt)("p",null,"After the creation of the Docker image, the Docker container can be run using the command below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Run docker container"',title:'"Run',docker:!0,'container"':!0},"docker run -p 5000:80 --mount type=bind,source=/path/to/PROJECT-NAME/src/api/xxAMIDOxx.xxSTACKSxx.API/appsettings.json,target=/app/config/appsettings.json -e COSMOSDB_KEY=your-key -e SERVICEBUS_CONNECTIONSTRING=your-asb-connection-string -e EVENTHUB_CONNECTIONSTRING=your-aeh-connection-string -e STORAGE_CONNECTIONSTRING=your-aeh-storage-connection-string  dotnet-api:latest`\n")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"The ",(0,o.kt)("strong",{parentName:"p"},"COSMOSDB_KEY")," described in the command above has to be passed when running the container. ",(0,o.kt)("strong",{parentName:"p"},"SERVICEBUS_CONNECTIONSTRING")," OR ",(0,o.kt)("strong",{parentName:"p"},"EVENTHUB_CONNECTIONSTRING")," and ",(0,o.kt)("strong",{parentName:"p"},"STORAGE_CONNECTIONSTRING")," are needed based on the configuration and message service you'll be using. Note that the ",(0,o.kt)("strong",{parentName:"p"},"appsettings.json")," value is mounted here for running locally,\nbut not if the full project is deployed to Azure, where the build process will perform the substitution.")))),(0,o.kt)("br",null),(0,o.kt)("details",{open:!0},(0,o.kt)("summary",null,"Verify that the application has started"),(0,o.kt)("div",null,(0,o.kt)("admonition",{title:"Relationship between domain and path",type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Keep in mind that if you've changed the domain (original being ",(0,o.kt)("inlineCode",{parentName:"p"},"Menu"),"), the path will reflect that. If your domain is ",(0,o.kt)("inlineCode",{parentName:"p"},"Foo"),". Then the path will be ",(0,o.kt)("inlineCode",{parentName:"p"},"../v1/foo")," instead of ",(0,o.kt)("inlineCode",{parentName:"p"},"..v1/menu")," etc.")),(0,o.kt)("p",null,"Browse to ",(0,o.kt)("a",{parentName:"p",href:"http://localhost:5000/v1/menu"},"http://localhost:5000/v1/menu"),". This should return a valid JSON response."),(0,o.kt)("p",null,"The application configuration uses Swagger/OAS3 to represent the API endpoints. The Swagger UI can be viewed by directing your\nbrowser to ",(0,o.kt)("a",{parentName:"p",href:"http://localhost:5000/swagger/index.html"},"http://localhost:5000/swagger/index.html"),"."))),(0,o.kt)("br",null))}b.isMDXComponent=!0}}]);