"use strict";(self.webpackChunkstacks=self.webpackChunkstacks||[]).push([[57],{3905:function(t,e,n){n.d(e,{Zo:function(){return c},kt:function(){return d}});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},i=Object.keys(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var p=a.createContext({}),l=function(t){var e=a.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},c=function(t){var e=l(t.components);return a.createElement(p.Provider,{value:e},t.children)},u="mdxType",g={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,i=t.originalType,p=t.parentName,c=s(t,["components","mdxType","originalType","parentName"]),u=l(n),m=r,d=u["".concat(p,".").concat(m)]||u[m]||g[m]||i;return n?a.createElement(d,o(o({ref:e},c),{},{components:n})):a.createElement(d,o({ref:e},c))}));function d(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var p in e)hasOwnProperty.call(e,p)&&(s[p]=e[p]);s.originalType=t,s[u]="string"==typeof t?t:r,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7052:function(t,e,n){n.r(e),n.d(e,{assets:function(){return c},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return u}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],s={},p=void 0,l={unversionedId:"getting_started/azure-react/generator-app-insights-web",id:"getting_started/azure-react/generator-app-insights-web",title:"generator-app-insights-web",description:"@ensono-stacks/azure-react:app-insights-web",source:"@site/docs/getting_started/azure-react/generator-app-insights-web.md",sourceDirName:"getting_started/azure-react",slug:"/getting_started/azure-react/generator-app-insights-web",permalink:"/docs/getting_started/azure-react/generator-app-insights-web",draft:!1,tags:[],version:"current",frontMatter:{}},c={},u=[{value:"@ensono-stacks/azure-react:app-insights-web",id:"ensono-stacksazure-reactapp-insights-web",level:3},{value:"Usage",id:"usage",level:2},{value:"Command line arguments",id:"command-line-arguments",level:3},{value:"Generator Output",id:"generator-output",level:3},{value:"Using Application Insights",id:"using-application-insights",level:3}],g={toc:u},m="wrapper";function d(t){var e=t.components,n=(0,r.Z)(t,o);return(0,i.kt)(m,(0,a.Z)({},g,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"ensono-stacksazure-reactapp-insights-web"},"@ensono-stacks/azure-react:app-insights-web"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Installs and configures a ReactJS Library with App Insights."),(0,i.kt)("p",null,"This enables the following:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Tracking of router changes"),(0,i.kt)("li",{parentName:"ul"},"React components usage statistics")),(0,i.kt)("p",null,"This generator will create a new ReactJS Library with ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@microsoft/applicationinsights-react-js"},"applicationinsights reactjs")," and ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@microsoft/applicationinsights-web"},"applicationinsights web")," npm packages installed and configured for you. This can then be imported an used in an existing ReactJS application."),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"nx generate @ensono-stacks/azure-react:app-insights-web\n")),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"App insights requires the connection string environment variable to be set to the value set within Azure. The name of the connection string variable is set in the generator options ",(0,i.kt)("inlineCode",{parentName:"p"},"--connectionString"),". Please see ",(0,i.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-gb/azure/azure-monitor/app/sdk-connection-string?tabs=net"},"documentation on connection strings")," for more information")),(0,i.kt)("h3",{id:"command-line-arguments"},"Command line arguments"),(0,i.kt)("p",null,"The following command line arguments are available:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Option"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Required"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"--name"),(0,i.kt)("td",{parentName:"tr",align:null},"Library name"),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"Required")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"--connectionString"),(0,i.kt)("td",{parentName:"tr",align:null},"The env variable for the connection string."),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"Required")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"--directory"),(0,i.kt)("td",{parentName:"tr",align:null},"A directory where the lib is placed."),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"Optional")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"--importPath"),(0,i.kt)("td",{parentName:"tr",align:null},"What import path would you like to use for the library?."),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"Optional")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"--tags"),(0,i.kt)("td",{parentName:"tr",align:null},"Add tags to the library (used for linting)."),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"Optional")))),(0,i.kt)("h3",{id:"generator-output"},"Generator Output"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Adds an app insights config file")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="/src/app-insights-config.ts"',title:'"/src/app-insights-config.ts"'},"// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  DistributedTracingModes,\n  IConfig,\n} from '@microsoft/applicationinsights-common';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport type { IConfiguration } from '@microsoft/applicationinsights-core-js';\n\nconst appInsightConfig: IConfiguration & IConfig = {\n  enableAutoRouteTracking: false,\n  enableCorsCorrelation: true,\n  enableRequestHeaderTracking: true,\n  enableResponseHeaderTracking: true,\n  disableFetchTracking: false,\n  distributedTracingMode: DistributedTracingModes.AI_AND_W3C,\n  enableAjaxPerfTracking: true\n};\n\nexport default appInsightConfig;\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Adds a telemetry provider ")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="/src/telemetry-provider.tsx"',title:'"/src/telemetry-provider.tsx"'},"import {\n  ReactPlugin,\n  AppInsightsContext,\n} from '@microsoft/applicationinsights-react-js';\nimport { ApplicationInsights } from '@microsoft/applicationinsights-web';\nimport { FC, ReactNode } from 'react';\n\nimport appInsightConfig from './app-insights-config';\n\nconst reactPlugin = new ReactPlugin();\nconst connectionString = process.env.<%= connectionString %>;\n\nexport const appInsights = new ApplicationInsights({\n  config: {\n    connectionString,\n    ...appInsightConfig,\n    extensions: [reactPlugin],\n  },\n});\n\nif (!appInsights.appInsights.isInitialized()) {\n  appInsights.loadAppInsights();\n}\n\nexport const TelemetryProvider: FC<{ children?: ReactNode }> = ({ children }) => (\n  <AppInsightsContext.Provider value={reactPlugin}>\n    {children}\n  </AppInsightsContext.Provider>\n);\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Installs and adds microsoft applicationinsights packages to package.json")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="/package.json"',title:'"/package.json"'},'  "dependencies": {\n    ...OtherDependencies\n    "@microsoft/applicationinsights-react-js": "3.4.0",\n    "@microsoft/applicationinsights-web": "2.8.9",\n  }\n}\n')),(0,i.kt)("h3",{id:"using-application-insights"},"Using Application Insights"),(0,i.kt)("p",null,"To use the Application Insights react hooks within your application please import the generated library and wrap your application in the TelemetryProvider installed by the generator for example "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},"import NxWelcome from './nx-welcome';\nimport { TelemetryProvider } from 'packages/nameOfGeneratedAppInsightsLibrary/src';\n\nexport function App() {\n    return (\n        <TelemetryProvider>\n            <NxWelcome title=\"welcome title\" />\n            <div />\n        </TelemetryProvider>\n    );\n}\n\nexport default App;\n\n")),(0,i.kt)("p",null,"From here a ",(0,i.kt)("inlineCode",{parentName:"p"},"useAppInsightsContext")," hook will be available to use anywhere within your ReactJS App. For example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'import React from "react";\nimport { useAppInsightsContext } from "@microsoft/applicationinsights-react-js";\n\nconst MyComponent = () => {\n    const appInsights = useAppInsightsContext();\n    const metricData = {\n        average: engagementTime,\n        name: "React Component Engaged Time (seconds)",\n        sampleCount: 1\n      };\n    const additionalProperties = { "Component Name": \'MyComponent\' };\n    appInsights.trackMetric(metricData, additionalProperties);\n    \n    return (\n        <h1>My Component</h1>\n    );\n}\nexport default MyComponent;\n')),(0,i.kt)("p",null,"Full documentation and a getting started guide can be found at ",(0,i.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-gb/azure/azure-monitor/app/javascript-react-plugin"},"React plug-in for Application Insights JavaScript SDK"))))}d.isMDXComponent=!0}}]);