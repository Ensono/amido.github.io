"use strict";(self.webpackChunkstacks=self.webpackChunkstacks||[]).push([[5072],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return y}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),s=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=s(a),d=n,y=u["".concat(p,".").concat(d)]||u[d]||k[d]||i;return a?r.createElement(y,l(l({ref:t},c),{},{components:a})):r.createElement(y,l({ref:t},c))}));function y(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[u]="string"==typeof e?e:n,l[1]=o;for(var s=2;s<i;s++)l[s]=a[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5951:function(e,t,a){a.r(t),a.d(t,{contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return c}});var r=a(7462),n=a(3366),i=(a(7294),a(3905)),l=["components"],o={id:"pysparkle_quickstart",title:"PySparkle",sidebar_label:"Quickstart",hide_title:!1,hide_table_of_contents:!1,description:"PySparkle library overview",keywords:["pysparkle","spark","pyspark","python","etl"]},p=void 0,s={unversionedId:"workloads/azure/data/etl_pipelines/pysparkle/pysparkle_quickstart",id:"workloads/azure/data/etl_pipelines/pysparkle/pysparkle_quickstart",isDocsHomePage:!1,title:"PySparkle",description:"PySparkle library overview",source:"@site/docs/workloads/azure/data/etl_pipelines/pysparkle/pysparkle_quickstart.md",sourceDirName:"workloads/azure/data/etl_pipelines/pysparkle",slug:"/workloads/azure/data/etl_pipelines/pysparkle/pysparkle_quickstart",permalink:"/docs/workloads/azure/data/etl_pipelines/pysparkle/pysparkle_quickstart",tags:[],version:"current",frontMatter:{id:"pysparkle_quickstart",title:"PySparkle",sidebar_label:"Quickstart",hide_title:!1,hide_table_of_contents:!1,description:"PySparkle library overview",keywords:["pysparkle","spark","pyspark","python","etl"]},sidebar:"docs",previous:{title:"Datastacks",permalink:"/docs/workloads/azure/data/etl_pipelines/datastacks"},next:{title:"Data Quality",permalink:"/docs/workloads/azure/data/etl_pipelines/pysparkle/pysparkle_data_quality"}},c=[{value:"Key components",id:"key-components",children:[],level:2},{value:"PySparkle Usage",id:"pysparkle-usage",children:[],level:2},{value:"Prerequisites",id:"prerequisites",children:[],level:2}],u={toc:c},k="wrapper";function d(e){var t=e.components,a=(0,n.Z)(e,l);return(0,i.kt)(k,(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/ensono/stacks-azure-data/tree/main/pysparkle"},"PySparkle")," is a Python library built to streamline\ndata processing workflows with Apache Spark, and is an integral part of the Stacks Data Platform."),(0,i.kt)("h2",{id:"key-components"},"Key components"),(0,i.kt)("p",null,"PySparkle is designed to assist implementing a ",(0,i.kt)("a",{parentName:"p",href:"/docs/workloads/azure/data/etl_pipelines/etl_intro_data_azure#data-pipelines"},"medallion data lake"),".\nThe key components of PySparkle include:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"ETL Transformation Utilities")," which streamline Data Pipelines by:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Offering PySpark utility functions. They accept raw data in various formats (e.g. CSV, Parquet, JSON, Delta)\nand convert it into a structured Delta format. PySparkle also facilitates pre-defined or user-defined transformations\non dataframes."),(0,i.kt)("li",{parentName:"ul"},"Providing storage utilities that ensure smooth and secure interaction with Azure Data Lake and Blob storage."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("a",{parentName:"strong",href:"/docs/workloads/azure/data/etl_pipelines/pysparkle/pysparkle_data_quality"},"Data Quality")),": PySparkle performs data quality checks according to\nuser-provided configurations, ensuring the reliability and accuracy of the data.")),(0,i.kt)("h2",{id:"pysparkle-usage"},"PySparkle Usage"),(0,i.kt)("p",null,"To use PySparkle with Azure Data Lake Storage (ADLS Gen2), ensure that you have the following environment variables set:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"AZURE_TENANT_ID"),": Directory ID for Azure Active Directory application."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"AZURE_CLIENT_ID"),": Application ID for Azure Active Directory application."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"AZURE_CLIENT_SECRET"),": Service Principal Secret."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ADLS_ACCOUNT"),": ADLS account name."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"BLOB_ACCOUNT"),": Blob Storage account name.")),(0,i.kt)("p",null,"To perform data quality checks with PySparkle, you can use the ",(0,i.kt)("a",{parentName:"p",href:"/docs/workloads/azure/data/etl_pipelines/datastacks"},"Datastacks")," CLI:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'datastacks dq --help\ndatastacks dq --config-path "ingest/Ingest_AzureSql_Example/data_quality/ingest_dq.json" --container config\n')),(0,i.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("p",null,"Spark runs on Java 8/11/17, Java 8 prior to version 8u362 support is deprecated as of Spark 3.4.0.\nFor details see: ",(0,i.kt)("a",{parentName:"p",href:"https://spark.apache.org/docs/latest/"},"Spark Documentation"),"."))}d.isMDXComponent=!0}}]);