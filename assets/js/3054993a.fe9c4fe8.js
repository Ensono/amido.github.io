"use strict";(self.webpackChunkstacks=self.webpackChunkstacks||[]).push([[2661,7900],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return k}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),d=r,k=u["".concat(l,".").concat(d)]||u[d]||m[d]||o;return n?a.createElement(k,s(s({ref:t},p),{},{components:n})):a.createElement(k,s({ref:t},p))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:r,s[1]=i;for(var c=2;c<o;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8215:function(e,t,n){var a=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,r=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}},4426:function(e,t,n){n.d(t,{Z:function(){return m}});var a=n(7462),r=n(7294),o=n(2389),s=n(9443);var i=function(){var e=(0,r.useContext)(s.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},l=n(78),c=n(6010),p="tabItem_vU9c";function u(e){var t,n,a,o=e.lazy,s=e.block,u=e.defaultValue,m=e.values,d=e.groupId,k=e.className,g=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=m?m:g.map((function(e){var t=e.props;return{value:t.value,label:t.label}})),f=(0,l.lx)(h,(function(e,t){return e.value===t.value}));if(f.length>0)throw new Error('Docusaurus error: Duplicate values "'+f.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var v=null===u?u:null!=(t=null!=u?u:null==(n=g.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(a=g[0])?void 0:a.props.value;if(null!==v&&!h.some((function(e){return e.value===v})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var w=i(),y=w.tabGroupChoices,b=w.setTabGroupChoices,N=(0,r.useState)(v),x=N[0],C=N[1],T=[],j=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=d){var O=y[d];null!=O&&O!==x&&h.some((function(e){return e.value===O}))&&C(O)}var E=function(e){var t=e.currentTarget,n=T.indexOf(t),a=h[n].value;a!==x&&(j(t),C(a),null!=d&&b(d,a))},z=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a=T.indexOf(e.currentTarget)+1;n=T[a]||T[0];break;case"ArrowLeft":var r=T.indexOf(e.currentTarget)-1;n=T[r]||T[T.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,c.Z)("tabs",{"tabs--block":s},k)},h.map((function(e){var t=e.value,n=e.label;return r.createElement("li",{role:"tab",tabIndex:x===t?0:-1,"aria-selected":x===t,className:(0,c.Z)("tabs__item",p,{"tabs__item--active":x===t}),key:t,ref:function(e){return T.push(e)},onKeyDown:z,onFocus:E,onClick:E},null!=n?n:t)}))),o?(0,r.cloneElement)(g.filter((function(e){return e.props.value===x}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},g.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==x})}))))}function m(e){var t=(0,o.Z)();return r.createElement(u,(0,a.Z)({key:String(t)},e))}},9443:function(e,t,n){var a=(0,n(7294).createContext)(void 0);t.Z=a},678:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return p},default:function(){return m}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),s=["components"],i={},l=void 0,c={unversionedId:"nx/workspace/init",id:"nx/workspace/init",isDocsHomePage:!1,title:"init",description:"@ensono-stacks/workspace:init",source:"@site/docs/nx/workspace/init.md",sourceDirName:"nx/workspace",slug:"/nx/workspace/init",permalink:"/docs/nx/workspace/init",tags:[],version:"current",frontMatter:{}},p=[{value:"@ensono-stacks/workspace:init",id:"ensono-stacksworkspaceinit",children:[],level:3},{value:"Usage",id:"usage",children:[{value:"Command line arguments",id:"command-line-arguments",children:[],level:3},{value:"Generator Output",id:"generator-output",children:[{value:"Commit management",id:"commit-management",children:[],level:4},{value:"Code quality management",id:"code-quality-management",children:[],level:4}],level:3}],level:2}],u={toc:p};function m(e){var t=e.components,n=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"ensono-stacksworkspaceinit"},"@ensono-stacks/workspace:init"),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Set up libraries to manage code & commit quality"),"Set up libraries to manage code & commit quality, keeping projects consistent and will generally be useful in any workspace.",(0,o.kt)("p",null,"Allows you to choose your recommended 3rd party provider options."),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,"Initialise your NX workspace with stacks with the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nx g @ensono-stacks/workspace:init\n")),(0,o.kt)("h3",{id:"command-line-arguments"},"Command line arguments"),(0,o.kt)("p",null,"Interactive options can instead be passed via the command line:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Option"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Accepted Values"),(0,o.kt)("th",{parentName:"tr",align:null},"Default"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"--husky"),(0,o.kt)("td",{parentName:"tr",align:null},"Install & configure husky"),(0,o.kt)("td",{parentName:"tr",align:null},"boolean"),(0,o.kt)("td",{parentName:"tr",align:null},"[true, false]"),(0,o.kt)("td",{parentName:"tr",align:null},"true")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"--commitizen"),(0,o.kt)("td",{parentName:"tr",align:null},"Install & configure commitizen"),(0,o.kt)("td",{parentName:"tr",align:null},"boolean"),(0,o.kt)("td",{parentName:"tr",align:null},"[true, false]"),(0,o.kt)("td",{parentName:"tr",align:null},"true")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"--eslint"),(0,o.kt)("td",{parentName:"tr",align:null},"Install & configure eslint"),(0,o.kt)("td",{parentName:"tr",align:null},"boolean"),(0,o.kt)("td",{parentName:"tr",align:null},"[true, false]"),(0,o.kt)("td",{parentName:"tr",align:null},"true")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"--pipelineRunner"),(0,o.kt)("td",{parentName:"tr",align:null},"Which pipeline runner to use"),(0,o.kt)("td",{parentName:"tr",align:null},"enum"),(0,o.kt)("td",{parentName:"tr",align:null},"[taskctl, none]"),(0,o.kt)("td",{parentName:"tr",align:null},"taskctl")))),(0,o.kt)("h3",{id:"generator-output"},"Generator Output"),(0,o.kt)("p",null,"Files updated: package.json"),(0,o.kt)("p",null,"Files created:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cs"},"\u251c\u2500\u2500 workspace root\n\u2502   \u251c\u2500\u2500 .husky\n\u2502   \u251c\u2500\u2500 \u251c\u2500\u2500 commit-msg\n\u2502   \u251c\u2500\u2500 \u251c\u2500\u2500 pre-commit\n\u2502   \u251c\u2500\u2500 \u251c\u2500\u2500 prepare-commit-msg\n\u2502   \u251c\u2500\u2500 .eslintrc.json\n\u2502   \u251c\u2500\u2500 commitlint.config.js\n\u2502   \u251c\u2500\u2500 tsconfig.base.json\n")),(0,o.kt)("p",null,"If ",(0,o.kt)("inlineCode",{parentName:"p"},"--pipelineRunner=taskctl")," is passed, the generator will also create a ",(0,o.kt)("inlineCode",{parentName:"p"},"build")," directory:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cs"},"\u251c\u2500\u2500 workspace root\n\u2502   \u251c\u2500\u2500 build\n\u2502   \u251c\u2500\u2500 \u251c\u2500\u2500 azDevOps\n\u2502   \u251c\u2500\u2500 \u251c\u2500\u2500 \u251c\u2500\u2500 azuredevops-runner.yaml - Azure Devops pipeline definition. Consumes `stages` and `vars` files in this directory\n\u2502   \u251c\u2500\u2500 \u251c\u2500\u2500 \u251c\u2500\u2500 azuredevops-stages.yaml - Azure Devops pipeline stages\n\u2502   \u251c\u2500\u2500 \u251c\u2500\u2500 \u251c\u2500\u2500 azuredevops-vars.yaml - Azure Devops variable definitions required by the pipeline\n\u2502   \u251c\u2500\u2500 \u251c\u2500\u2500 taskctl\n\u2502   \u251c\u2500\u2500 \u251c\u2500\u2500 \u251c\u2500\u2500 contexts.yaml - Context definitions for taskctl\n\u2502   \u251c\u2500\u2500 \u251c\u2500\u2500 \u251c\u2500\u2500 tasks.yaml - Task definitions for taskctl to be consumed by the pipeline\n")),(0,o.kt)("p",null,"This sets up a CI/CD pipeline to provide a smooth collaborative workflow."),(0,o.kt)("p",null,"Currently supported pipeline tools are ",(0,o.kt)("a",{parentName:"p",href:"https://azure.microsoft.com/en-gb/products/devops/"},"Azure Devops")," and ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/taskctl/taskctl"},"taskctl"),"."),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"build")," files will only be generated if required project values have been collected from the ",(0,o.kt)("a",{parentName:"p",href:"/docs/nx/nx_stacks#option-1-stacks-cli"},"Stacks CLI")," or through the ",(0,o.kt)("a",{parentName:"p",href:"/docs/nx/nx_stacks#option-2-create-stacks-workspace-generator"},"@ensono-stacks/create-stacks-workspace")," plugin. "))),(0,o.kt)("h4",{id:"commit-management"},"Commit management"),(0,o.kt)("p",null,"Keeping commits well-structured and clear is key to enabling collaboration on a project. This generator initialises three tools to empower consistent commits:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/commitizen"},"Commitizen")," - Interactive tool that helps to build constructive messages on commit. The generator adds commitizen config to the package.json:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Commitizen config"',title:'"Commitizen','config"':!0},'"config": {\n    "commitizen": {\n        "path": "@commitlint/cz-commit-lint"\n    }\n  }\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://commitlint.js.org/"},"Commitlint")," - Standardised commit message format to make reading commit history easy. The generator installs Commitlint and uses it for commitizen config."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://typicode.github.io/husky/#/"},"Husky")," - Git hook management tool. The generator adds a ",(0,o.kt)("inlineCode",{parentName:"li"},"prepare")," script to ensure husky is always installed:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Husky install script"',title:'"Husky',install:!0,'script"':!0},'"scripts": {\n    "prepare": "husky install"\n  },\n')),(0,o.kt)("p",null,"It also adds commitizen to the git ",(0,o.kt)("inlineCode",{parentName:"p"},"prepare-commit-msg")," script, and Commitlint to the ",(0,o.kt)("inlineCode",{parentName:"p"},"commit-msg"),". This means that you can simply run ",(0,o.kt)("inlineCode",{parentName:"p"},"git commit")," and get the benefits of both tools."),(0,o.kt)("h4",{id:"code-quality-management"},"Code quality management"),(0,o.kt)("p",null,"Stacks projects use ESLint and Typescript to help maintain code quality. Using the same config in every Stacks project ensures consistency and allows developers to more easily onboard onto new projects."),(0,o.kt)("p",null,"This generator creates config files for both Typescript and ESLint and installs the relevant dependencies.")))}m.isMDXComponent=!0},5972:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return p},contentTitle:function(){return u},metadata:function(){return m},toc:function(){return d},default:function(){return g}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),s=n(678),i=n(4426),l=n(8215),c=["components"],p={id:"ensono-stacks-workspace",title:"@ensono-stacks/workspace",sidebar_label:"@ensono-stacks/workspace",description:"Using the workspace with stacks!",keywords:["Nx","monorepo","stacks","ensono","workspace","generator","executor"]},u=void 0,m={unversionedId:"nx/workspace/ensono-stacks-workspace",id:"nx/workspace/ensono-stacks-workspace",isDocsHomePage:!1,title:"@ensono-stacks/workspace",description:"Using the workspace with stacks!",source:"@site/docs/nx/workspace/plugin-information.md",sourceDirName:"nx/workspace",slug:"/nx/workspace/ensono-stacks-workspace",permalink:"/docs/nx/workspace/ensono-stacks-workspace",tags:[],version:"current",frontMatter:{id:"ensono-stacks-workspace",title:"@ensono-stacks/workspace",sidebar_label:"@ensono-stacks/workspace",description:"Using the workspace with stacks!",keywords:["Nx","monorepo","stacks","ensono","workspace","generator","executor"]},sidebar:"docs",previous:{title:"@ensono-stacks/create-stacks-workspace",permalink:"/docs/nx/create-stacks-workspace/ensono-stacks-create-stacks-workspace"},next:{title:"@ensono-stacks/next",permalink:"/docs/nx/next/ensono-stacks-next"}},d=[{value:"Setting up @ensono-stacks/workspace",id:"setting-up-ensono-stacksworkspace",children:[],level:2},{value:"Executors and Generators",id:"executors-and-generators",children:[{value:"Generators",id:"generators",children:[],level:3}],level:2}],k={toc:d};function g(e){var t=e.components,n=(0,r.Z)(e,c);return(0,o.kt)("wrapper",(0,a.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"@ensono-stacks/workspace")," plugin contains generators to manage the Nx workspace itself. These will often be useful in any workspace, regardless of the specific apps or libraries it contains."),(0,o.kt)("p",null,"Using a standard setup for workspaces ensures consistency across projects and allows developers to easily onboard onto new projects."),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"This plugin will automatically be installed and configured if creating a stacks workspace with the ",(0,o.kt)("a",{parentName:"p",href:"/docs/nx/nx_stacks#option-1-stacks-cli"},"Stacks CLI")," or ",(0,o.kt)("a",{parentName:"p",href:"/docs/nx/nx_stacks#option-2-create-stacks-workspace-generator"},"@ensono-stacks/create-stacks-workspace")))),(0,o.kt)("h2",{id:"setting-up-ensono-stacksworkspace"},"Setting up @ensono-stacks/workspace"),(0,o.kt)("p",null,"Install the ",(0,o.kt)("inlineCode",{parentName:"p"},"@ensono-stacks/workspace")," with the following command:"),(0,o.kt)(i.Z,{mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"npm",label:"npm",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --save-dev @ensono-stacks/workspace@latest\n"))),(0,o.kt)(l.Z,{value:"yarn",label:"yarn",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add --dev @ensono-stacks/workspace@latest\n")))),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"@ensono-stacks/workspace")," depends on the ",(0,o.kt)("inlineCode",{parentName:"p"},"@ensono-stacks/core")," plugin."),(0,o.kt)("h2",{id:"executors-and-generators"},"Executors and Generators"),(0,o.kt)("p",null,"To see a list of the plugin capabilities run the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nx list @ensono-stacks/workspace\n")),(0,o.kt)("p",null,"View additional information about a plugin capability through the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nx g @ensono-stacks/workspace:[generator-executor-name] --help\n")),(0,o.kt)("h3",{id:"generators"},"Generators"),(0,o.kt)(s.default,{mdxType:"Init"}))}g.isMDXComponent=!0}}]);