(window.webpackJsonp=window.webpackJsonp||[]).push([[38,80,110],{126:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return u})),a.d(t,"metadata",(function(){return p})),a.d(t,"rightToc",(function(){return b})),a.d(t,"default",(function(){return m}));var n=a(2),r=a(6),s=(a(0),a(199)),i=a(51),o=a(206),l=a(207),c=a(53),u={id:"execute_karate_api_tests",title:"Running API tests with Karate",sidebar_label:"REST API testing with Karate",description:"How to test rest api application with karate",keywords:["java","rest","api","karate","run karate tests","karate test example","test runner","karate test report","execute parallel tests","framework","testing","test"]},p={unversionedId:"workloads/azure/backend/java/testing/execute_karate_api_tests",id:"workloads/azure/backend/java/testing/execute_karate_api_tests",isDocsHomePage:!1,title:"Running API tests with Karate",description:"How to test rest api application with karate",source:"@site/docs/workloads/azure/backend/java/testing/execute_karate_api_tests.md",slug:"/workloads/azure/backend/java/testing/execute_karate_api_tests",permalink:"/docs/workloads/azure/backend/java/testing/execute_karate_api_tests",version:"current",sidebar_label:"REST API testing with Karate",sidebar:"docs",previous:{title:"Running API tests with Serenity",permalink:"/docs/workloads/azure/backend/java/testing/execute_serenity_api_tests"},next:{title:"Introduction to the .NET Core REST API application",permalink:"/docs/workloads/azure/backend/netcore/introduction_netcore"}},b=[{value:"Getting Started",id:"getting-started",children:[{value:"Prerequisites",id:"prerequisites",children:[]}]},{value:"Running the tests",id:"running-the-tests",children:[{value:"Run the specific feature by tag option",id:"run-the-specific-feature-by-tag-option",children:[]},{value:"Switching the Environment",id:"switching-the-environment",children:[]}]},{value:"Running tests in parallel",id:"running-tests-in-parallel",children:[{value:"@parallel=false",id:"parallelfalse",children:[]},{value:"Parallel Stats",id:"parallel-stats",children:[]},{value:"Test Reports",id:"test-reports",children:[]}]}],d={rightToc:b};function m(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(s.b)("wrapper",Object(n.a)({},d,a,{components:t,mdxType:"MDXLayout"}),Object(s.b)("p",null,'Karate is an open-source general-purpose test-automation framework that can script calls to HTTP end-points and assert that the JSON or XML responses are as expected. Karate also has support for service-virtualization where it can bring up "mock" (or stub) servers which can substitute for web-services that need to participate in an integration-test. Karate\'s capabilities include being able to run tests in parallel, HTML reports and compatibility with Continuous Integration tools.'),Object(s.b)("h2",{id:"getting-started"},"Getting Started"),Object(s.b)("p",null,"This page explains how to setup the API testing framework built with Java and Karate."),Object(s.b)(c.default,{url:"https://vimeo.com/486755267",mdxType:"ResponsivePlayer"}),Object(s.b)("h3",{id:"prerequisites"},"Prerequisites"),Object(s.b)("p",null,"Set an environment variable named ",Object(s.b)("inlineCode",{parentName:"p"},"BASE_URL")," (e.g. if testing locally set it to ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"http://localhost:9000"}),"http://localhost:9000"),") or use the ",Object(s.b)("inlineCode",{parentName:"p"},"export BASE_URL=http://localhost:9000")," command."),Object(s.b)("h2",{id:"running-the-tests"},"Running the tests"),Object(s.b)("p",null,"To run all functional tests please navigate to ",Object(s.b)("inlineCode",{parentName:"p"},"./api-tests-karate")," path and execute the following command:"),Object(s.b)(o.a,{groupId:"operating-systems",defaultValue:"unix",values:[{label:"Unix",value:"unix"},{label:"Windows",value:"windows"}],mdxType:"Tabs"},Object(s.b)(l.a,{value:"unix",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"./mvnw test -Dtest=RunFunctionalTests\n"))),Object(s.b)(l.a,{value:"windows",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"mvnw.cmd test -Dtest=RunFunctionalTests\n")))),Object(s.b)("p",null," To run the Smoke tests independently, use:"),Object(s.b)(o.a,{groupId:"operating-systems",defaultValue:"unix",values:[{label:"Unix",value:"unix"},{label:"Windows",value:"windows"}],mdxType:"Tabs"},Object(s.b)(l.a,{value:"unix",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"./mvnw test -Dtest=RunSmokeTests\n"))),Object(s.b)(l.a,{value:"windows",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"mvnw.cmd test -Dtest=RunSmokeTests\n")))),Object(s.b)("p",null," Run Functional tests on the specific environment, use:"),Object(s.b)(o.a,{groupId:"operating-systems",defaultValue:"unix",values:[{label:"Unix",value:"unix"},{label:"Windows",value:"windows"}],mdxType:"Tabs"},Object(s.b)(l.a,{value:"unix",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"./mvnw test -Dtest=RunFunctionalTests -Dkarate.env=local\n"))),Object(s.b)(l.a,{value:"windows",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"mvnw.cmd test -Dtest=RunFunctionalTests -Dkarate.env=local\n")))),Object(s.b)("h3",{id:"run-the-specific-feature-by-tag-option"},"Run the specific feature by tag option"),Object(s.b)("p",null,"Karate allows running tests by a ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"https://intuit.github.io/karate/#tags"}),"specific tag"),". To do that please set your tag to the specific feature or test, and then specify it in the Runner Class as follows:"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),'    @Karate.Test\n    Karate testFullPath() {\n        return Karate.run("classpath:PATH_TO_THE_FEATURE/FEATURE_NAME.feature").tags("@TAG");\n    }\n')),Object(s.b)("h3",{id:"switching-the-environment"},"Switching the Environment"),Object(s.b)("p",null,"There is only one thing you need to do to switch the environment - which is to set a Java system property.\nBy default, the value of karate.env when you access it within karate-config.js - is base_url value taken from the environment variables"),Object(s.b)("h2",{id:"running-tests-in-parallel"},"Running tests in parallel"),Object(s.b)("p",null,"Choosing the right forking strategy and parallel execution settings can have a substantial impact on the memory requirements and the execution time of the build system.\nThe tests can be easily grouped in features and tags to run and compose test-suites in a very flexible manner."),Object(s.b)("h3",{id:"parallelfalse"},"@parallel=false"),Object(s.b)("p",null,"In rare cases you may want to suppress the default of Scenario-s executing in parallel and the special tag @parallel=false can be used. If you place it above the Feature keyword, it will apply to all Scenario-s. And if you just want one or two Scenario-s to NOT run in parallel, you can place this tag above only those Scenario-s."),Object(s.b)("h3",{id:"parallel-stats"},"Parallel Stats"),Object(s.b)("p",null,"For convenience, some stats are logged to the console when execution completes, which should look something like this:"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"======================================================\nelapsed:   2.35 | threads:    5 | thread time: 4.98\nfeatures:    54 | ignored:   25 | efficiency: 0.42\nscenarios:  145 | passed:   145 | failed: 0\n======================================================\n")),Object(s.b)("h4",{id:"note"},"Note"),Object(s.b)("p",null,' Any *.feature file tagged as @ignore will be skipped - as the ~ prefix means a "NOT" operation.\nYou can also specify tags on the command-line. The tags() method from test runner class also takes multiple arguments,for e.g.'),Object(s.b)("p",null," ",Object(s.b)("inlineCode",{parentName:"p"},'this is an "AND" operation: tags("@customer", "@smoke", "~@ignoredTags")')),Object(s.b)("p",null," ",Object(s.b)("inlineCode",{parentName:"p"},'and this is an "OR" operation: tags("@customer, @smoke, ~@ignoredTags")')),Object(s.b)("p",null," The more threads are used, the higher the chances of sporadic, hard-to-reproduce test failures due to timeouts, test data clean up, and other related issues.\nThe added performance gain of each thread also tends to drop off for higher numbers of threads."),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-java"}),'class Runner {\n    @Test\n    void run() {\n        Results results = Runner.path("classpath:PATH_TO_FUTURE_OR_PACKAGE").tags("~@ignoredTags", "@YourTag").parallel(1);\n        assertEquals(0, results.getFailCount(), results.getErrorMessages());\n    }\n}\n')),Object(s.b)("h3",{id:"test-reports"},"Test Reports"),Object(s.b)("p",null," As a result of the test execution - karate will automatically generate the test report - ",Object(s.b)("inlineCode",{parentName:"p"},"target/surefire-reports/karate-summary.html"),"."),Object(s.b)(i.default,{next:!0,mdxType:"HideNavigation"}))}m.isMDXComponent=!0},199:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return m}));var n=a(0),r=a.n(n);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=r.a.createContext({}),u=function(e){var t=r.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=u(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,s=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(a),d=n,m=p["".concat(i,".").concat(d)]||p[d]||b[d]||s;return a?r.a.createElement(m,o(o({ref:t},c),{},{components:a})):r.a.createElement(m,o({ref:t},c))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=a.length,i=new Array(s);i[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var c=2;c<s;c++)i[c]=a[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"},201:function(e,t,a){"use strict";function n(e){var t,a,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(a=n(e[t]))&&(r&&(r+=" "),r+=a);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}t.a=function(){for(var e,t,a=0,r="";a<arguments.length;)(e=arguments[a++])&&(t=n(e))&&(r&&(r+=" "),r+=t);return r}},203:function(e,t,a){"use strict";var n=a(0),r=Object(n.createContext)(void 0);t.a=r},204:function(e,t,a){"use strict";var n=a(0),r=a(203);t.a=function(){var e=Object(n.useContext)(r.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},206:function(e,t,a){"use strict";var n=a(0),r=a.n(n),s=a(204),i=a(201),o=a(52),l=a.n(o),c=37,u=39;t.a=function(e){var t=e.block,a=e.children,o=e.defaultValue,p=e.values,b=e.groupId,d=Object(s.a)(),m=d.tabGroupChoices,f=d.setTabGroupChoices,h=Object(n.useState)(o),g=h[0],v=h[1],O=Object(n.useState)(!1),y=O[0],j=O[1];if(null!=b){var w=m[b];null!=w&&w!==g&&p.some((function(e){return e.value===w}))&&v(w)}var T=function(e){v(e),null!=b&&f(b,e)},k=[],x=function(e){e.metaKey||e.altKey||e.ctrlKey||j(!0)},_=function(){j(!1)};return Object(n.useEffect)((function(){window.addEventListener("keydown",x),window.addEventListener("mousedown",_)}),[]),r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(i.a)("tabs",{"tabs--block":t})},p.map((function(e){var t=e.value,a=e.label;return r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":g===t,className:Object(i.a)("tabs__item",l.a.tabItem,{"tabs__item--active":g===t}),style:y?{}:{outline:"none"},key:t,ref:function(e){return k.push(e)},onKeyDown:function(e){!function(e,t,a){switch(a.keyCode){case u:!function(e,t){var a=e.indexOf(t)+1;e[a]?e[a].focus():e[0].focus()}(e,t);break;case c:!function(e,t){var a=e.indexOf(t)-1;e[a]?e[a].focus():e[e.length-1].focus()}(e,t)}}(k,e.target,e),x(e)},onFocus:function(){return T(t)},onClick:function(){T(t),j(!1)},onPointerDown:function(){return j(!1)}},a)}))),r.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},n.Children.toArray(a).filter((function(e){return e.props.value===g}))[0]))}},207:function(e,t,a){"use strict";var n=a(0),r=a.n(n);t.a=function(e){return r.a.createElement("div",null,e.children)}},51:function(e,t,a){"use strict";a.r(t);var n=a(0),r=a.n(n);t.default=function(e){var t=e.next,a=e.prev;return r.a.useEffect((function(){if(t){var e=document.querySelector("div.pagination-nav__item.pagination-nav__item--next>a");e&&e.style&&(e.style.display="none")}if(a){var n=document.querySelector("div.pagination-nav__item>a");n&&n.style&&(n.style.display="none")}})),r.a.createElement("div",null)}},53:function(e,t,a){"use strict";a.r(t);var n=a(0),r=a.n(n),s=a(210),i=a.n(s),o=a(54),l=a.n(o);t.default=function(e){var t=e.url;return r.a.createElement("div",{className:l.a.playerSection},r.a.createElement("div",{className:l.a.playerWrapper},r.a.createElement(i.a,{className:l.a.player,url:t,controls:!0,width:"100%",height:"100%",config:{}})))}}}]);